{"version":3,"file":"olms.js","sources":["../node_modules/@maplibre/maplibre-gl-style-spec/dist/index.mjs","../node_modules/mapbox-to-css-font/index.js","../src/mapbox.js","../src/util.js","../src/text.js","../src/stylefunction.js","../src/shaders.js","../src/apply.js","../src/MapboxVectorLayer.js"],"sourcesContent":["var $version = 8;\nvar $root = {\n\tversion: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: [\n\t\t\t8\n\t\t]\n\t},\n\tname: {\n\t\ttype: \"string\"\n\t},\n\tmetadata: {\n\t\ttype: \"*\"\n\t},\n\tcenter: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\"\n\t},\n\tcenterAltitude: {\n\t\ttype: \"number\"\n\t},\n\tzoom: {\n\t\ttype: \"number\"\n\t},\n\tbearing: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\"\n\t},\n\tpitch: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"degrees\"\n\t},\n\troll: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"degrees\"\n\t},\n\tlight: {\n\t\ttype: \"light\"\n\t},\n\tsky: {\n\t\ttype: \"sky\"\n\t},\n\tprojection: {\n\t\ttype: \"projection\"\n\t},\n\tterrain: {\n\t\ttype: \"terrain\"\n\t},\n\tsources: {\n\t\trequired: true,\n\t\ttype: \"sources\"\n\t},\n\tsprite: {\n\t\ttype: \"sprite\"\n\t},\n\tglyphs: {\n\t\ttype: \"string\"\n\t},\n\ttransition: {\n\t\ttype: \"transition\"\n\t},\n\tlayers: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tvalue: \"layer\"\n\t}\n};\nvar sources = {\n\t\"*\": {\n\t\ttype: \"source\"\n\t}\n};\nvar source = [\n\t\"source_vector\",\n\t\"source_raster\",\n\t\"source_raster_dem\",\n\t\"source_geojson\",\n\t\"source_video\",\n\t\"source_image\"\n];\nvar source_vector = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvector: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tscheme: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\txyz: {\n\t\t\t},\n\t\t\ttms: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"xyz\"\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tpromoteId: {\n\t\ttype: \"promoteId\"\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_raster = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\traster: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\ttileSize: {\n\t\ttype: \"number\",\n\t\t\"default\": 512,\n\t\tunits: \"pixels\"\n\t},\n\tscheme: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\txyz: {\n\t\t\t},\n\t\t\ttms: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"xyz\"\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_raster_dem = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\t\"raster-dem\": {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\ttileSize: {\n\t\ttype: \"number\",\n\t\t\"default\": 512,\n\t\tunits: \"pixels\"\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tencoding: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tterrarium: {\n\t\t\t},\n\t\t\tmapbox: {\n\t\t\t},\n\t\t\tcustom: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"mapbox\"\n\t},\n\tredFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tblueFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tgreenFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tbaseShift: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_geojson = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tgeojson: {\n\t\t\t}\n\t\t}\n\t},\n\tdata: {\n\t\trequired: true,\n\t\ttype: \"*\"\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 18\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tbuffer: {\n\t\ttype: \"number\",\n\t\t\"default\": 128,\n\t\tmaximum: 512,\n\t\tminimum: 0\n\t},\n\tfilter: {\n\t\ttype: \"*\"\n\t},\n\ttolerance: {\n\t\ttype: \"number\",\n\t\t\"default\": 0.375\n\t},\n\tcluster: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tclusterRadius: {\n\t\ttype: \"number\",\n\t\t\"default\": 50,\n\t\tminimum: 0\n\t},\n\tclusterMaxZoom: {\n\t\ttype: \"number\"\n\t},\n\tclusterMinPoints: {\n\t\ttype: \"number\"\n\t},\n\tclusterProperties: {\n\t\ttype: \"*\"\n\t},\n\tlineMetrics: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tgenerateId: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tpromoteId: {\n\t\ttype: \"promoteId\"\n\t}\n};\nvar source_video = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvideo: {\n\t\t\t}\n\t\t}\n\t},\n\turls: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tcoordinates: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tlength: 4,\n\t\tvalue: {\n\t\t\ttype: \"array\",\n\t\t\tlength: 2,\n\t\t\tvalue: \"number\"\n\t\t}\n\t}\n};\nvar source_image = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\timage: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\trequired: true,\n\t\ttype: \"string\"\n\t},\n\tcoordinates: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tlength: 4,\n\t\tvalue: {\n\t\t\ttype: \"array\",\n\t\t\tlength: 2,\n\t\t\tvalue: \"number\"\n\t\t}\n\t}\n};\nvar layer = {\n\tid: {\n\t\ttype: \"string\",\n\t\trequired: true\n\t},\n\ttype: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tfill: {\n\t\t\t},\n\t\t\tline: {\n\t\t\t},\n\t\t\tsymbol: {\n\t\t\t},\n\t\t\tcircle: {\n\t\t\t},\n\t\t\theatmap: {\n\t\t\t},\n\t\t\t\"fill-extrusion\": {\n\t\t\t},\n\t\t\traster: {\n\t\t\t},\n\t\t\thillshade: {\n\t\t\t},\n\t\t\tbackground: {\n\t\t\t}\n\t\t},\n\t\trequired: true\n\t},\n\tmetadata: {\n\t\ttype: \"*\"\n\t},\n\tsource: {\n\t\ttype: \"string\"\n\t},\n\t\"source-layer\": {\n\t\ttype: \"string\"\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\tmaximum: 24\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\tmaximum: 24\n\t},\n\tfilter: {\n\t\ttype: \"filter\"\n\t},\n\tlayout: {\n\t\ttype: \"layout\"\n\t},\n\tpaint: {\n\t\ttype: \"paint\"\n\t}\n};\nvar layout = [\n\t\"layout_fill\",\n\t\"layout_line\",\n\t\"layout_circle\",\n\t\"layout_heatmap\",\n\t\"layout_fill-extrusion\",\n\t\"layout_symbol\",\n\t\"layout_raster\",\n\t\"layout_hillshade\",\n\t\"layout_background\"\n];\nvar layout_background = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_fill = {\n\t\"fill-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_circle = {\n\t\"circle-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_heatmap = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_line = {\n\t\"line-cap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tbutt: {\n\t\t\t},\n\t\t\tround: {\n\t\t\t},\n\t\t\tsquare: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"butt\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-join\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tbevel: {\n\t\t\t},\n\t\t\tround: {\n\t\t\t},\n\t\t\tmiter: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"miter\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-miter-limit\": {\n\t\ttype: \"number\",\n\t\t\"default\": 2,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"line-join\": \"miter\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-round-limit\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1.05,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"line-join\": \"round\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_symbol = {\n\t\"symbol-placement\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tpoint: {\n\t\t\t},\n\t\t\tline: {\n\t\t\t},\n\t\t\t\"line-center\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"point\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-spacing\": {\n\t\ttype: \"number\",\n\t\t\"default\": 250,\n\t\tminimum: 1,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"symbol-placement\": \"line\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-avoid-edges\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"symbol-z-order\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tauto: {\n\t\t\t},\n\t\t\t\"viewport-y\": {\n\t\t\t},\n\t\t\tsource: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-allow-overlap\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t{\n\t\t\t\t\"!\": \"icon-overlap\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-overlap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnever: {\n\t\t\t},\n\t\t\talways: {\n\t\t\t},\n\t\t\tcooperative: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-ignore-placement\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-optional\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-rotation-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-size\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tunits: \"factor of the original icon size\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-text-fit\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnone: {\n\t\t\t},\n\t\t\twidth: {\n\t\t\t},\n\t\t\theight: {\n\t\t\t},\n\t\t\tboth: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"none\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-text-fit-padding\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"icon-text-fit\": [\n\t\t\t\t\t\"both\",\n\t\t\t\t\t\"width\",\n\t\t\t\t\t\"height\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-image\": {\n\t\ttype: \"resolvedImage\",\n\t\ttokens: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-padding\": {\n\t\ttype: \"padding\",\n\t\t\"default\": [\n\t\t\t2\n\t\t],\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-keep-upright\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t{\n\t\t\t\t\"icon-rotation-alignment\": \"map\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-offset\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-rotation-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\t\"viewport-glyph\": {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-field\": {\n\t\ttype: \"formatted\",\n\t\t\"default\": \"\",\n\t\ttokens: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-font\": {\n\t\ttype: \"array\",\n\t\tvalue: \"string\",\n\t\t\"default\": [\n\t\t\t\"Open Sans Regular\",\n\t\t\t\"Arial Unicode MS Regular\"\n\t\t],\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-size\": {\n\t\ttype: \"number\",\n\t\t\"default\": 16,\n\t\tminimum: 0,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-max-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 10,\n\t\tminimum: 0,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-line-height\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1.2,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-letter-spacing\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-justify\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tauto: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-radial-offset\": {\n\t\ttype: \"number\",\n\t\tunits: \"ems\",\n\t\t\"default\": 0,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\t\"property-type\": \"data-driven\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t}\n\t},\n\t\"text-variable-anchor\": {\n\t\ttype: \"array\",\n\t\tvalue: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-variable-anchor-offset\": {\n\t\ttype: \"variableAnchorOffsetCollection\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-variable-anchor\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-max-angle\": {\n\t\ttype: \"number\",\n\t\t\"default\": 45,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-writing-mode\": {\n\t\ttype: \"array\",\n\t\tvalue: \"enum\",\n\t\tvalues: {\n\t\t\thorizontal: {\n\t\t\t},\n\t\t\tvertical: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-padding\": {\n\t\ttype: \"number\",\n\t\t\"default\": 2,\n\t\tminimum: 0,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-keep-upright\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"text-rotation-alignment\": \"map\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-transform\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnone: {\n\t\t\t},\n\t\t\tuppercase: {\n\t\t\t},\n\t\t\tlowercase: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"none\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-offset\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tunits: \"ems\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-radial-offset\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-allow-overlap\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-overlap\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-overlap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnever: {\n\t\t\t},\n\t\t\talways: {\n\t\t\t},\n\t\t\tcooperative: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-ignore-placement\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-optional\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_raster = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_hillshade = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar filter = {\n\ttype: \"array\",\n\tvalue: \"*\"\n};\nvar filter_operator = {\n\ttype: \"enum\",\n\tvalues: {\n\t\t\"==\": {\n\t\t},\n\t\t\"!=\": {\n\t\t},\n\t\t\">\": {\n\t\t},\n\t\t\">=\": {\n\t\t},\n\t\t\"<\": {\n\t\t},\n\t\t\"<=\": {\n\t\t},\n\t\t\"in\": {\n\t\t},\n\t\t\"!in\": {\n\t\t},\n\t\tall: {\n\t\t},\n\t\tany: {\n\t\t},\n\t\tnone: {\n\t\t},\n\t\thas: {\n\t\t},\n\t\t\"!has\": {\n\t\t}\n\t}\n};\nvar geometry_type = {\n\ttype: \"enum\",\n\tvalues: {\n\t\tPoint: {\n\t\t},\n\t\tLineString: {\n\t\t},\n\t\tPolygon: {\n\t\t}\n\t}\n};\nvar function_stop = {\n\ttype: \"array\",\n\tminimum: 0,\n\tmaximum: 24,\n\tvalue: [\n\t\t\"number\",\n\t\t\"color\"\n\t],\n\tlength: 2\n};\nvar expression$1 = {\n\ttype: \"array\",\n\tvalue: \"*\",\n\tminimum: 1\n};\nvar light = {\n\tanchor: {\n\t\ttype: \"enum\",\n\t\t\"default\": \"viewport\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t},\n\tposition: {\n\t\ttype: \"array\",\n\t\t\"default\": [\n\t\t\t1.15,\n\t\t\t210,\n\t\t\t30\n\t\t],\n\t\tlength: 3,\n\t\tvalue: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t},\n\tcolor: {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\tintensity: {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t}\n};\nvar sky = {\n\t\"sky-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#88C6FC\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"horizon-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"fog-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"fog-ground-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"horizon-fog-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"sky-horizon-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"atmosphere-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t}\n};\nvar terrain = {\n\tsource: {\n\t\ttype: \"string\",\n\t\trequired: true\n\t},\n\texaggeration: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\t\"default\": 1\n\t}\n};\nvar projection = {\n\ttype: {\n\t\ttype: \"projectionDefinition\",\n\t\t\"default\": \"mercator\",\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t}\n};\nvar paint = [\n\t\"paint_fill\",\n\t\"paint_line\",\n\t\"paint_circle\",\n\t\"paint_heatmap\",\n\t\"paint_fill-extrusion\",\n\t\"paint_symbol\",\n\t\"paint_raster\",\n\t\"paint_hillshade\",\n\t\"paint_background\"\n];\nvar paint_fill = {\n\t\"fill-antialias\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-outline-color\": {\n\t\ttype: \"color\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-pattern\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"fill-antialias\": true\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"fill-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t}\n};\nvar paint_line = {\n\t\"line-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"line-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-gap-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-offset\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-dasharray\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"line widths\",\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded\"\n\t},\n\t\"line-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t},\n\t\"line-gradient\": {\n\t\ttype: \"color\",\n\t\ttransition: false,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-dasharray\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsource: \"geojson\",\n\t\t\t\thas: {\n\t\t\t\t\tlineMetrics: true\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"line-progress\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"color-ramp\"\n\t}\n};\nvar paint_circle = {\n\t\"circle-radius\": {\n\t\ttype: \"number\",\n\t\t\"default\": 5,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"circle-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-pitch-scale\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"viewport\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-stroke-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-stroke-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-stroke-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t}\n};\nvar paint_heatmap = {\n\t\"heatmap-radius\": {\n\t\ttype: \"number\",\n\t\t\"default\": 30,\n\t\tminimum: 1,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"heatmap-weight\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"heatmap-intensity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"heatmap-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": [\n\t\t\t\"interpolate\",\n\t\t\t[\n\t\t\t\t\"linear\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"heatmap-density\"\n\t\t\t],\n\t\t\t0,\n\t\t\t\"rgba(0, 0, 255, 0)\",\n\t\t\t0.1,\n\t\t\t\"royalblue\",\n\t\t\t0.3,\n\t\t\t\"cyan\",\n\t\t\t0.5,\n\t\t\t\"lime\",\n\t\t\t0.7,\n\t\t\t\"yellow\",\n\t\t\t1,\n\t\t\t\"red\"\n\t\t],\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"heatmap-density\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"color-ramp\"\n\t},\n\t\"heatmap-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_symbol = {\n\t\"icon-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"rgba(0, 0, 0, 0)\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"icon-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\toverridable: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"rgba(0, 0, 0, 0)\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t\"text-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_raster = {\n\t\"raster-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-hue-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\ttransition: true,\n\t\tunits: \"degrees\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-brightness-min\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-brightness-max\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-saturation\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: -1,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-contrast\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: -1,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-resampling\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tlinear: {\n\t\t\t},\n\t\t\tnearest: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"linear\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-fade-duration\": {\n\t\ttype: \"number\",\n\t\t\"default\": 300,\n\t\tminimum: 0,\n\t\ttransition: false,\n\t\tunits: \"milliseconds\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_hillshade = {\n\t\"hillshade-illumination-direction\": {\n\t\ttype: \"number\",\n\t\t\"default\": 335,\n\t\tminimum: 0,\n\t\tmaximum: 359,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-illumination-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"viewport\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-exaggeration\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-shadow-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-highlight-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#FFFFFF\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-accent-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_background = {\n\t\"background-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"background-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"background-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded\"\n\t},\n\t\"background-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar transition = {\n\tduration: {\n\t\ttype: \"number\",\n\t\t\"default\": 300,\n\t\tminimum: 0,\n\t\tunits: \"milliseconds\"\n\t},\n\tdelay: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"milliseconds\"\n\t}\n};\nvar promoteId = {\n\t\"*\": {\n\t\ttype: \"string\"\n\t}\n};\nvar v8Spec = {\n\t$version: $version,\n\t$root: $root,\n\tsources: sources,\n\tsource: source,\n\tsource_vector: source_vector,\n\tsource_raster: source_raster,\n\tsource_raster_dem: source_raster_dem,\n\tsource_geojson: source_geojson,\n\tsource_video: source_video,\n\tsource_image: source_image,\n\tlayer: layer,\n\tlayout: layout,\n\tlayout_background: layout_background,\n\tlayout_fill: layout_fill,\n\tlayout_circle: layout_circle,\n\tlayout_heatmap: layout_heatmap,\n\t\"layout_fill-extrusion\": {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n},\n\tlayout_line: layout_line,\n\tlayout_symbol: layout_symbol,\n\tlayout_raster: layout_raster,\n\tlayout_hillshade: layout_hillshade,\n\tfilter: filter,\n\tfilter_operator: filter_operator,\n\tgeometry_type: geometry_type,\n\t\"function\": {\n\texpression: {\n\t\ttype: \"expression\"\n\t},\n\tstops: {\n\t\ttype: \"array\",\n\t\tvalue: \"function_stop\"\n\t},\n\tbase: {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0\n\t},\n\tproperty: {\n\t\ttype: \"string\",\n\t\t\"default\": \"$zoom\"\n\t},\n\ttype: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tidentity: {\n\t\t\t},\n\t\t\texponential: {\n\t\t\t},\n\t\t\tinterval: {\n\t\t\t},\n\t\t\tcategorical: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"exponential\"\n\t},\n\tcolorSpace: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\trgb: {\n\t\t\t},\n\t\t\tlab: {\n\t\t\t},\n\t\t\thcl: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"rgb\"\n\t},\n\t\"default\": {\n\t\ttype: \"*\",\n\t\trequired: false\n\t}\n},\n\tfunction_stop: function_stop,\n\texpression: expression$1,\n\tlight: light,\n\tsky: sky,\n\tterrain: terrain,\n\tprojection: projection,\n\tpaint: paint,\n\tpaint_fill: paint_fill,\n\t\"paint_fill-extrusion\": {\n\t\"fill-extrusion-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-extrusion-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"fill-extrusion-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t},\n\t\"fill-extrusion-height\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"meters\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-base\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"meters\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"fill-extrusion-height\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-vertical-gradient\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n},\n\tpaint_line: paint_line,\n\tpaint_circle: paint_circle,\n\tpaint_heatmap: paint_heatmap,\n\tpaint_symbol: paint_symbol,\n\tpaint_raster: paint_raster,\n\tpaint_hillshade: paint_hillshade,\n\tpaint_background: paint_background,\n\ttransition: transition,\n\t\"property-type\": {\n\t\"data-driven\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"cross-faded\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"cross-faded-data-driven\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"color-ramp\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"data-constant\": {\n\t\ttype: \"property-type\"\n\t},\n\tconstant: {\n\t\ttype: \"property-type\"\n\t}\n},\n\tpromoteId: promoteId\n};\n\nconst refProperties = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n\nfunction deref(layer, parent) {\n    const result = {};\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = parent[k];\n        }\n    });\n    return result;\n}\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n    layers = layers.slice();\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[layers[i].ref]);\n        }\n    }\n    return layers;\n}\n\n/**\n * Deeply compares two object literals.\n *\n * @private\n */\nfunction deepEqual(a, b) {\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b) || a.length !== b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            if (!deepEqual(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    if (typeof a === 'object' && a !== null && b !== null) {\n        if (!(typeof b === 'object'))\n            return false;\n        const keys = Object.keys(a);\n        if (keys.length !== Object.keys(b).length)\n            return false;\n        for (const key in a) {\n            if (!deepEqual(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a === b;\n}\n\n/**\n * The main reason for this method is to allow type check when adding a command to the array.\n * @param commands - The commands array to add to\n * @param command - The command to add\n */\nfunction addCommand(commands, command) {\n    commands.push(command);\n}\nfunction addSource(sourceId, after, commands) {\n    addCommand(commands, { command: 'addSource', args: [sourceId, after[sourceId]] });\n}\nfunction removeSource(sourceId, commands, sourcesRemoved) {\n    addCommand(commands, { command: 'removeSource', args: [sourceId] });\n    sourcesRemoved[sourceId] = true;\n}\nfunction updateSource(sourceId, after, commands, sourcesRemoved) {\n    removeSource(sourceId, commands, sourcesRemoved);\n    addSource(sourceId, after, commands);\n}\nfunction canUpdateGeoJSON(before, after, sourceId) {\n    let prop;\n    for (prop in before[sourceId]) {\n        if (!Object.prototype.hasOwnProperty.call(before[sourceId], prop))\n            continue;\n        if (prop !== 'data' && !deepEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    for (prop in after[sourceId]) {\n        if (!Object.prototype.hasOwnProperty.call(after[sourceId], prop))\n            continue;\n        if (prop !== 'data' && !deepEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction diffSources(before, after, commands, sourcesRemoved) {\n    before = before || {};\n    after = after || {};\n    let sourceId;\n    // look for sources to remove\n    for (sourceId in before) {\n        if (!Object.prototype.hasOwnProperty.call(before, sourceId))\n            continue;\n        if (!Object.prototype.hasOwnProperty.call(after, sourceId)) {\n            removeSource(sourceId, commands, sourcesRemoved);\n        }\n    }\n    // look for sources to add/update\n    for (sourceId in after) {\n        if (!Object.prototype.hasOwnProperty.call(after, sourceId))\n            continue;\n        if (!Object.prototype.hasOwnProperty.call(before, sourceId)) {\n            addSource(sourceId, after, commands);\n        }\n        else if (!deepEqual(before[sourceId], after[sourceId])) {\n            if (before[sourceId].type === 'geojson' && after[sourceId].type === 'geojson' && canUpdateGeoJSON(before, after, sourceId)) {\n                addCommand(commands, { command: 'setGeoJSONSourceData', args: [sourceId, after[sourceId].data] });\n            }\n            else {\n                // no update command, must remove then add\n                updateSource(sourceId, after, commands, sourcesRemoved);\n            }\n        }\n    }\n}\nfunction diffLayerPropertyChanges(before, after, commands, layerId, klass, command) {\n    before = before || {};\n    after = after || {};\n    for (const prop in before) {\n        if (!Object.prototype.hasOwnProperty.call(before, prop))\n            continue;\n        if (!deepEqual(before[prop], after[prop])) {\n            commands.push({ command, args: [layerId, prop, after[prop], klass] });\n        }\n    }\n    for (const prop in after) {\n        if (!Object.prototype.hasOwnProperty.call(after, prop) || Object.prototype.hasOwnProperty.call(before, prop))\n            continue;\n        if (!deepEqual(before[prop], after[prop])) {\n            commands.push({ command, args: [layerId, prop, after[prop], klass] });\n        }\n    }\n}\nfunction pluckId(layer) {\n    return layer.id;\n}\nfunction indexById(group, layer) {\n    group[layer.id] = layer;\n    return group;\n}\nfunction diffLayers(before, after, commands) {\n    before = before || [];\n    after = after || [];\n    // order of layers by id\n    const beforeOrder = before.map(pluckId);\n    const afterOrder = after.map(pluckId);\n    // index of layer by id\n    const beforeIndex = before.reduce(indexById, {});\n    const afterIndex = after.reduce(indexById, {});\n    // track order of layers as if they have been mutated\n    const tracker = beforeOrder.slice();\n    // layers that have been added do not need to be diffed\n    const clean = Object.create(null);\n    let layerId;\n    let beforeLayer;\n    let afterLayer;\n    let insertBeforeLayerId;\n    let prop;\n    // remove layers\n    for (let i = 0, d = 0; i < beforeOrder.length; i++) {\n        layerId = beforeOrder[i];\n        if (!Object.prototype.hasOwnProperty.call(afterIndex, layerId)) {\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            tracker.splice(tracker.indexOf(layerId, d), 1);\n        }\n        else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n    }\n    // add/reorder layers\n    for (let i = 0, d = 0; i < afterOrder.length; i++) {\n        // work backwards as insert is before an existing layer\n        layerId = afterOrder[afterOrder.length - 1 - i];\n        if (tracker[tracker.length - 1 - i] === layerId)\n            continue;\n        if (Object.prototype.hasOwnProperty.call(beforeIndex, layerId)) {\n            // remove the layer before we insert at the correct position\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            tracker.splice(tracker.lastIndexOf(layerId, tracker.length - d), 1);\n        }\n        else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n        // add layer at correct position\n        insertBeforeLayerId = tracker[tracker.length - i];\n        addCommand(commands, { command: 'addLayer', args: [afterIndex[layerId], insertBeforeLayerId] });\n        tracker.splice(tracker.length - i, 0, layerId);\n        clean[layerId] = true;\n    }\n    // update layers\n    for (let i = 0; i < afterOrder.length; i++) {\n        layerId = afterOrder[i];\n        beforeLayer = beforeIndex[layerId];\n        afterLayer = afterIndex[layerId];\n        // no need to update if previously added (new or moved)\n        if (clean[layerId] || deepEqual(beforeLayer, afterLayer))\n            continue;\n        // If source, source-layer, or type have changes, then remove the layer\n        // and add it back 'from scratch'.\n        if (!deepEqual(beforeLayer.source, afterLayer.source) || !deepEqual(beforeLayer['source-layer'], afterLayer['source-layer']) || !deepEqual(beforeLayer.type, afterLayer.type)) {\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            // we add the layer back at the same position it was already in, so\n            // there's no need to update the `tracker`\n            insertBeforeLayerId = tracker[tracker.lastIndexOf(layerId) + 1];\n            addCommand(commands, { command: 'addLayer', args: [afterLayer, insertBeforeLayerId] });\n            continue;\n        }\n        // layout, paint, filter, minzoom, maxzoom\n        diffLayerPropertyChanges(beforeLayer.layout, afterLayer.layout, commands, layerId, null, 'setLayoutProperty');\n        diffLayerPropertyChanges(beforeLayer.paint, afterLayer.paint, commands, layerId, null, 'setPaintProperty');\n        if (!deepEqual(beforeLayer.filter, afterLayer.filter)) {\n            addCommand(commands, { command: 'setFilter', args: [layerId, afterLayer.filter] });\n        }\n        if (!deepEqual(beforeLayer.minzoom, afterLayer.minzoom) || !deepEqual(beforeLayer.maxzoom, afterLayer.maxzoom)) {\n            addCommand(commands, { command: 'setLayerZoomRange', args: [layerId, afterLayer.minzoom, afterLayer.maxzoom] });\n        }\n        // handle all other layer props, including paint.*\n        for (prop in beforeLayer) {\n            if (!Object.prototype.hasOwnProperty.call(beforeLayer, prop))\n                continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom')\n                continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), 'setPaintProperty');\n            }\n            else if (!deepEqual(beforeLayer[prop], afterLayer[prop])) {\n                addCommand(commands, { command: 'setLayerProperty', args: [layerId, prop, afterLayer[prop]] });\n            }\n        }\n        for (prop in afterLayer) {\n            if (!Object.prototype.hasOwnProperty.call(afterLayer, prop) || Object.prototype.hasOwnProperty.call(beforeLayer, prop))\n                continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom')\n                continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), 'setPaintProperty');\n            }\n            else if (!deepEqual(beforeLayer[prop], afterLayer[prop])) {\n                addCommand(commands, { command: 'setLayerProperty', args: [layerId, prop, afterLayer[prop]] });\n            }\n        }\n    }\n}\n/**\n * Diff two stylesheet\n *\n * Creates semanticly aware diffs that can easily be applied at runtime.\n * Operations produced by the diff closely resemble the maplibre-gl-js API. Any\n * error creating the diff will fall back to the 'setStyle' operation.\n *\n * Example diff:\n * [\n *     { command: 'setConstant', args: ['@water', '#0000FF'] },\n *     { command: 'setPaintProperty', args: ['background', 'background-color', 'black'] }\n * ]\n *\n * @private\n * @param {*} [before] stylesheet to compare from\n * @param {*} after stylesheet to compare to\n * @returns Array list of changes\n */\nfunction diff(before, after) {\n    if (!before)\n        return [{ command: 'setStyle', args: [after] }];\n    let commands = [];\n    try {\n        // Handle changes to top-level properties\n        if (!deepEqual(before.version, after.version)) {\n            return [{ command: 'setStyle', args: [after] }];\n        }\n        if (!deepEqual(before.center, after.center)) {\n            commands.push({ command: 'setCenter', args: [after.center] });\n        }\n        if (!deepEqual(before.centerAltitude, after.centerAltitude)) {\n            commands.push({ command: 'setCenterAltitude', args: [after.centerAltitude] });\n        }\n        if (!deepEqual(before.zoom, after.zoom)) {\n            commands.push({ command: 'setZoom', args: [after.zoom] });\n        }\n        if (!deepEqual(before.bearing, after.bearing)) {\n            commands.push({ command: 'setBearing', args: [after.bearing] });\n        }\n        if (!deepEqual(before.pitch, after.pitch)) {\n            commands.push({ command: 'setPitch', args: [after.pitch] });\n        }\n        if (!deepEqual(before.roll, after.roll)) {\n            commands.push({ command: 'setRoll', args: [after.roll] });\n        }\n        if (!deepEqual(before.sprite, after.sprite)) {\n            commands.push({ command: 'setSprite', args: [after.sprite] });\n        }\n        if (!deepEqual(before.glyphs, after.glyphs)) {\n            commands.push({ command: 'setGlyphs', args: [after.glyphs] });\n        }\n        if (!deepEqual(before.transition, after.transition)) {\n            commands.push({ command: 'setTransition', args: [after.transition] });\n        }\n        if (!deepEqual(before.light, after.light)) {\n            commands.push({ command: 'setLight', args: [after.light] });\n        }\n        if (!deepEqual(before.terrain, after.terrain)) {\n            commands.push({ command: 'setTerrain', args: [after.terrain] });\n        }\n        if (!deepEqual(before.sky, after.sky)) {\n            commands.push({ command: 'setSky', args: [after.sky] });\n        }\n        if (!deepEqual(before.projection, after.projection)) {\n            commands.push({ command: 'setProjection', args: [after.projection] });\n        }\n        // Handle changes to `sources`\n        // If a source is to be removed, we also--before the removeSource\n        // command--need to remove all the style layers that depend on it.\n        const sourcesRemoved = {};\n        // First collect the {add,remove}Source commands\n        const removeOrAddSourceCommands = [];\n        diffSources(before.sources, after.sources, removeOrAddSourceCommands, sourcesRemoved);\n        // Push a removeLayer command for each style layer that depends on a\n        // source that's being removed.\n        // Also, exclude any such layers them from the input to `diffLayers`\n        // below, so that diffLayers produces the appropriate `addLayers`\n        // command\n        const beforeLayers = [];\n        if (before.layers) {\n            before.layers.forEach((layer) => {\n                if ('source' in layer && sourcesRemoved[layer.source]) {\n                    commands.push({ command: 'removeLayer', args: [layer.id] });\n                }\n                else {\n                    beforeLayers.push(layer);\n                }\n            });\n        }\n        commands = commands.concat(removeOrAddSourceCommands);\n        // Handle changes to `layers`\n        diffLayers(beforeLayers, after.layers, commands);\n    }\n    catch (e) {\n        // fall back to setStyle\n        console.warn('Unable to compute style diff:', e);\n        commands = [{ command: 'setStyle', args: [after] }];\n    }\n    return commands;\n}\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\nclass ValidationError {\n    constructor(key, value, message, identifier) {\n        this.message = (key ? `${key}: ` : '') + message;\n        if (identifier)\n            this.identifier = identifier;\n        if (value !== null && value !== undefined && value.__line__) {\n            this.line = value.__line__;\n        }\n    }\n}\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\nclass ParsingError {\n    constructor(error) {\n        this.error = error;\n        this.message = error.message;\n        const match = error.message.match(/line (\\d+)/);\n        this.line = match ? parseInt(match[1], 10) : 0;\n    }\n}\n\nfunction extendBy(output, ...inputs) {\n    for (const input of inputs) {\n        for (const k in input) {\n            output[k] = input[k];\n        }\n    }\n    return output;\n}\n\nclass ExpressionParsingError extends Error {\n    constructor(key, message) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    constructor(parent, bindings = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n    concat(bindings) {\n        return new Scope(this, bindings);\n    }\n    get(name) {\n        if (this.bindings[name]) {\n            return this.bindings[name];\n        }\n        if (this.parent) {\n            return this.parent.get(name);\n        }\n        throw new Error(`${name} not found in scope.`);\n    }\n    has(name) {\n        if (this.bindings[name])\n            return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nconst NullType = { kind: 'null' };\nconst NumberType = { kind: 'number' };\nconst StringType = { kind: 'string' };\nconst BooleanType = { kind: 'boolean' };\nconst ColorType = { kind: 'color' };\nconst ProjectionDefinitionType = { kind: 'projectionDefinition' };\nconst ObjectType = { kind: 'object' };\nconst ValueType = { kind: 'value' };\nconst ErrorType = { kind: 'error' };\nconst CollatorType = { kind: 'collator' };\nconst FormattedType = { kind: 'formatted' };\nconst PaddingType = { kind: 'padding' };\nconst ResolvedImageType = { kind: 'resolvedImage' };\nconst VariableAnchorOffsetCollectionType = { kind: 'variableAnchorOffsetCollection' };\nfunction array(itemType, N) {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\nfunction typeToString(type) {\n    if (type.kind === 'array') {\n        const itemType = typeToString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    }\n    else {\n        return type.kind;\n    }\n}\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ProjectionDefinitionType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    PaddingType,\n    ResolvedImageType,\n    VariableAnchorOffsetCollectionType\n];\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nfunction checkSubtype(expected, t) {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    }\n    else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    }\n    else if (expected.kind === t.kind) {\n        return null;\n    }\n    else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n    return `Expected ${typeToString(expected)} but found ${typeToString(t)} instead.`;\n}\nfunction isValidType(provided, allowedTypes) {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\nfunction isValidNativeType(provided, allowedTypes) {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        }\n        else if (t === 'array') {\n            return Array.isArray(provided);\n        }\n        else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        }\n        else {\n            return t === typeof provided;\n        }\n    });\n}\n/**\n * Verify whether the specified type is of the same type as the specified sample.\n *\n * @param provided Type to verify\n * @param sample Sample type to reference\n * @returns `true` if both objects are of the same type, `false` otherwise\n * @example basic types\n * if (verifyType(outputType, ValueType)) {\n *     // type narrowed to:\n *     outputType.kind; // 'value'\n * }\n * @example array types\n * if (verifyType(outputType, array(NumberType))) {\n *     // type narrowed to:\n *     outputType.kind; // 'array'\n *     outputType.itemType; // NumberTypeT\n *     outputType.itemType.kind; // 'number'\n * }\n */\nfunction verifyType(provided, sample) {\n    if (provided.kind === 'array' && sample.kind === 'array') {\n        return provided.itemType.kind === sample.itemType.kind && typeof provided.N === 'number';\n    }\n    return provided.kind === sample.kind;\n}\n\n// See https://observablehq.com/@mbostock/lab-and-rgb\nconst Xn = 0.96422, Yn = 1, Zn = 0.82521, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1, deg2rad = Math.PI / 180, rad2deg = 180 / Math.PI;\nfunction constrainAngle(angle) {\n    angle = angle % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nfunction rgbToLab([r, g, b, alpha]) {\n    r = rgb2xyz(r);\n    g = rgb2xyz(g);\n    b = rgb2xyz(b);\n    let x, z;\n    const y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn);\n    if (r === g && g === b) {\n        x = z = y;\n    }\n    else {\n        x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n        z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n    }\n    const l = 116 * y - 16;\n    return [(l < 0) ? 0 : l, 500 * (x - y), 200 * (y - z), alpha];\n}\nfunction rgb2xyz(x) {\n    return (x <= 0.04045) ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\nfunction xyz2lab(t) {\n    return (t > t3) ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\nfunction labToRgb([l, a, b, alpha]) {\n    let y = (l + 16) / 116, x = isNaN(a) ? y : y + a / 500, z = isNaN(b) ? y : y - b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return [\n        xyz2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), // D50 -> sRGB\n        xyz2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n        xyz2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n        alpha,\n    ];\n}\nfunction xyz2rgb(x) {\n    x = (x <= 0.00304) ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055;\n    return (x < 0) ? 0 : (x > 1) ? 1 : x; // clip to 0..1 range\n}\nfunction lab2xyz(t) {\n    return (t > t1) ? t * t * t : t2 * (t - t0);\n}\nfunction rgbToHcl(rgbColor) {\n    const [l, a, b, alpha] = rgbToLab(rgbColor);\n    const c = Math.sqrt(a * a + b * b);\n    const h = Math.round(c * 10000) ? constrainAngle(Math.atan2(b, a) * rad2deg) : NaN;\n    return [h, c, l, alpha];\n}\nfunction hclToRgb([h, c, l, alpha]) {\n    h = isNaN(h) ? 0 : h * deg2rad;\n    return labToRgb([l, Math.cos(h) * c, Math.sin(h) * c, alpha]);\n}\n// https://drafts.csswg.org/css-color-4/#hsl-to-rgb\nfunction hslToRgb([h, s, l, alpha]) {\n    h = constrainAngle(h);\n    s /= 100;\n    l /= 100;\n    function f(n) {\n        const k = (n + h / 30) % 12;\n        const a = s * Math.min(l, 1 - l);\n        return l - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\n    }\n    return [f(0), f(8), f(4), alpha];\n}\n\n/**\n * CSS color parser compliant with CSS Color 4 Specification.\n * Supports: named colors, `transparent` keyword, all rgb hex notations,\n * rgb(), rgba(), hsl() and hsla() functions.\n * Does not round the parsed values to integers from the range 0..255.\n *\n * Syntax:\n *\n * <alpha-value> = <number> | <percentage>\n *         <hue> = <number> | <angle>\n *\n *         rgb() = rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? )\n *         rgb() = rgb( <percentage>#{3} , <alpha-value>? )    | rgb( <number>#{3} , <alpha-value>? )\n *\n *         hsl() = hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? )\n *         hsl() = hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )\n *\n * Caveats:\n *   - <angle> - <number> with optional `deg` suffix; `grad`, `rad`, `turn` are not supported\n *   - `none` keyword is not supported\n *   - comments inside rgb()/hsl() are not supported\n *   - legacy color syntax rgba() is supported with an identical grammar and behavior to rgb()\n *   - legacy color syntax hsla() is supported with an identical grammar and behavior to hsl()\n *\n * @param input CSS color string to parse.\n * @returns Color in sRGB color space, with `red`, `green`, `blue`\n * and `alpha` channels normalized to the range 0..1,\n * or `undefined` if the input is not a valid color string.\n */\nfunction parseCssColor(input) {\n    input = input.toLowerCase().trim();\n    if (input === 'transparent') {\n        return [0, 0, 0, 0];\n    }\n    // 'white', 'black', 'blue'\n    const namedColorsMatch = namedColors[input];\n    if (namedColorsMatch) {\n        const [r, g, b] = namedColorsMatch;\n        return [r / 255, g / 255, b / 255, 1];\n    }\n    // #f0c, #f0cf, #ff00cc, #ff00ccff\n    if (input.startsWith('#')) {\n        const hexRegexp = /^#(?:[0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})$/;\n        if (hexRegexp.test(input)) {\n            const step = input.length < 6 ? 1 : 2;\n            let i = 1;\n            return [\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i + step) || 'ff'),\n            ];\n        }\n    }\n    // rgb(128 0 0), rgb(50% 0% 0%), rgba(255,0,255,0.6), rgb(255 0 255 / 60%), rgb(100% 0% 100% /.6)\n    if (input.startsWith('rgb')) {\n        const rgbRegExp = /^rgba?\\(\\s*([\\de.+-]+)(%)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)(%)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)(%)?(?:\\s*([,\\/])\\s*([\\de.+-]+)(%)?)?\\s*\\)$/;\n        const rgbMatch = input.match(rgbRegExp);\n        if (rgbMatch) {\n            const [_, // eslint-disable-line @typescript-eslint/no-unused-vars\n            r, // <numeric>\n            rp, // %         (optional)\n            f1, // ,         (optional)\n            g, // <numeric>\n            gp, // %         (optional)\n            f2, // ,         (optional)\n            b, // <numeric>\n            bp, // %         (optional)\n            f3, // ,|/       (optional)\n            a, // <numeric> (optional)\n            ap, // %         (optional)\n            ] = rgbMatch;\n            const argFormat = [f1 || ' ', f2 || ' ', f3].join('');\n            if (argFormat === '  ' ||\n                argFormat === '  /' ||\n                argFormat === ',,' ||\n                argFormat === ',,,') {\n                const valFormat = [rp, gp, bp].join('');\n                const maxValue = (valFormat === '%%%') ? 100 :\n                    (valFormat === '') ? 255 : 0;\n                if (maxValue) {\n                    const rgba = [\n                        clamp(+r / maxValue, 0, 1),\n                        clamp(+g / maxValue, 0, 1),\n                        clamp(+b / maxValue, 0, 1),\n                        a ? parseAlpha(+a, ap) : 1,\n                    ];\n                    if (validateNumbers(rgba)) {\n                        return rgba;\n                    }\n                    // invalid numbers\n                }\n                // values must be all numbers or all percentages\n            }\n            return; // comma optional syntax requires no commas at all\n        }\n    }\n    // hsl(120 50% 80%), hsla(120deg,50%,80%,.9), hsl(12e1 50% 80% / 90%)\n    const hslRegExp = /^hsla?\\(\\s*([\\de.+-]+)(?:deg)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)%(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)%(?:\\s*([,\\/])\\s*([\\de.+-]+)(%)?)?\\s*\\)$/;\n    const hslMatch = input.match(hslRegExp);\n    if (hslMatch) {\n        const [_, // eslint-disable-line @typescript-eslint/no-unused-vars\n        h, // <numeric>\n        f1, // ,         (optional)\n        s, // <numeric>\n        f2, // ,         (optional)\n        l, // <numeric>\n        f3, // ,|/       (optional)\n        a, // <numeric> (optional)\n        ap, // %         (optional)\n        ] = hslMatch;\n        const argFormat = [f1 || ' ', f2 || ' ', f3].join('');\n        if (argFormat === '  ' ||\n            argFormat === '  /' ||\n            argFormat === ',,' ||\n            argFormat === ',,,') {\n            const hsla = [\n                +h,\n                clamp(+s, 0, 100),\n                clamp(+l, 0, 100),\n                a ? parseAlpha(+a, ap) : 1,\n            ];\n            if (validateNumbers(hsla)) {\n                return hslToRgb(hsla);\n            }\n            // invalid numbers\n        }\n        // comma optional syntax requires no commas at all\n    }\n}\nfunction parseHex(hex) {\n    return parseInt(hex.padEnd(2, hex), 16) / 255;\n}\nfunction parseAlpha(a, asPercentage) {\n    return clamp(asPercentage ? (a / 100) : a, 0, 1);\n}\nfunction clamp(n, min, max) {\n    return Math.min(Math.max(min, n), max);\n}\n/**\n * The regular expression for numeric values is not super specific, and it may\n * happen that it will accept a value that is not a valid number. In order to\n * detect and eliminate such values this function exists.\n *\n * @param array Array of uncertain numbers.\n * @returns `true` if the specified array contains only valid numbers, `false` otherwise.\n */\nfunction validateNumbers(array) {\n    return !array.some(Number.isNaN);\n}\n/**\n * To generate:\n * - visit {@link https://www.w3.org/TR/css-color-4/#named-colors}\n * - run in the console:\n * @example\n * copy(`{\\n${[...document.querySelector('.named-color-table tbody').children].map((tr) => `${tr.cells[2].textContent.trim()}: [${tr.cells[4].textContent.trim().split(/\\s+/).join(', ')}],`).join('\\n')}\\n}`);\n */\nconst namedColors = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50],\n};\n\nfunction interpolateNumber(from, to, t) {\n    return from + t * (to - from);\n}\nfunction interpolateArray(from, to, t) {\n    return from.map((d, i) => {\n        return interpolateNumber(d, to[i], t);\n    });\n}\n\n/**\n * Checks whether the specified color space is one of the supported interpolation color spaces.\n *\n * @param colorSpace Color space key to verify.\n * @returns `true` if the specified color space is one of the supported\n * interpolation color spaces, `false` otherwise\n */\nfunction isSupportedInterpolationColorSpace(colorSpace) {\n    return colorSpace === 'rgb' || colorSpace === 'hcl' || colorSpace === 'lab';\n}\n/**\n * Color representation used by WebGL.\n * Defined in sRGB color space and pre-blended with alpha.\n * @private\n */\nclass Color {\n    /**\n     * @param r Red component premultiplied by `alpha` 0..1\n     * @param g Green component premultiplied by `alpha` 0..1\n     * @param b Blue component premultiplied by `alpha` 0..1\n     * @param [alpha=1] Alpha component 0..1\n     * @param [premultiplied=true] Whether the `r`, `g` and `b` values have already\n     * been multiplied by alpha. If `true` nothing happens if `false` then they will\n     * be multiplied automatically.\n     */\n    constructor(r, g, b, alpha = 1, premultiplied = true) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = alpha;\n        if (!premultiplied) {\n            this.r *= alpha;\n            this.g *= alpha;\n            this.b *= alpha;\n            if (!alpha) {\n                // alpha = 0 erases completely rgb channels. This behavior is not desirable\n                // if this particular color is later used in color interpolation.\n                // Because of that, a reference to original color is saved.\n                this.overwriteGetter('rgb', [r, g, b, alpha]);\n            }\n        }\n    }\n    /**\n     * Parses CSS color strings and converts colors to sRGB color space if needed.\n     * Officially supported color formats:\n     * - keyword, e.g. 'aquamarine' or 'steelblue'\n     * - hex (with 3, 4, 6 or 8 digits), e.g. '#f0f' or '#e9bebea9'\n     * - rgb and rgba, e.g. 'rgb(0,240,120)' or 'rgba(0%,94%,47%,0.1)' or 'rgb(0 240 120 / .3)'\n     * - hsl and hsla, e.g. 'hsl(0,0%,83%)' or 'hsla(0,0%,83%,.5)' or 'hsl(0 0% 83% / 20%)'\n     *\n     * @param input CSS color string to parse.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input) {\n        // in zoom-and-property function input could be an instance of Color class\n        if (input instanceof Color) {\n            return input;\n        }\n        if (typeof input !== 'string') {\n            return;\n        }\n        const rgba = parseCssColor(input);\n        if (rgba) {\n            return new Color(...rgba, false);\n        }\n    }\n    /**\n     * Used in color interpolation and by 'to-rgba' expression.\n     *\n     * @returns Gien color, with reversed alpha blending, in sRGB color space.\n     */\n    get rgb() {\n        const { r, g, b, a } = this;\n        const f = a || Infinity; // reverse alpha blending factor\n        return this.overwriteGetter('rgb', [r / f, g / f, b / f, a]);\n    }\n    /**\n     * Used in color interpolation.\n     *\n     * @returns Gien color, with reversed alpha blending, in HCL color space.\n     */\n    get hcl() {\n        return this.overwriteGetter('hcl', rgbToHcl(this.rgb));\n    }\n    /**\n     * Used in color interpolation.\n     *\n     * @returns Gien color, with reversed alpha blending, in LAB color space.\n     */\n    get lab() {\n        return this.overwriteGetter('lab', rgbToLab(this.rgb));\n    }\n    /**\n     * Lazy getter pattern. When getter is called for the first time lazy value\n     * is calculated and then overwrites getter function in given object instance.\n     *\n     * @example:\n     * const redColor = Color.parse('red');\n     * let x = redColor.hcl; // this will invoke `get hcl()`, which will calculate\n     * // the value of red in HCL space and invoke this `overwriteGetter` function\n     * // which in turn will set a field with a key 'hcl' in the `redColor` object.\n     * // In other words it will override `get hcl()` from its `Color` prototype\n     * // with its own property: hcl = [calculated red value in hcl].\n     * let y = redColor.hcl; // next call will no longer invoke getter but simply\n     * // return the previously calculated value\n     * x === y; // true - `x` is exactly the same object as `y`\n     *\n     * @param getterKey Getter key\n     * @param lazyValue Lazily calculated value to be memoized by current instance\n     * @private\n     */\n    overwriteGetter(getterKey, lazyValue) {\n        Object.defineProperty(this, getterKey, { value: lazyValue });\n        return lazyValue;\n    }\n    /**\n     * Used by 'to-string' expression.\n     *\n     * @returns Serialized color in format `rgba(r,g,b,a)`\n     * where r,g,b are numbers within 0..255 and alpha is number within 1..0\n     *\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString() {\n        const [r, g, b, a] = this.rgb;\n        return `rgba(${[r, g, b].map(n => Math.round(n * 255)).join(',')},${a})`;\n    }\n    static interpolate(from, to, t, spaceKey = 'rgb') {\n        switch (spaceKey) {\n            case 'rgb': {\n                const [r, g, b, alpha] = interpolateArray(from.rgb, to.rgb, t);\n                return new Color(r, g, b, alpha, false);\n            }\n            case 'hcl': {\n                const [hue0, chroma0, light0, alphaF] = from.hcl;\n                const [hue1, chroma1, light1, alphaT] = to.hcl;\n                // https://github.com/gka/chroma.js/blob/cd1b3c0926c7a85cbdc3b1453b3a94006de91a92/src/interpolator/_hsx.js\n                let hue, chroma;\n                if (!isNaN(hue0) && !isNaN(hue1)) {\n                    let dh = hue1 - hue0;\n                    if (hue1 > hue0 && dh > 180) {\n                        dh -= 360;\n                    }\n                    else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                        dh += 360;\n                    }\n                    hue = hue0 + t * dh;\n                }\n                else if (!isNaN(hue0)) {\n                    hue = hue0;\n                    if (light1 === 1 || light1 === 0)\n                        chroma = chroma0;\n                }\n                else if (!isNaN(hue1)) {\n                    hue = hue1;\n                    if (light0 === 1 || light0 === 0)\n                        chroma = chroma1;\n                }\n                else {\n                    hue = NaN;\n                }\n                const [r, g, b, alpha] = hclToRgb([\n                    hue,\n                    chroma !== null && chroma !== undefined ? chroma : interpolateNumber(chroma0, chroma1, t),\n                    interpolateNumber(light0, light1, t),\n                    interpolateNumber(alphaF, alphaT, t),\n                ]);\n                return new Color(r, g, b, alpha, false);\n            }\n            case 'lab': {\n                const [r, g, b, alpha] = labToRgb(interpolateArray(from.lab, to.lab, t));\n                return new Color(r, g, b, alpha, false);\n            }\n        }\n    }\n}\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\nclass Collator {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [], { sensitivity: this.sensitivity, usage: 'search' });\n    }\n    compare(lhs, rhs) {\n        return this.collator.compare(lhs, rhs);\n    }\n    resolvedLocale() {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n\nconst VERTICAL_ALIGN_OPTIONS = ['bottom', 'center', 'top'];\nclass FormattedSection {\n    constructor(text, image, scale, fontStack, textColor, verticalAlign) {\n        this.text = text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n        this.verticalAlign = verticalAlign;\n    }\n}\nclass Formatted {\n    constructor(sections) {\n        this.sections = sections;\n    }\n    static fromString(unformatted) {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null, null)]);\n    }\n    isEmpty() {\n        if (this.sections.length === 0)\n            return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n            (section.image && section.image.name.length !== 0));\n    }\n    static factory(text) {\n        if (text instanceof Formatted) {\n            return text;\n        }\n        else {\n            return Formatted.fromString(text);\n        }\n    }\n    toString() {\n        if (this.sections.length === 0)\n            return '';\n        return this.sections.map(section => section.text).join('');\n    }\n}\n\n/**\n * A set of four numbers representing padding around a box. Create instances from\n * bare arrays or numeric values using the static method `Padding.parse`.\n * @private\n */\nclass Padding {\n    constructor(values) {\n        this.values = values.slice();\n    }\n    /**\n     * Numeric padding values\n     * @param input A padding value\n     * @returns A `Padding` instance, or `undefined` if the input is not a valid padding value.\n     */\n    static parse(input) {\n        if (input instanceof Padding) {\n            return input;\n        }\n        // Backwards compatibility: bare number is treated the same as array with single value.\n        // Padding applies to all four sides.\n        if (typeof input === 'number') {\n            return new Padding([input, input, input, input]);\n        }\n        if (!Array.isArray(input)) {\n            return undefined;\n        }\n        if (input.length < 1 || input.length > 4) {\n            return undefined;\n        }\n        for (const val of input) {\n            if (typeof val !== 'number') {\n                return undefined;\n            }\n        }\n        // Expand shortcut properties into explicit 4-sided values\n        switch (input.length) {\n            case 1:\n                input = [input[0], input[0], input[0], input[0]];\n                break;\n            case 2:\n                input = [input[0], input[1], input[0], input[1]];\n                break;\n            case 3:\n                input = [input[0], input[1], input[2], input[1]];\n                break;\n        }\n        return new Padding(input);\n    }\n    toString() {\n        return JSON.stringify(this.values);\n    }\n    static interpolate(from, to, t) {\n        return new Padding(interpolateArray(from.values, to.values, t));\n    }\n}\n\nclass RuntimeError {\n    constructor(message) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n    toJSON() {\n        return this.message;\n    }\n}\n\n/** Set of valid anchor positions, as a set for validation */\nconst anchors = new Set(['center', 'left', 'right', 'top', 'bottom', 'top-left', 'top-right', 'bottom-left', 'bottom-right']);\n/**\n * Utility class to assist managing values for text-variable-anchor-offset property. Create instances from\n * bare arrays using the static method `VariableAnchorOffsetCollection.parse`.\n * @private\n */\nclass VariableAnchorOffsetCollection {\n    constructor(values) {\n        this.values = values.slice();\n    }\n    static parse(input) {\n        if (input instanceof VariableAnchorOffsetCollection) {\n            return input;\n        }\n        if (!Array.isArray(input) ||\n            input.length < 1 ||\n            input.length % 2 !== 0) {\n            return undefined;\n        }\n        for (let i = 0; i < input.length; i += 2) {\n            // Elements in even positions should be anchor positions; Elements in odd positions should be offset values\n            const anchorValue = input[i];\n            const offsetValue = input[i + 1];\n            if (typeof anchorValue !== 'string' || !anchors.has(anchorValue)) {\n                return undefined;\n            }\n            if (!Array.isArray(offsetValue) || offsetValue.length !== 2 || typeof offsetValue[0] !== 'number' || typeof offsetValue[1] !== 'number') {\n                return undefined;\n            }\n        }\n        return new VariableAnchorOffsetCollection(input);\n    }\n    toString() {\n        return JSON.stringify(this.values);\n    }\n    static interpolate(from, to, t) {\n        const fromValues = from.values;\n        const toValues = to.values;\n        if (fromValues.length !== toValues.length) {\n            throw new RuntimeError(`Cannot interpolate values of different length. from: ${from.toString()}, to: ${to.toString()}`);\n        }\n        const output = [];\n        for (let i = 0; i < fromValues.length; i += 2) {\n            // Anchor entries must match\n            if (fromValues[i] !== toValues[i]) {\n                throw new RuntimeError(`Cannot interpolate values containing mismatched anchors. from[${i}]: ${fromValues[i]}, to[${i}]: ${toValues[i]}`);\n            }\n            output.push(fromValues[i]);\n            // Interpolate the offset values for each anchor\n            const [fx, fy] = fromValues[i + 1];\n            const [tx, ty] = toValues[i + 1];\n            output.push([interpolateNumber(fx, tx, t), interpolateNumber(fy, ty, t)]);\n        }\n        return new VariableAnchorOffsetCollection(output);\n    }\n}\n\nclass ResolvedImage {\n    constructor(options) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n    toString() {\n        return this.name;\n    }\n    static fromString(name) {\n        if (!name)\n            return null; // treat empty values as no image\n        return new ResolvedImage({ name, available: false });\n    }\n}\n\nclass ProjectionDefinition {\n    constructor(from, to, transition) {\n        this.from = from;\n        this.to = to;\n        this.transition = transition;\n    }\n    static interpolate(from, to, t) {\n        return new ProjectionDefinition(from, to, t);\n    }\n    static parse(input) {\n        if (input instanceof ProjectionDefinition) {\n            return input;\n        }\n        if (Array.isArray(input) && input.length === 3 && typeof input[0] === 'string' && typeof input[1] === 'string' && typeof input[2] === 'number') {\n            return new ProjectionDefinition(input[0], input[1], input[2]);\n        }\n        if (typeof input === 'object' && typeof input.from === 'string' && typeof input.to === 'string' && typeof input.transition === 'number') {\n            return new ProjectionDefinition(input.from, input.to, input.transition);\n        }\n        if (typeof input === 'string') {\n            return new ProjectionDefinition(input, input, 1);\n        }\n        return undefined;\n    }\n}\n\nfunction validateRGBA(r, g, b, a) {\n    if (!(typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255)) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n    if (!(typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1))) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n    return null;\n}\nfunction isValue(mixed) {\n    if (mixed === null ||\n        typeof mixed === 'string' ||\n        typeof mixed === 'boolean' ||\n        typeof mixed === 'number' ||\n        mixed instanceof ProjectionDefinition ||\n        mixed instanceof Color ||\n        mixed instanceof Collator ||\n        mixed instanceof Formatted ||\n        mixed instanceof Padding ||\n        mixed instanceof VariableAnchorOffsetCollection ||\n        mixed instanceof ResolvedImage) {\n        return true;\n    }\n    else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction typeOf(value) {\n    if (value === null) {\n        return NullType;\n    }\n    else if (typeof value === 'string') {\n        return StringType;\n    }\n    else if (typeof value === 'boolean') {\n        return BooleanType;\n    }\n    else if (typeof value === 'number') {\n        return NumberType;\n    }\n    else if (value instanceof Color) {\n        return ColorType;\n    }\n    else if (value instanceof ProjectionDefinition) {\n        return ProjectionDefinitionType;\n    }\n    else if (value instanceof Collator) {\n        return CollatorType;\n    }\n    else if (value instanceof Formatted) {\n        return FormattedType;\n    }\n    else if (value instanceof Padding) {\n        return PaddingType;\n    }\n    else if (value instanceof VariableAnchorOffsetCollection) {\n        return VariableAnchorOffsetCollectionType;\n    }\n    else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    }\n    else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType;\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            }\n            else if (itemType === t) {\n                continue;\n            }\n            else {\n                itemType = ValueType;\n                break;\n            }\n        }\n        return array(itemType || ValueType, length);\n    }\n    else {\n        return ObjectType;\n    }\n}\nfunction valueToString(value) {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    }\n    else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    }\n    else if (value instanceof Color || value instanceof ProjectionDefinition || value instanceof Formatted || value instanceof Padding || value instanceof VariableAnchorOffsetCollection || value instanceof ResolvedImage) {\n        return value.toString();\n    }\n    else {\n        return JSON.stringify(value);\n    }\n}\n\nclass Literal {\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (!isValue(args[1]))\n            return context.error('invalid value');\n        const value = args[1];\n        let type = typeOf(value);\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)) {\n            type = expected;\n        }\n        return new Literal(type, value);\n    }\n    evaluate() {\n        return this.value;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nconst types$1 = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\nclass Assertion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error('Expected at least one argument.');\n        let i = 1;\n        let type;\n        const name = args[0];\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types$1) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types$1[type];\n                i++;\n            }\n            else {\n                itemType = ValueType;\n            }\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n            type = array(itemType, N);\n        }\n        else {\n            if (!types$1[name])\n                throw new Error(`Types doesn't contain name = ${name}`);\n            type = types$1[name];\n        }\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Assertion(type, parsed);\n    }\n    evaluate(ctx) {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            }\n            else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${typeToString(this.type)}, but found ${typeToString(typeOf(value))} instead.`);\n            }\n        }\n        throw new Error();\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error('Expected at least one argument.');\n        const name = args[0];\n        if (!types[name])\n            throw new Error(`Can't parse ${name} as it is not part of the known types`);\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error('Expected one argument.');\n        const type = types[name];\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Coercion(type, parsed);\n    }\n    evaluate(ctx) {\n        switch (this.type.kind) {\n            case 'boolean':\n                return Boolean(this.args[0].evaluate(ctx));\n            case 'color': {\n                let input;\n                let error;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    error = null;\n                    if (input instanceof Color) {\n                        return input;\n                    }\n                    else if (typeof input === 'string') {\n                        const c = ctx.parseColor(input);\n                        if (c)\n                            return c;\n                    }\n                    else if (Array.isArray(input)) {\n                        if (input.length < 3 || input.length > 4) {\n                            error = `Invalid rgba value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                        }\n                        else {\n                            error = validateRGBA(input[0], input[1], input[2], input[3]);\n                        }\n                        if (!error) {\n                            return new Color(input[0] / 255, input[1] / 255, input[2] / 255, input[3]);\n                        }\n                    }\n                }\n                throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'padding': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    const pad = Padding.parse(input);\n                    if (pad) {\n                        return pad;\n                    }\n                }\n                throw new RuntimeError(`Could not parse padding from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'variableAnchorOffsetCollection': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    const coll = VariableAnchorOffsetCollection.parse(input);\n                    if (coll) {\n                        return coll;\n                    }\n                }\n                throw new RuntimeError(`Could not parse variableAnchorOffsetCollection from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'number': {\n                let value = null;\n                for (const arg of this.args) {\n                    value = arg.evaluate(ctx);\n                    if (value === null)\n                        return 0;\n                    const num = Number(value);\n                    if (isNaN(num))\n                        continue;\n                    return num;\n                }\n                throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n            }\n            case 'formatted':\n                // There is no explicit 'to-formatted' but this coercion can be implicitly\n                // created by properties that expect the 'formatted' type.\n                return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n            case 'resolvedImage':\n                return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n            case 'projectionDefinition':\n                return this.args[0].evaluate(ctx);\n            default:\n                return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\nclass EvaluationContext {\n    constructor() {\n        this.globals = null;\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n    }\n    id() {\n        return this.feature && 'id' in this.feature ? this.feature.id : null;\n    }\n    geometryType() {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n    geometry() {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n    canonicalID() {\n        return this.canonical;\n    }\n    properties() {\n        return this.feature && this.feature.properties || {};\n    }\n    parseColor(input) {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    constructor(registry, isConstantFunc, path = [], expectedType, scope = new Scope(), errors = []) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n        this._isConstant = isConstantFunc;\n    }\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(expr, index, expectedType, bindings, options = {}) {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n    _parse(expr, options) {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n        function annotate(parsed, type, typeAnnotation) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            }\n            else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            }\n            else {\n                return parsed;\n            }\n        }\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error('Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].');\n            }\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed)\n                    return null;\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    }\n                    else if ((expected.kind === 'projectionDefinition') && (actual.kind === 'string' || actual.kind === 'array')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if (expected.kind === 'padding' && (actual.kind === 'value' || actual.kind === 'number' || actual.kind === 'array')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if (expected.kind === 'variableAnchorOffsetCollection' && (actual.kind === 'value' || actual.kind === 'array')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && this._isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    }\n                    catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n                return parsed;\n            }\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        else if (typeof expr === 'undefined') {\n            return this.error('\\'undefined\\' value invalid. Use null instead.');\n        }\n        else if (typeof expr === 'object') {\n            return this.error('Bare objects invalid. Use [\"literal\", {...}] instead.');\n        }\n        else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index, expectedType, bindings) {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(this.registry, this._isConstant, path, expectedType || null, scope, this.errors);\n    }\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error, ...keys) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ExpressionParsingError(key, error));\n    }\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     * @param expected The expected type\n     * @param t The actual type\n     * @returns null if `t` is a subtype of `expected`; otherwise returns an error message\n     */\n    checkSubtype(expected, t) {\n        const error = checkSubtype(expected, t);\n        if (error)\n            this.error(error);\n        return error;\n    }\n}\n\nclass Let {\n    constructor(bindings, result) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n    evaluate(ctx) {\n        return this.result.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n        const bindings = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error('Variable names must contain only alphanumeric characters or \\'_\\'.', i);\n            }\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value)\n                return null;\n            bindings.push([name, value]);\n        }\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result)\n            return null;\n        return new Let(bindings, result);\n    }\n    outputDefined() {\n        return this.result.outputDefined();\n    }\n}\n\nclass Var {\n    constructor(name, boundExpression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n    static parse(args, context) {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error('\\'var\\' expression requires exactly one string literal argument.');\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n        return new Var(name, context.scope.get(name));\n    }\n    evaluate(ctx) {\n        return this.boundExpression.evaluate(ctx);\n    }\n    eachChild() { }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass At {\n    constructor(type, index, input) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n        if (!index || !input)\n            return null;\n        const t = input.type;\n        return new At(t.itemType, index, input);\n    }\n    evaluate(ctx) {\n        const index = this.index.evaluate(ctx);\n        const array = this.input.evaluate(ctx);\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n        return array[index];\n    }\n    eachChild(fn) {\n        fn(this.index);\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass In {\n    constructor(needle, haystack) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n    static parse(args, context) {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(needle.type)} instead`);\n        }\n        return new In(needle, haystack);\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!haystack)\n            return false;\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(typeOf(needle))} instead.`);\n        }\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${typeToString(typeOf(haystack))} instead.`);\n        }\n        return haystack.indexOf(needle) >= 0;\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n    outputDefined() {\n        return true;\n    }\n}\n\nclass IndexOf {\n    constructor(needle, haystack, fromIndex) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(needle.type)} instead`);\n        }\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex)\n                return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        }\n        else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(typeOf(needle))} instead.`);\n        }\n        let fromIndex;\n        if (this.fromIndex) {\n            fromIndex = this.fromIndex.evaluate(ctx);\n        }\n        if (isValidNativeType(haystack, ['string'])) {\n            const rawIndex = haystack.indexOf(needle, fromIndex);\n            if (rawIndex === -1) {\n                return -1;\n            }\n            else {\n                // The index may be affected by surrogate pairs, so get the length of the preceding substring.\n                return [...haystack.slice(0, rawIndex)].length;\n            }\n        }\n        else if (isValidNativeType(haystack, ['array'])) {\n            return haystack.indexOf(needle, fromIndex);\n        }\n        else {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${typeToString(typeOf(haystack))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass Match {\n    constructor(inputType, outputType, input, cases, outputs, otherwise) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error('Expected an even number of arguments.');\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error('Branch labels must be numbers or strings.');\n                }\n                else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n                }\n                else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error('Numeric branch labels must be integer values.');\n                }\n                else if (!inputType) {\n                    inputType = typeOf(label);\n                }\n                else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n                cases[String(label)] = outputs.length;\n            }\n            const result = context.parse(value, i, outputType);\n            if (!result)\n                return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input)\n            return null;\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype(inputType, input.type)) {\n            return null;\n        }\n        return new Match(inputType, outputType, input, cases, outputs, otherwise);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n}\n\nclass Case {\n    constructor(type, branches, otherwise) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error('Expected an odd number of arguments.');\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test)\n                return null;\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result)\n                return null;\n            branches.push([test, result]);\n            outputType = outputType || result.type;\n        }\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (!outputType)\n            throw new Error('Can\\'t infer output type');\n        return new Case(outputType, branches, otherwise);\n    }\n    evaluate(ctx) {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n}\n\nclass Slice {\n    constructor(type, input, beginIndex, endIndex) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n        if (!input || !beginIndex)\n            return null;\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${typeToString(input.type)} instead`);\n        }\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex)\n                return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        }\n        else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const beginIndex = this.beginIndex.evaluate(ctx);\n        let endIndex;\n        if (this.endIndex) {\n            endIndex = this.endIndex.evaluate(ctx);\n        }\n        if (isValidNativeType(input, ['string'])) {\n            // Indices may be affected by surrogate pairs.\n            return [...input].slice(beginIndex, endIndex).join('');\n        }\n        else if (isValidNativeType(input, ['array'])) {\n            return input.slice(beginIndex, endIndex);\n        }\n        else {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${typeToString(typeOf(input))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nfunction findStopLessThanOrEqualTo(stops, input) {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n            lowerIndex = currentIndex + 1;\n        }\n        else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        }\n        else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n    return 0;\n}\n\nclass Step {\n    constructor(type, input, stops) {\n        this.type = type;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static parse(args, context) {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error('Expected an even number of arguments.');\n        }\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n            const labelKey = i;\n            const valueKey = i + 1;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n        return new Step(outputType, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar unitbezier;\nvar hasRequiredUnitbezier;\n\nfunction requireUnitbezier () {\n\tif (hasRequiredUnitbezier) return unitbezier;\n\thasRequiredUnitbezier = 1;\n\n\tunitbezier = UnitBezier;\n\n\tfunction UnitBezier(p1x, p1y, p2x, p2y) {\n\t    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n\t    this.cx = 3.0 * p1x;\n\t    this.bx = 3.0 * (p2x - p1x) - this.cx;\n\t    this.ax = 1.0 - this.cx - this.bx;\n\n\t    this.cy = 3.0 * p1y;\n\t    this.by = 3.0 * (p2y - p1y) - this.cy;\n\t    this.ay = 1.0 - this.cy - this.by;\n\n\t    this.p1x = p1x;\n\t    this.p1y = p1y;\n\t    this.p2x = p2x;\n\t    this.p2y = p2y;\n\t}\n\n\tUnitBezier.prototype = {\n\t    sampleCurveX: function (t) {\n\t        // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n\t        return ((this.ax * t + this.bx) * t + this.cx) * t;\n\t    },\n\n\t    sampleCurveY: function (t) {\n\t        return ((this.ay * t + this.by) * t + this.cy) * t;\n\t    },\n\n\t    sampleCurveDerivativeX: function (t) {\n\t        return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n\t    },\n\n\t    solveCurveX: function (x, epsilon) {\n\t        if (epsilon === undefined) epsilon = 1e-6;\n\n\t        if (x < 0.0) return 0.0;\n\t        if (x > 1.0) return 1.0;\n\n\t        var t = x;\n\n\t        // First try a few iterations of Newton's method - normally very fast.\n\t        for (var i = 0; i < 8; i++) {\n\t            var x2 = this.sampleCurveX(t) - x;\n\t            if (Math.abs(x2) < epsilon) return t;\n\n\t            var d2 = this.sampleCurveDerivativeX(t);\n\t            if (Math.abs(d2) < 1e-6) break;\n\n\t            t = t - x2 / d2;\n\t        }\n\n\t        // Fall back to the bisection method for reliability.\n\t        var t0 = 0.0;\n\t        var t1 = 1.0;\n\t        t = x;\n\n\t        for (i = 0; i < 20; i++) {\n\t            x2 = this.sampleCurveX(t);\n\t            if (Math.abs(x2 - x) < epsilon) break;\n\n\t            if (x > x2) {\n\t                t0 = t;\n\t            } else {\n\t                t1 = t;\n\t            }\n\n\t            t = (t1 - t0) * 0.5 + t0;\n\t        }\n\n\t        return t;\n\t    },\n\n\t    solve: function (x, epsilon) {\n\t        return this.sampleCurveY(this.solveCurveX(x, epsilon));\n\t    }\n\t};\n\treturn unitbezier;\n}\n\nvar unitbezierExports = requireUnitbezier();\nvar UnitBezier = /*@__PURE__*/getDefaultExportFromCjs(unitbezierExports);\n\nclass Interpolate {\n    constructor(type, operator, interpolation, input, stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static interpolationFactor(interpolation, input, lower, upper) {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        }\n        else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        }\n        else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n    static parse(args, context) {\n        let [operator, interpolation, input, ...rest] = args;\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error('Expected an interpolation type expression.', 1);\n        }\n        if (interpolation[0] === 'linear') {\n            interpolation = { name: 'linear' };\n        }\n        else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error('Exponential interpolation requires a numeric base.', 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        }\n        else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: controlPoints\n            };\n        }\n        else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error('Expected an even number of arguments.');\n        }\n        input = context.parse(input, 2, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        }\n        else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n        if (!verifyType(outputType, NumberType) &&\n            !verifyType(outputType, ProjectionDefinitionType) &&\n            !verifyType(outputType, ColorType) &&\n            !verifyType(outputType, PaddingType) &&\n            !verifyType(outputType, VariableAnchorOffsetCollectionType) &&\n            !verifyType(outputType, array(NumberType))) {\n            return context.error(`Type ${typeToString(outputType)} is not interpolatable.`);\n        }\n        return new Interpolate(outputType, operator, interpolation, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n        switch (this.operator) {\n            case 'interpolate':\n                switch (this.type.kind) {\n                    case 'number':\n                        return interpolateNumber(outputLower, outputUpper, t);\n                    case 'color':\n                        return Color.interpolate(outputLower, outputUpper, t);\n                    case 'padding':\n                        return Padding.interpolate(outputLower, outputUpper, t);\n                    case 'variableAnchorOffsetCollection':\n                        return VariableAnchorOffsetCollection.interpolate(outputLower, outputUpper, t);\n                    case 'array':\n                        return interpolateArray(outputLower, outputUpper, t);\n                    case 'projectionDefinition':\n                        return ProjectionDefinition.interpolate(outputLower, outputUpper, t);\n                }\n            case 'interpolate-hcl':\n                return Color.interpolate(outputLower, outputUpper, t, 'hcl');\n            case 'interpolate-lab':\n                return Color.interpolate(outputLower, outputUpper, t, 'lab');\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    }\n    else if (base === 1) {\n        return progress / difference;\n    }\n    else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\nconst interpolateFactory = {\n    color: Color.interpolate,\n    number: interpolateNumber,\n    padding: Padding.interpolate,\n    variableAnchorOffsetCollection: VariableAnchorOffsetCollection.interpolate,\n    array: interpolateArray\n};\n\nclass Coalesce {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expected at least one argument.');\n        }\n        let outputType = null;\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, { typeAnnotation: 'omit' });\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        if (!outputType)\n            throw new Error('No output type');\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce(outputType, parsedArgs);\n    }\n    evaluate(ctx) {\n        let result = null;\n        let argCount = 0;\n        let requestedImageName;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image name so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                if (!requestedImageName) {\n                    requestedImageName = result.name;\n                }\n                result = null;\n                if (argCount === this.args.length) {\n                    result = requestedImageName;\n                }\n            }\n            if (result !== null)\n                break;\n        }\n        return result;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nfunction isComparableType(op, type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    }\n    else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\nfunction eq(ctx, a, b) { return a === b; }\nfunction neq(ctx, a, b) { return a !== b; }\nfunction lt(ctx, a, b) { return a < b; }\nfunction gt(ctx, a, b) { return a > b; }\nfunction lteq(ctx, a, b) { return a <= b; }\nfunction gteq(ctx, a, b) { return a >= b; }\nfunction eqCollate(ctx, a, b, c) { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx, a, b, c) { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx, a, b, c) { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx, a, b, c) { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx, a, b, c) { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx, a, b, c) { return c.compare(a, b) >= 0; }\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op, compareBasic, compareWithCollator) {\n    const isOrderComparison = op !== '==' && op !== '!=';\n    return class Comparison {\n        constructor(lhs, rhs, collator) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n        static parse(args, context) {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error('Expected two or three arguments.');\n            const op = args[0];\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs)\n                return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${typeToString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs)\n                return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${typeToString(rhs.type)}'.`);\n            }\n            if (lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value') {\n                return context.error(`Cannot compare types '${typeToString(lhs.type)}' and '${typeToString(rhs.type)}'.`);\n            }\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                }\n                else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n            let collator = null;\n            if (args.length === 4) {\n                if (lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value') {\n                    return context.error('Cannot use collator to compare non-string types.');\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator)\n                    return null;\n            }\n            return new Comparison(lhs, rhs, collator);\n        }\n        evaluate(ctx) {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n        eachChild(fn) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n        outputDefined() {\n            return true;\n        }\n    };\n}\nconst Equals = makeComparison('==', eq, eqCollate);\nconst NotEquals = makeComparison('!=', neq, neqCollate);\nconst LessThan = makeComparison('<', lt, ltCollate);\nconst GreaterThan = makeComparison('>', gt, gtCollate);\nconst LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nconst GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n\nclass CollatorExpression {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error('Expected one argument.');\n        const options = args[1];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error('Collator options argument must be an object.');\n        const caseSensitive = context.parse(options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive)\n            return null;\n        const diacriticSensitive = context.parse(options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive)\n            return null;\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n    evaluate(ctx) {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n    eachChild(fn) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n    outputDefined() {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n}\n\nclass NumberFormat {\n    constructor(number, locale, currency, minFractionDigits, maxFractionDigits) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error('Expected two arguments.');\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number)\n            return null;\n        const options = args[2];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error('NumberFormat options argument must be an object.');\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency)\n                return null;\n        }\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits)\n                return null;\n        }\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits)\n                return null;\n        }\n        return new NumberFormat(number, locale, currency, minFractionDigits, maxFractionDigits);\n    }\n    evaluate(ctx) {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [], {\n            style: this.currency ? 'currency' : 'decimal',\n            currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n            minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n            maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n        }).format(this.number.evaluate(ctx));\n    }\n    eachChild(fn) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass FormatExpression {\n    constructor(sections) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expected at least one argument.');\n        }\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object') {\n            return context.error('First argument must be an image or text section.');\n        }\n        const sections = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = args[i];\n            if (nextTokenMayBeObject && typeof arg === 'object' && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale)\n                        return null;\n                }\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font)\n                        return null;\n                }\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor)\n                        return null;\n                }\n                let verticalAlign = null;\n                if (arg['vertical-align']) {\n                    if (typeof arg['vertical-align'] === 'string' && !VERTICAL_ALIGN_OPTIONS.includes(arg['vertical-align'])) {\n                        return context.error(`'vertical-align' must be one of: 'bottom', 'center', 'top' but found '${arg['vertical-align']}' instead.`);\n                    }\n                    verticalAlign = context.parse(arg['vertical-align'], 1, StringType);\n                    if (!verticalAlign)\n                        return null;\n                }\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n                lastExpression.verticalAlign = verticalAlign;\n            }\n            else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content)\n                    return null;\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error('Formatted text type must be \\'string\\', \\'value\\', \\'image\\' or \\'null\\'.');\n                nextTokenMayBeObject = true;\n                sections.push({ content, scale: null, font: null, textColor: null, verticalAlign: null });\n            }\n        }\n        return new FormatExpression(sections);\n    }\n    evaluate(ctx) {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null, section.verticalAlign ? section.verticalAlign.evaluate(ctx) : null);\n            }\n            return new FormattedSection(valueToString(evaluatedContent), null, section.scale ? section.scale.evaluate(ctx) : null, section.font ? section.font.evaluate(ctx).join(',') : null, section.textColor ? section.textColor.evaluate(ctx) : null, section.verticalAlign ? section.verticalAlign.evaluate(ctx) : null);\n        };\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n    eachChild(fn) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n            if (section.verticalAlign) {\n                fn(section.verticalAlign);\n            }\n        }\n    }\n    outputDefined() {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n}\n\nclass ImageExpression {\n    constructor(input) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2) {\n            return context.error('Expected two arguments.');\n        }\n        const name = context.parse(args[1], 1, StringType);\n        if (!name)\n            return context.error('No image name provided.');\n        return new ImageExpression(name);\n    }\n    evaluate(ctx) {\n        const evaluatedImageName = this.input.evaluate(ctx);\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages)\n            value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n        return value;\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n}\n\nclass Length {\n    constructor(input) {\n        this.type = NumberType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n        const input = context.parse(args[1], 1);\n        if (!input)\n            return null;\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${typeToString(input.type)} instead.`);\n        return new Length(input);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            // The length may be affected by surrogate pairs.\n            return [...input].length;\n        }\n        else if (Array.isArray(input)) {\n            return input.length;\n        }\n        else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${typeToString(typeOf(input))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nconst EXTENT = 8192;\nfunction getTileCoordinates(p, canonical) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\nfunction getLngLatFromTileCoord(coord, canonical) {\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    const x = (coord[0] / EXTENT + canonical.x) / tilesAtZoom;\n    const y = (coord[1] / EXTENT + canonical.y) / tilesAtZoom;\n    return [lngFromMercatorXfromLng(x), latFromMercatorY(y)];\n}\nfunction mercatorXfromLng(lng) {\n    return (180 + lng) / 360;\n}\nfunction lngFromMercatorXfromLng(mercatorX) {\n    return mercatorX * 360 - 180;\n}\nfunction mercatorYfromLat(lat) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\nfunction latFromMercatorY(mercatorY) {\n    return 360 / Math.PI * Math.atan(Math.exp((180 - mercatorY * 360) * Math.PI / 180)) - 90;\n}\nfunction updateBBox(bbox, coord) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\nfunction boxWithinBox(bbox1, bbox2) {\n    if (bbox1[0] <= bbox2[0])\n        return false;\n    if (bbox1[2] >= bbox2[2])\n        return false;\n    if (bbox1[1] <= bbox2[1])\n        return false;\n    if (bbox1[3] >= bbox2[3])\n        return false;\n    return true;\n}\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\nfunction pointOnBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction segmentIntersectSegment(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0)\n        return false;\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b))\n        return true;\n    return false;\n}\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (segmentIntersectSegment(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings, trueIfOnBoundary = false) {\n    let inside = false;\n    for (const ring of rings) {\n        for (let j = 0; j < ring.length - 1; j++) {\n            if (pointOnBoundary(point, ring[j], ring[j + 1]))\n                return trueIfOnBoundary;\n            if (rayIntersect(point, ring[j], ring[j + 1]))\n                inside = !inside;\n        }\n    }\n    return inside;\n}\nfunction pointWithinPolygons(point, polygons) {\n    for (const polygon of polygons) {\n        if (pointWithinPolygon(point, polygon))\n            return true;\n    }\n    return false;\n}\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (const point of line) {\n        if (!pointWithinPolygon(point, polygon)) {\n            return false;\n        }\n    }\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction lineStringWithinPolygons(line, polygons) {\n    for (const polygon of polygons) {\n        if (lineStringWithinPolygon(line, polygon))\n            return true;\n    }\n    return false;\n}\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 = (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0))\n        return true;\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox, canonical) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\nfunction getTilePolygons(coordinates, bbox, canonical) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\nfunction pointsWithinPolygons(ctx, polygonGeometry) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const canonical = ctx.canonicalID();\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nfunction linesWithinPolygons(ctx, polygonGeometry) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const canonical = ctx.canonicalID();\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nclass Within {\n    constructor(geojson, geometries) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                const polygonsCoords = [];\n                for (const polygon of geojson.features) {\n                    const { type, coordinates } = polygon.geometry;\n                    if (type === 'Polygon') {\n                        polygonsCoords.push(coordinates);\n                    }\n                    if (type === 'MultiPolygon') {\n                        polygonsCoords.push(...coordinates);\n                    }\n                }\n                if (polygonsCoords.length) {\n                    const multipolygonWrapper = {\n                        type: 'MultiPolygon',\n                        coordinates: polygonsCoords\n                    };\n                    return new Within(geojson, multipolygonWrapper);\n                }\n            }\n            else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            }\n            else if (geojson.type === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error('\\'within\\' expression requires valid geojson object that contains polygon geometry type.');\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nclass TinyQueue {\n    constructor(data = [], compare = (a, b) => (a < b ? -1 : a > b ? 1 : 0)) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this._up(this.length++);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n\n        if (--this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let bestChild = (pos << 1) + 1; // initially it is the left child\n            const right = bestChild + 1;\n\n            if (right < this.length && compare(data[right], data[bestChild]) < 0) {\n                bestChild = right;\n            }\n            if (compare(data[bestChild], item) >= 0) break;\n\n            data[pos] = data[bestChild];\n            pos = bestChild;\n        }\n\n        data[pos] = item;\n    }\n}\n\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nfunction quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * Classifies an array of rings into polygons with outer rings and holes\n * @param rings - the rings to classify\n * @param maxRings - the maximum number of rings to include in a polygon, use 0 to include all rings\n * @returns an array of polygons with internal rings as holes\n */\nfunction classifyRings(rings, maxRings) {\n    const len = rings.length;\n    if (len <= 1)\n        return [rings];\n    const polygons = [];\n    let polygon;\n    let ccw;\n    for (const ring of rings) {\n        const area = calculateSignedArea(ring);\n        if (area === 0)\n            continue;\n        ring.area = Math.abs(area);\n        if (ccw === undefined)\n            ccw = area < 0;\n        if (ccw === area < 0) {\n            if (polygon)\n                polygons.push(polygon);\n            polygon = [ring];\n        }\n        else {\n            polygon.push(ring);\n        }\n    }\n    if (polygon)\n        polygons.push(polygon);\n    // Earcut performance degrades with the # of rings in a polygon. For this\n    // reason, we limit strip out all but the `maxRings` largest rings.\n    if (maxRings > 1) {\n        for (let j = 0; j < polygons.length; j++) {\n            if (polygons[j].length <= maxRings)\n                continue;\n            quickselect(polygons[j], maxRings, 1, polygons[j].length - 1, compareAreas);\n            polygons[j] = polygons[j].slice(0, maxRings);\n        }\n    }\n    return polygons;\n}\nfunction compareAreas(a, b) {\n    return b.area - a.area;\n}\n/**\n * Returns the signed area for the polygon ring.  Positive areas are exterior rings and\n * have a clockwise winding.  Negative areas are interior rings and have a counter clockwise\n * ordering.\n *\n * @param ring - Exterior or interior ring\n * @returns Signed area\n */\nfunction calculateSignedArea(ring) {\n    let sum = 0;\n    for (let i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n\n// This is taken from https://github.com/mapbox/cheap-ruler/ in order to take only the relevant parts\n// Values that define WGS84 ellipsoid model of the Earth\nconst RE = 6378.137; // equatorial radius\nconst FE = 1 / 298.257223563; // flattening\nconst E2 = FE * (2 - FE);\nconst RAD = Math.PI / 180;\nclass CheapRuler {\n    constructor(lat) {\n        // Curvature formulas from https://en.wikipedia.org/wiki/Earth_radius#Meridional\n        const m = RAD * RE * 1000;\n        const coslat = Math.cos(lat * RAD);\n        const w2 = 1 / (1 - E2 * (1 - coslat * coslat));\n        const w = Math.sqrt(w2);\n        // multipliers for converting longitude and latitude degrees into distance\n        this.kx = m * w * coslat; // based on normal radius of curvature\n        this.ky = m * w * w2 * (1 - E2); // based on meridional radius of curvature\n    }\n    /**\n     * Given two points of the form [longitude, latitude], returns the distance.\n     *\n     * @param a - point [longitude, latitude]\n     * @param b - point [longitude, latitude]\n     * @returns distance\n     * @example\n     * const distance = ruler.distance([30.5, 50.5], [30.51, 50.49]);\n     * //=distance\n     */\n    distance(a, b) {\n        const dx = this.wrap(a[0] - b[0]) * this.kx;\n        const dy = (a[1] - b[1]) * this.ky;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n    /**\n     * Returns an object of the form {point, index, t}, where point is closest point on the line\n     * from the given point, index is the start index of the segment with the closest point,\n     * and t is a parameter from 0 to 1 that indicates where the closest point is on that segment.\n     *\n     * @param line - an array of points that form the line\n     * @param p - point [longitude, latitude]\n     * @returns the nearest point, its index in the array and the proportion along the line\n     * @example\n     * const point = ruler.pointOnLine(line, [-67.04, 50.5]).point;\n     * //=point\n     */\n    pointOnLine(line, p) {\n        let minDist = Infinity;\n        let minX, minY, minI, minT;\n        for (let i = 0; i < line.length - 1; i++) {\n            let x = line[i][0];\n            let y = line[i][1];\n            let dx = this.wrap(line[i + 1][0] - x) * this.kx;\n            let dy = (line[i + 1][1] - y) * this.ky;\n            let t = 0;\n            if (dx !== 0 || dy !== 0) {\n                t = (this.wrap(p[0] - x) * this.kx * dx + (p[1] - y) * this.ky * dy) / (dx * dx + dy * dy);\n                if (t > 1) {\n                    x = line[i + 1][0];\n                    y = line[i + 1][1];\n                }\n                else if (t > 0) {\n                    x += (dx / this.kx) * t;\n                    y += (dy / this.ky) * t;\n                }\n            }\n            dx = this.wrap(p[0] - x) * this.kx;\n            dy = (p[1] - y) * this.ky;\n            const sqDist = dx * dx + dy * dy;\n            if (sqDist < minDist) {\n                minDist = sqDist;\n                minX = x;\n                minY = y;\n                minI = i;\n                minT = t;\n            }\n        }\n        return {\n            point: [minX, minY],\n            index: minI,\n            t: Math.max(0, Math.min(1, minT))\n        };\n    }\n    wrap(deg) {\n        while (deg < -180)\n            deg += 360;\n        while (deg > 180)\n            deg -= 360;\n        return deg;\n    }\n}\n\nconst MinPointsSize = 100;\nconst MinLinePointsSize = 50;\nfunction compareDistPair(a, b) {\n    return b[0] - a[0];\n}\nfunction getRangeSize(range) {\n    return range[1] - range[0] + 1;\n}\nfunction isRangeSafe(range, threshold) {\n    return range[1] >= range[0] && range[1] < threshold;\n}\nfunction splitRange(range, isLine) {\n    if (range[0] > range[1]) {\n        return [null, null];\n    }\n    const size = getRangeSize(range);\n    if (isLine) {\n        if (size === 2) {\n            return [range, null];\n        }\n        const size1 = Math.floor(size / 2);\n        return [[range[0], range[0] + size1],\n            [range[0] + size1, range[1]]];\n    }\n    if (size === 1) {\n        return [range, null];\n    }\n    const size1 = Math.floor(size / 2) - 1;\n    return [[range[0], range[0] + size1],\n        [range[0] + size1 + 1, range[1]]];\n}\nfunction getBBox(coords, range) {\n    if (!isRangeSafe(range, coords.length)) {\n        return [Infinity, Infinity, -Infinity, -Infinity];\n    }\n    const bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    for (let i = range[0]; i <= range[1]; ++i) {\n        updateBBox(bbox, coords[i]);\n    }\n    return bbox;\n}\nfunction getPolygonBBox(polygon) {\n    const bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    for (const ring of polygon) {\n        for (const coord of ring) {\n            updateBBox(bbox, coord);\n        }\n    }\n    return bbox;\n}\nfunction isValidBBox(bbox) {\n    return bbox[0] !== -Infinity && bbox[1] !== -Infinity && bbox[2] !== Infinity && bbox[3] !== Infinity;\n}\n// Calculate the distance between two bounding boxes.\n// Calculate the delta in x and y direction, and use two fake points {0.0, 0.0}\n// and {dx, dy} to calculate the distance. Distance will be 0.0 if bounding box are overlapping.\nfunction bboxToBBoxDistance(bbox1, bbox2, ruler) {\n    if (!isValidBBox(bbox1) || !isValidBBox(bbox2)) {\n        return NaN;\n    }\n    let dx = 0.0;\n    let dy = 0.0;\n    // bbox1 in left side\n    if (bbox1[2] < bbox2[0]) {\n        dx = bbox2[0] - bbox1[2];\n    }\n    // bbox1 in right side\n    if (bbox1[0] > bbox2[2]) {\n        dx = bbox1[0] - bbox2[2];\n    }\n    // bbox1 in above side\n    if (bbox1[1] > bbox2[3]) {\n        dy = bbox1[1] - bbox2[3];\n    }\n    // bbox1 in down side\n    if (bbox1[3] < bbox2[1]) {\n        dy = bbox2[1] - bbox1[3];\n    }\n    return ruler.distance([0.0, 0.0], [dx, dy]);\n}\nfunction pointToLineDistance(point, line, ruler) {\n    const nearestPoint = ruler.pointOnLine(line, point);\n    return ruler.distance(point, nearestPoint.point);\n}\nfunction segmentToSegmentDistance(p1, p2, q1, q2, ruler) {\n    const dist1 = Math.min(pointToLineDistance(p1, [q1, q2], ruler), pointToLineDistance(p2, [q1, q2], ruler));\n    const dist2 = Math.min(pointToLineDistance(q1, [p1, p2], ruler), pointToLineDistance(q2, [p1, p2], ruler));\n    return Math.min(dist1, dist2);\n}\nfunction lineToLineDistance(line1, range1, line2, range2, ruler) {\n    const rangeSafe = isRangeSafe(range1, line1.length) && isRangeSafe(range2, line2.length);\n    if (!rangeSafe) {\n        return Infinity;\n    }\n    let dist = Infinity;\n    for (let i = range1[0]; i < range1[1]; ++i) {\n        const p1 = line1[i];\n        const p2 = line1[i + 1];\n        for (let j = range2[0]; j < range2[1]; ++j) {\n            const q1 = line2[j];\n            const q2 = line2[j + 1];\n            if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                return 0.0;\n            }\n            dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n        }\n    }\n    return dist;\n}\nfunction pointsToPointsDistance(points1, range1, points2, range2, ruler) {\n    const rangeSafe = isRangeSafe(range1, points1.length) && isRangeSafe(range2, points2.length);\n    if (!rangeSafe) {\n        return NaN;\n    }\n    let dist = Infinity;\n    for (let i = range1[0]; i <= range1[1]; ++i) {\n        for (let j = range2[0]; j <= range2[1]; ++j) {\n            dist = Math.min(dist, ruler.distance(points1[i], points2[j]));\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n    }\n    return dist;\n}\nfunction pointToPolygonDistance(point, polygon, ruler) {\n    if (pointWithinPolygon(point, polygon, true)) {\n        return 0.0;\n    }\n    let dist = Infinity;\n    for (const ring of polygon) {\n        const front = ring[0];\n        const back = ring[ring.length - 1];\n        if (front !== back) {\n            dist = Math.min(dist, pointToLineDistance(point, [back, front], ruler));\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n        const nearestPoint = ruler.pointOnLine(ring, point);\n        dist = Math.min(dist, ruler.distance(point, nearestPoint.point));\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction lineToPolygonDistance(line, range, polygon, ruler) {\n    if (!isRangeSafe(range, line.length)) {\n        return NaN;\n    }\n    for (let i = range[0]; i <= range[1]; ++i) {\n        if (pointWithinPolygon(line[i], polygon, true)) {\n            return 0.0;\n        }\n    }\n    let dist = Infinity;\n    for (let i = range[0]; i < range[1]; ++i) {\n        const p1 = line[i];\n        const p2 = line[i + 1];\n        for (const ring of polygon) {\n            for (let j = 0, len = ring.length, k = len - 1; j < len; k = j++) {\n                const q1 = ring[k];\n                const q2 = ring[j];\n                if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                    return 0.0;\n                }\n                dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n            }\n        }\n    }\n    return dist;\n}\nfunction polygonIntersect(poly1, poly2) {\n    for (const ring of poly1) {\n        for (const point of ring) {\n            if (pointWithinPolygon(point, poly2, true)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction polygonToPolygonDistance(polygon1, polygon2, ruler, currentMiniDist = Infinity) {\n    const bbox1 = getPolygonBBox(polygon1);\n    const bbox2 = getPolygonBBox(polygon2);\n    if (currentMiniDist !== Infinity && bboxToBBoxDistance(bbox1, bbox2, ruler) >= currentMiniDist) {\n        return currentMiniDist;\n    }\n    if (boxWithinBox(bbox1, bbox2)) {\n        if (polygonIntersect(polygon1, polygon2)) {\n            return 0.0;\n        }\n    }\n    else if (polygonIntersect(polygon2, polygon1)) {\n        return 0.0;\n    }\n    let dist = Infinity;\n    for (const ring1 of polygon1) {\n        for (let i = 0, len1 = ring1.length, l = len1 - 1; i < len1; l = i++) {\n            const p1 = ring1[l];\n            const p2 = ring1[i];\n            for (const ring2 of polygon2) {\n                for (let j = 0, len2 = ring2.length, k = len2 - 1; j < len2; k = j++) {\n                    const q1 = ring2[k];\n                    const q2 = ring2[j];\n                    if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                        return 0.0;\n                    }\n                    dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n                }\n            }\n        }\n    }\n    return dist;\n}\nfunction updateQueue(distQueue, miniDist, ruler, points, polyBBox, rangeA) {\n    if (!rangeA) {\n        return;\n    }\n    const tempDist = bboxToBBoxDistance(getBBox(points, rangeA), polyBBox, ruler);\n    // Insert new pair to the queue if the bbox distance is less than\n    // miniDist, The pair with biggest distance will be at the top\n    if (tempDist < miniDist) {\n        distQueue.push([tempDist, rangeA, [0, 0]]);\n    }\n}\nfunction updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, range1, range2) {\n    if (!range1 || !range2) {\n        return;\n    }\n    const tempDist = bboxToBBoxDistance(getBBox(pointSet1, range1), getBBox(pointSet2, range2), ruler);\n    // Insert new pair to the queue if the bbox distance is less than\n    // miniDist, The pair with biggest distance will be at the top\n    if (tempDist < miniDist) {\n        distQueue.push([tempDist, range1, range2]);\n    }\n}\n// Divide and conquer, the time complexity is O(n*lgn), faster than Brute force\n// O(n*n) Most of the time, use index for in-place processing.\nfunction pointsToPolygonDistance(points, isLine, polygon, ruler, currentMiniDist = Infinity) {\n    let miniDist = Math.min(ruler.distance(points[0], polygon[0][0]), currentMiniDist);\n    if (miniDist === 0.0) {\n        return miniDist;\n    }\n    const distQueue = new TinyQueue([[0, [0, points.length - 1], [0, 0]]], compareDistPair);\n    const polyBBox = getPolygonBBox(polygon);\n    while (distQueue.length > 0) {\n        const distPair = distQueue.pop();\n        if (distPair[0] >= miniDist) {\n            continue;\n        }\n        const range = distPair[1];\n        // In case the set size are relatively small, we could use brute-force directly\n        const threshold = isLine ? MinLinePointsSize : MinPointsSize;\n        if (getRangeSize(range) <= threshold) {\n            if (!isRangeSafe(range, points.length)) {\n                return NaN;\n            }\n            if (isLine) {\n                const tempDist = lineToPolygonDistance(points, range, polygon, ruler);\n                if (isNaN(tempDist) || tempDist === 0.0) {\n                    return tempDist;\n                }\n                miniDist = Math.min(miniDist, tempDist);\n            }\n            else {\n                for (let i = range[0]; i <= range[1]; ++i) {\n                    const tempDist = pointToPolygonDistance(points[i], polygon, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return 0.0;\n                    }\n                }\n            }\n        }\n        else {\n            const newRangesA = splitRange(range, isLine);\n            updateQueue(distQueue, miniDist, ruler, points, polyBBox, newRangesA[0]);\n            updateQueue(distQueue, miniDist, ruler, points, polyBBox, newRangesA[1]);\n        }\n    }\n    return miniDist;\n}\nfunction pointSetToPointSetDistance(pointSet1, isLine1, pointSet2, isLine2, ruler, currentMiniDist = Infinity) {\n    let miniDist = Math.min(currentMiniDist, ruler.distance(pointSet1[0], pointSet2[0]));\n    if (miniDist === 0.0) {\n        return miniDist;\n    }\n    const distQueue = new TinyQueue([[0, [0, pointSet1.length - 1], [0, pointSet2.length - 1]]], compareDistPair);\n    while (distQueue.length > 0) {\n        const distPair = distQueue.pop();\n        if (distPair[0] >= miniDist) {\n            continue;\n        }\n        const rangeA = distPair[1];\n        const rangeB = distPair[2];\n        const threshold1 = isLine1 ? MinLinePointsSize : MinPointsSize;\n        const threshold2 = isLine2 ? MinLinePointsSize : MinPointsSize;\n        // In case the set size are relatively small, we could use brute-force directly\n        if (getRangeSize(rangeA) <= threshold1 && getRangeSize(rangeB) <= threshold2) {\n            if (!isRangeSafe(rangeA, pointSet1.length) && isRangeSafe(rangeB, pointSet2.length)) {\n                return NaN;\n            }\n            let tempDist;\n            if (isLine1 && isLine2) {\n                tempDist = lineToLineDistance(pointSet1, rangeA, pointSet2, rangeB, ruler);\n                miniDist = Math.min(miniDist, tempDist);\n            }\n            else if (isLine1 && !isLine2) {\n                const sublibe = pointSet1.slice(rangeA[0], rangeA[1] + 1);\n                for (let i = rangeB[0]; i <= rangeB[1]; ++i) {\n                    tempDist = pointToLineDistance(pointSet2[i], sublibe, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return miniDist;\n                    }\n                }\n            }\n            else if (!isLine1 && isLine2) {\n                const sublibe = pointSet2.slice(rangeB[0], rangeB[1] + 1);\n                for (let i = rangeA[0]; i <= rangeA[1]; ++i) {\n                    tempDist = pointToLineDistance(pointSet1[i], sublibe, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return miniDist;\n                    }\n                }\n            }\n            else {\n                tempDist = pointsToPointsDistance(pointSet1, rangeA, pointSet2, rangeB, ruler);\n                miniDist = Math.min(miniDist, tempDist);\n            }\n        }\n        else {\n            const newRangesA = splitRange(rangeA, isLine1);\n            const newRangesB = splitRange(rangeB, isLine2);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[0]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[1]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[0]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[1]);\n        }\n    }\n    return miniDist;\n}\nfunction pointToGeometryDistance(ctx, geometries) {\n    const tilePoints = ctx.geometry();\n    const pointPosition = tilePoints.flat().map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n    if (tilePoints.length === 0) {\n        return NaN;\n    }\n    const ruler = new CheapRuler(pointPosition[0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        switch (geometry.type) {\n            case 'Point':\n                dist = Math.min(dist, pointSetToPointSetDistance(pointPosition, false, [geometry.coordinates], false, ruler, dist));\n                break;\n            case 'LineString':\n                dist = Math.min(dist, pointSetToPointSetDistance(pointPosition, false, geometry.coordinates, true, ruler, dist));\n                break;\n            case 'Polygon':\n                dist = Math.min(dist, pointsToPolygonDistance(pointPosition, false, geometry.coordinates, ruler, dist));\n                break;\n        }\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction lineStringToGeometryDistance(ctx, geometries) {\n    const tileLine = ctx.geometry();\n    const linePositions = tileLine.flat().map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n    if (tileLine.length === 0) {\n        return NaN;\n    }\n    const ruler = new CheapRuler(linePositions[0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        switch (geometry.type) {\n            case 'Point':\n                dist = Math.min(dist, pointSetToPointSetDistance(linePositions, true, [geometry.coordinates], false, ruler, dist));\n                break;\n            case 'LineString':\n                dist = Math.min(dist, pointSetToPointSetDistance(linePositions, true, geometry.coordinates, true, ruler, dist));\n                break;\n            case 'Polygon':\n                dist = Math.min(dist, pointsToPolygonDistance(linePositions, true, geometry.coordinates, ruler, dist));\n                break;\n        }\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction polygonToGeometryDistance(ctx, geometries) {\n    const tilePolygon = ctx.geometry();\n    if (tilePolygon.length === 0 || tilePolygon[0].length === 0) {\n        return NaN;\n    }\n    const polygons = classifyRings(tilePolygon, 0).map(polygon => {\n        return polygon.map(ring => {\n            return ring.map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n        });\n    });\n    const ruler = new CheapRuler(polygons[0][0][0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        for (const polygon of polygons) {\n            switch (geometry.type) {\n                case 'Point':\n                    dist = Math.min(dist, pointsToPolygonDistance([geometry.coordinates], false, polygon, ruler, dist));\n                    break;\n                case 'LineString':\n                    dist = Math.min(dist, pointsToPolygonDistance(geometry.coordinates, true, polygon, ruler, dist));\n                    break;\n                case 'Polygon':\n                    dist = Math.min(dist, polygonToPolygonDistance(polygon, geometry.coordinates, ruler, dist));\n                    break;\n            }\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n    }\n    return dist;\n}\nfunction toSimpleGeometry(geometry) {\n    if (geometry.type === 'MultiPolygon') {\n        return geometry.coordinates.map(polygon => {\n            return {\n                type: 'Polygon',\n                coordinates: polygon\n            };\n        });\n    }\n    if (geometry.type === 'MultiLineString') {\n        return geometry.coordinates.map(lineString => {\n            return {\n                type: 'LineString',\n                coordinates: lineString\n            };\n        });\n    }\n    if (geometry.type === 'MultiPoint') {\n        return geometry.coordinates.map(point => {\n            return {\n                type: 'Point',\n                coordinates: point\n            };\n        });\n    }\n    return [geometry];\n}\nclass Distance {\n    constructor(geojson, geometries) {\n        this.type = NumberType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'distance' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                return new Distance(geojson, geojson.features.map(feature => toSimpleGeometry(feature.geometry)).flat());\n            }\n            else if (geojson.type === 'Feature') {\n                return new Distance(geojson, toSimpleGeometry(geojson.geometry));\n            }\n            else if ('type' in geojson && 'coordinates' in geojson) {\n                return new Distance(geojson, toSimpleGeometry(geojson));\n            }\n        }\n        return context.error('\\'distance\\' expression requires valid geojson object that contains polygon geometry type.');\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointToGeometryDistance(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'LineString') {\n                return lineStringToGeometryDistance(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'Polygon') {\n                return polygonToGeometryDistance(ctx, this.geometries);\n            }\n        }\n        return NaN;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nconst expressions$1 = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within,\n    'distance': Distance\n};\n\nclass CompoundExpression {\n    constructor(name, type, evaluate, args) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n    evaluate(ctx) {\n        return this._evaluate(ctx, this.args);\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return false;\n    }\n    static parse(args, context) {\n        const op = args[0];\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n        const overloads = availableOverloads.filter(([signature]) => (!Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n        let signatureContext = null;\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, isExpressionConstant, context.path, null, context.scope);\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        }\n        else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed)\n                    return null;\n                actualTypes.push(typeToString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n        return null;\n    }\n    static register(registry, definitions) {\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error)\n        throw new RuntimeError(error);\n    return new Color(r / 255, g / 255, b / 255, alpha, false);\n}\nfunction has(key, obj) {\n    return key in obj;\n}\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\nfunction varargs(type) {\n    return { type };\n}\nCompoundExpression.register(expressions$1, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            const [r, g, b, a] = v.evaluate(ctx).rgb;\n            return [r * 255, g * 255, b * 255, a];\n        },\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[k.value] === v.value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === v.value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === v.value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => k.value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => v.value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => v.value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => v.value.indexOf(ctx.properties()[k.value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[k.value], v.value, 0, v.value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\nfunction stringifySignature(signature) {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(typeToString).join(', ')})`;\n    }\n    else {\n        return `(${typeToString(signature.type)}...)`;\n    }\n}\nfunction isExpressionConstant(expression) {\n    if (expression instanceof Var) {\n        return isExpressionConstant(expression.boundExpression);\n    }\n    else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    }\n    else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    }\n    else if (expression instanceof Within) {\n        return false;\n    }\n    else if (expression instanceof Distance) {\n        return false;\n    }\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isExpressionConstant(child);\n        }\n        else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'accumulated', 'is-supported-script']);\n}\nfunction isFeatureConstant(e) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        }\n        else if (e.name === 'feature-state') {\n            return false;\n        }\n        else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        }\n        else if (e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id') {\n            return false;\n        }\n        else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n    if (e instanceof Within) {\n        return false;\n    }\n    if (e instanceof Distance) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isStateConstant(e) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isGlobalPropertyConstant(e, properties) {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) {\n        return false;\n    }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) {\n            result = false;\n        }\n    });\n    return result;\n}\n\nfunction success(value) {\n    return { result: 'success', value };\n}\nfunction error(value) {\n    return { result: 'error', value };\n}\n\nfunction supportsPropertyExpression(spec) {\n    return spec['property-type'] === 'data-driven' || spec['property-type'] === 'cross-faded-data-driven';\n}\nfunction supportsZoomExpression(spec) {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\nfunction supportsInterpolation(spec) {\n    return !!spec.expression && spec.expression.interpolated;\n}\n\nfunction getType(val) {\n    if (val instanceof Number) {\n        return 'number';\n    }\n    else if (val instanceof String) {\n        return 'string';\n    }\n    else if (val instanceof Boolean) {\n        return 'boolean';\n    }\n    else if (Array.isArray(val)) {\n        return 'array';\n    }\n    else if (val === null) {\n        return 'null';\n    }\n    else {\n        return typeof val;\n    }\n}\n\nfunction isFunction$1(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\nfunction identityFunction(x) {\n    return x;\n}\nfunction createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n    if (isColor || propertySpec.type === 'padding') {\n        const parseFn = isColor ? Color.parse : Padding.parse;\n        parameters = extendBy({}, parameters);\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], parseFn(stop[1])];\n            });\n        }\n        if (parameters.default) {\n            parameters.default = parseFn(parameters.default);\n        }\n        else {\n            parameters.default = parseFn(propertySpec.default);\n        }\n    }\n    if (parameters.colorSpace && !isSupportedInterpolationColorSpace(parameters.colorSpace)) {\n        throw new Error(`Unknown color space: \"${parameters.colorSpace}\"`);\n    }\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    }\n    else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    }\n    else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n    }\n    else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    }\n    else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n        const interpolationType = { name: 'linear' };\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({ zoom }, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    }\n    else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            { name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1 } : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({ zoom }) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    }\n    else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce$1(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\nfunction coalesce$1(a, b, c) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n    if (c !== undefined)\n        return c;\n}\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce$1(evaluated, parameters.default, propertySpec.default);\n}\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number')\n        return coalesce$1(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1)\n        return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0])\n        return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0])\n        return parameters.stops[n - 1][1];\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    return parameters.stops[index][1];\n}\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n    // Edge cases\n    if (getType(input) !== 'number')\n        return coalesce$1(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1)\n        return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0])\n        return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0])\n        return parameters.stops[n - 1][1];\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(input, base, parameters.stops[index][0], parameters.stops[index + 1][0]);\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    const interp = interpolateFactory[propertySpec.type] || identityFunction;\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t, parameters.colorSpace);\n            }\n        };\n    }\n    return interp(outputLower, outputUpper, t, parameters.colorSpace);\n}\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    switch (propertySpec.type) {\n        case 'color':\n            input = Color.parse(input);\n            break;\n        case 'formatted':\n            input = Formatted.fromString(input.toString());\n            break;\n        case 'resolvedImage':\n            input = ResolvedImage.fromString(input.toString());\n            break;\n        case 'padding':\n            input = Padding.parse(input);\n            break;\n        default:\n            if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n                input = undefined;\n            }\n    }\n    return coalesce$1(input, parameters.default, propertySpec.default);\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    }\n    else if (base === 1) {\n        return progress / difference;\n    }\n    else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nclass StyleExpression {\n    constructor(expression, propertySpec) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        return this.expression.evaluate(this._evaluator);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        }\n        catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\nfunction isExpression(expression) {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in expressions$1;\n}\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nfunction createExpression(expression, propertySpec) {\n    const parser = new ParsingContext(expressions$1, isExpressionConstant, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined, propertySpec && propertySpec.type === 'string' ? { typeAnnotation: 'coerce' } : undefined);\n    if (!parsed) {\n        return error(parser.errors);\n    }\n    return success(new StyleExpression(parsed, propertySpec));\n}\nclass ZoomConstantExpression {\n    constructor(kind, expression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'constant' && !isStateConstant(expression.expression);\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\nclass ZoomDependentExpression {\n    constructor(kind, expression, zoomStops, interpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'camera' && !isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    interpolationFactor(input, lower, upper) {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        }\n        else {\n            return 0;\n        }\n    }\n}\nfunction isZoomExpression(expression) {\n    return expression._styleExpression !== undefined;\n}\nfunction createPropertyExpression(expressionInput, propertySpec) {\n    const expression = createExpression(expressionInput, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n    const parsed = expression.value.expression;\n    const isFeatureConstantResult = isFeatureConstant(parsed);\n    if (!isFeatureConstantResult && !supportsPropertyExpression(propertySpec)) {\n        return error([new ExpressionParsingError('', 'data expressions not supported')]);\n    }\n    const isZoomConstant = isGlobalPropertyConstant(parsed, ['zoom']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ExpressionParsingError('', 'zoom expressions not supported')]);\n    }\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ExpressionParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    }\n    else if (zoomCurve instanceof ExpressionParsingError) {\n        return error([zoomCurve]);\n    }\n    else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ExpressionParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n    if (!zoomCurve) {\n        return success(isFeatureConstantResult ?\n            new ZoomConstantExpression('constant', expression.value) :\n            new ZoomConstantExpression('source', expression.value));\n    }\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n    return success(isFeatureConstantResult ?\n        new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType) :\n        new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType));\n}\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nclass StylePropertyFunction {\n    constructor(parameters, specification) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extendBy(this, createFunction(this._parameters, this._specification));\n    }\n    static deserialize(serialized) {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n    static serialize(input) {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\nfunction normalizePropertyExpression(value, specification) {\n    if (isFunction$1(value)) {\n        return new StylePropertyFunction(value, specification);\n    }\n    else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n    }\n    else {\n        let constant = value;\n        if (specification.type === 'color' && typeof value === 'string') {\n            constant = Color.parse(value);\n        }\n        else if (specification.type === 'padding' && (typeof value === 'number' || Array.isArray(value))) {\n            constant = Padding.parse(value);\n        }\n        else if (specification.type === 'variableAnchorOffsetCollection' && Array.isArray(value)) {\n            constant = VariableAnchorOffsetCollection.parse(value);\n        }\n        else if (specification.type === 'projectionDefinition' && typeof value === 'string') {\n            constant = ProjectionDefinition.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression) {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n    }\n    else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n    }\n    else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n        result = expression;\n    }\n    if (result instanceof ExpressionParsingError) {\n        return result;\n    }\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ExpressionParsingError) {\n            result = childResult;\n        }\n        else if (!result && childResult) {\n            result = new ExpressionParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        }\n        else if (result && childResult && result !== childResult) {\n            result = new ExpressionParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n    return result;\n}\nfunction getExpectedType(spec) {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        padding: PaddingType,\n        projectionDefinition: ProjectionDefinitionType,\n        resolvedImage: ResolvedImageType,\n        variableAnchorOffsetCollection: VariableAnchorOffsetCollectionType\n    };\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n    return types[spec.type];\n}\nfunction getDefaultValue(spec) {\n    if (spec.type === 'color' && isFunction$1(spec.default)) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    }\n    else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    }\n    else if (spec.type === 'padding') {\n        return Padding.parse(spec.default) || null;\n    }\n    else if (spec.type === 'variableAnchorOffsetCollection') {\n        return VariableAnchorOffsetCollection.parse(spec.default) || null;\n    }\n    else if (spec.type === 'projectionDefinition') {\n        return ProjectionDefinition.parse(spec.default) || null;\n    }\n    else if (spec.default === undefined) {\n        return null;\n    }\n    else {\n        return spec.default;\n    }\n}\n\nfunction isExpressionFilter(filter) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n        case 'has':\n            return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n        case 'in':\n            return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n        case '!in':\n        case '!has':\n        case 'none':\n            return false;\n        case '==':\n        case '!=':\n        case '>':\n        case '>=':\n        case '<':\n        case '<=':\n            return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n        case 'any':\n        case 'all':\n            for (const f of filter.slice(1)) {\n                if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                    return false;\n                }\n            }\n            return true;\n        default:\n            return true;\n    }\n}\nconst filterSpec = {\n    'type': 'boolean',\n    'default': false,\n    'transition': false,\n    'property-type': 'data-driven',\n    'expression': {\n        'interpolated': false,\n        'parameters': ['zoom', 'feature']\n    }\n};\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter MapLibre filter\n * @returns {Function} filter-evaluating function\n */\nfunction featureFilter(filter) {\n    if (filter === null || filter === undefined) {\n        return { filter: () => true, needGeometry: false };\n    }\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter$1(filter);\n    }\n    const compiled = createExpression(filter, filterSpec);\n    if (compiled.result === 'error') {\n        throw new Error(compiled.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    }\n    else {\n        const needGeometry = geometryNeeded(filter);\n        return { filter: (globalProperties, feature, canonical) => compiled.value.evaluate(globalProperties, feature, {}, canonical),\n            needGeometry };\n    }\n}\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter))\n        return false;\n    if (filter[0] === 'within' || filter[0] === 'distance')\n        return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index]))\n            return true;\n    }\n    return false;\n}\nfunction convertFilter$1(filter) {\n    if (!filter)\n        return true;\n    const op = filter[0];\n    if (filter.length <= 1)\n        return (op !== 'any');\n    const converted = op === '==' ? convertComparisonOp$1(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp$1(filter[1], filter[2], '==')) :\n            op === '<' ||\n                op === '>' ||\n                op === '<=' ||\n                op === '>=' ? convertComparisonOp$1(filter[1], filter[2], op) :\n                op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n                    op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter$1)) :\n                        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter$1).map(convertNegation)) :\n                            op === 'in' ? convertInOp$1(filter[1], filter.slice(2)) :\n                                op === '!in' ? convertNegation(convertInOp$1(filter[1], filter.slice(2))) :\n                                    op === 'has' ? convertHasOp$1(filter[1]) :\n                                        op === '!has' ? convertNegation(convertHasOp$1(filter[1])) :\n                                            true;\n    return converted;\n}\nfunction convertComparisonOp$1(property, value, op) {\n    switch (property) {\n        case '$type':\n            return [`filter-type-${op}`, value];\n        case '$id':\n            return [`filter-id-${op}`, value];\n        default:\n            return [`filter-${op}`, property, value];\n    }\n}\nfunction convertDisjunctionOp(filters) {\n    return ['any'].concat(filters.map(convertFilter$1));\n}\nfunction convertInOp$1(property, values) {\n    if (values.length === 0) {\n        return false;\n    }\n    switch (property) {\n        case '$type':\n            return ['filter-type-in', ['literal', values]];\n        case '$id':\n            return ['filter-id-in', ['literal', values]];\n        default:\n            if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n                return ['filter-in-large', property, ['literal', values.sort(compare)]];\n            }\n            else {\n                return ['filter-in-small', property, ['literal', values]];\n            }\n    }\n}\nfunction convertHasOp$1(property) {\n    switch (property) {\n        case '$type':\n            return true;\n        case '$id':\n            return ['filter-has-id'];\n        default:\n            return ['filter-has', property];\n    }\n}\nfunction convertNegation(filter) {\n    return ['!', filter];\n}\n\n/*\n * Convert the given filter to an expression, storing the expected types for\n * any feature properties referenced in expectedTypes.\n *\n * These expected types are needed in order to construct preflight type checks\n * needed for handling 'any' filters. A preflight type check is necessary in\n * order to mimic legacy filters' semantics around expected type mismatches.\n * For example, consider the legacy filter:\n *\n *     [\"any\", [\"all\", [\">\", \"y\", 0], [\">\", \"y\", 0]], [\">\", \"x\", 0]]\n *\n * Naively, we might convert this to the expression:\n *\n *     [\"any\", [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]], [\">\", [\"get\", \"x\"], 0]]\n *\n * But if we tried to evaluate this against, say `{x: 1, y: null, z: 0}`, the\n * [\">\", [\"get\", \"y\"], 0] would cause an evaluation error, leading to the\n * entire filter returning false. Legacy filter semantics, though, ask for\n * [\">\", \"y\", 0] to simply return `false` when `y` is of the wrong type,\n * allowing the subsequent terms of the outer \"any\" expression to be evaluated\n * (resulting, in this case, in a `true` value, because x > 0).\n *\n * We account for this by inserting a preflight type-checking expression before\n * each \"any\" term, allowing us to avoid evaluating the actual converted filter\n * if any type mismatches would cause it to produce an evaluation error:\n *\n *     [\"any\",\n *       [\"case\",\n *         [\"all\", [\"==\", [\"typeof\", [\"get\", \"y\"]], \"number\"], [\"==\", [\"typeof\", [\"get\", \"z\"], \"number]],\n *         [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]],\n *         false\n *       ],\n *       [\"case\",\n *         [\"==\", [\"typeof\", [\"get\", \"x\"], \"number\"]],\n *         [\">\", [\"get\", \"x\"], 0],\n *         false\n *       ]\n *     ]\n *\n * An alternative, possibly more direct approach would be to use type checks\n * in the conversion of each comparison operator, so that the converted version\n * of each individual ==, >=, etc. would mimic the legacy filter semantics. The\n * downside of this approach is that it can lead to many more type checks than\n * would otherwise be necessary: outside the context of an \"any\" expression,\n * bailing out due to a runtime type error (expression semantics) and returning\n * false (legacy filter semantics) are equivalent: they cause the filter to\n * produce a `false` result.\n */\nfunction convertFilter(filter, expectedTypes = {}) {\n    if (isExpressionFilter(filter))\n        return filter;\n    if (!filter)\n        return true;\n    const legacyFilter = filter;\n    const legacyOp = legacyFilter[0];\n    if (filter.length <= 1)\n        return (legacyOp !== 'any');\n    switch (legacyOp) {\n        case '==':\n        case '!=':\n        case '<':\n        case '>':\n        case '<=':\n        case '>=': {\n            const [, property, value] = filter;\n            return convertComparisonOp(property, value, legacyOp, expectedTypes);\n        }\n        case 'any': {\n            const [, ...conditions] = legacyFilter;\n            const children = conditions.map((f) => {\n                const types = {};\n                const child = convertFilter(f, types);\n                const typechecks = runtimeTypeChecks(types);\n                return typechecks === true ? child : ['case', typechecks, child, false];\n            });\n            return ['any', ...children];\n        }\n        case 'all': {\n            const [, ...conditions] = legacyFilter;\n            const children = conditions.map(f => convertFilter(f, expectedTypes));\n            return children.length > 1 ? ['all', ...children] : children[0];\n        }\n        case 'none': {\n            const [, ...conditions] = legacyFilter;\n            return ['!', convertFilter(['any', ...conditions], {})];\n        }\n        case 'in': {\n            const [, property, ...values] = legacyFilter;\n            return convertInOp(property, values);\n        }\n        case '!in': {\n            const [, property, ...values] = legacyFilter;\n            return convertInOp(property, values, true);\n        }\n        case 'has':\n            return convertHasOp(legacyFilter[1]);\n        case '!has':\n            return ['!', convertHasOp(legacyFilter[1])];\n        default:\n            return true;\n    }\n}\n// Given a set of feature properties and an expected type for each one,\n// construct an boolean expression that tests whether each property has the\n// right type.\n// E.g.: for {name: 'string', population: 'number'}, return\n// [ 'all',\n//   ['==', ['typeof', ['get', 'name'], 'string']],\n//   ['==', ['typeof', ['get', 'population'], 'number]]\n// ]\nfunction runtimeTypeChecks(expectedTypes) {\n    const conditions = [];\n    for (const property in expectedTypes) {\n        const get = property === '$id' ? ['id'] : ['get', property];\n        conditions.push(['==', ['typeof', get], expectedTypes[property]]);\n    }\n    if (conditions.length === 0)\n        return true;\n    if (conditions.length === 1)\n        return conditions[0];\n    return ['all', ...conditions];\n}\nfunction convertComparisonOp(property, value, op, expectedTypes) {\n    let get;\n    if (property === '$type') {\n        return [op, ['geometry-type'], value];\n    }\n    else if (property === '$id') {\n        get = ['id'];\n    }\n    else {\n        get = ['get', property];\n    }\n    if (expectedTypes && value !== null) {\n        const type = typeof value;\n        expectedTypes[property] = type;\n    }\n    if (op === '==' && property !== '$id' && value === null) {\n        return [\n            'all',\n            ['has', property], // missing property != null for legacy filters\n            ['==', get, null]\n        ];\n    }\n    else if (op === '!=' && property !== '$id' && value === null) {\n        return [\n            'any',\n            ['!', ['has', property]], // missing property != null for legacy filters\n            ['!=', get, null]\n        ];\n    }\n    return [op, get, value];\n}\nfunction convertInOp(property, values, negate = false) {\n    if (values.length === 0)\n        return negate;\n    let get;\n    if (property === '$type') {\n        get = ['geometry-type'];\n    }\n    else if (property === '$id') {\n        get = ['id'];\n    }\n    else {\n        get = ['get', property];\n    }\n    // Determine if the list of values to be searched is homogenously typed.\n    // If so (and if the type is string or number), then we can use a\n    // [match, input, [...values], true, false] construction rather than a\n    // bunch of `==` tests.\n    let uniformTypes = true;\n    const type = typeof values[0];\n    for (const value of values) {\n        if (typeof value !== type) {\n            uniformTypes = false;\n            break;\n        }\n    }\n    if (uniformTypes && (type === 'string' || type === 'number')) {\n        // Match expressions must have unique values.\n        const uniqueValues = values.sort().filter((v, i) => i === 0 || values[i - 1] !== v);\n        return ['match', get, uniqueValues, !negate, negate];\n    }\n    if (negate) {\n        return ['all', ...values.map(v => ['!=', get, v])];\n    }\n    else {\n        return ['any', ...values.map(v => ['==', get, v])];\n    }\n}\nfunction convertHasOp(property) {\n    if (property === '$type') {\n        return true;\n    }\n    else if (property === '$id') {\n        return ['!=', ['id'], null];\n    }\n    else {\n        return ['has', property];\n    }\n}\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\nfunction convertFunction(parameters, propertySpec) {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    }\n    else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    }\n    else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\nfunction convertIdentityFunction(parameters, propertySpec) {\n    const get = ['get', parameters.property];\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    }\n    else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    }\n    else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n        case 'hcl': return 'interpolate-hcl';\n        case 'lab': return 'interpolate-lab';\n        default: return 'interpolate';\n    }\n}\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n        return expression;\n    }\n    else {\n        const expression = ['step', ['zoom']];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return expression;\n    }\n}\nfunction coalesce(a, b) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n}\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    }\n    else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    }\n    else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    }\n    else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : ['exponential', base],\n            ['number', get]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    }\n    else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    }\n    else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? ['linear'] : ['exponential', base], input];\n    }\n    else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n    fixupDegenerateStepCurve(expression);\n    return expression;\n}\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    }\n    else {\n        return propertySpec.expression.interpolated ? 'exponential' : 'interval';\n    }\n}\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nfunction convertTokenString(s) {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0)\n            result.push(literal);\n        result.push(['get', match[1]]);\n    }\n    if (result.length === 1) {\n        return s;\n    }\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    }\n    else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n    return result;\n}\n\nfunction getPropertyReference(propertyName) {\n    for (let i = 0; i < v8Spec.layout.length; i++) {\n        for (const key in v8Spec[v8Spec.layout[i]]) {\n            if (key === propertyName)\n                return v8Spec[v8Spec.layout[i]][key];\n        }\n    }\n    for (let i = 0; i < v8Spec.paint.length; i++) {\n        for (const key in v8Spec[v8Spec.paint[i]]) {\n            if (key === propertyName)\n                return v8Spec[v8Spec.paint[i]][key];\n        }\n    }\n    return null;\n}\nfunction eachSource(style, callback) {\n    for (const k in style.sources) {\n        callback(style.sources[k]);\n    }\n}\nfunction eachLayer(style, callback) {\n    for (const layer of style.layers) {\n        callback(layer);\n    }\n}\nfunction eachProperty(style, options, callback) {\n    function inner(layer, propertyType) {\n        const properties = layer[propertyType];\n        if (!properties)\n            return;\n        Object.keys(properties).forEach((key) => {\n            callback({\n                path: [layer.id, propertyType, key],\n                key,\n                value: properties[key],\n                reference: getPropertyReference(key),\n                set(x) {\n                    properties[key] = x;\n                }\n            });\n        });\n    }\n    eachLayer(style, (layer) => {\n        if (options.paint) {\n            inner(layer, 'paint');\n        }\n        if (options.layout) {\n            inner(layer, 'layout');\n        }\n    });\n}\n\nfunction stringify$1(obj) {\n    const type = typeof obj;\n    if (type === 'number' || type === 'boolean' || type === 'string' || obj === undefined || obj === null)\n        return JSON.stringify(obj);\n    if (Array.isArray(obj)) {\n        let str = '[';\n        for (const val of obj) {\n            str += `${stringify$1(val)},`;\n        }\n        return `${str}]`;\n    }\n    const keys = Object.keys(obj).sort();\n    let str = '{';\n    for (let i = 0; i < keys.length; i++) {\n        str += `${JSON.stringify(keys[i])}:${stringify$1(obj[keys[i]])},`;\n    }\n    return `${str}}`;\n}\nfunction getKey(layer) {\n    let key = '';\n    for (const k of refProperties) {\n        key += `/${stringify$1(layer[k])}`;\n    }\n    return key;\n}\n/**\n * Given an array of layers, return an array of arrays of layers where all\n * layers in each group have identical layout-affecting properties. These\n * are the properties that were formerly used by explicit `ref` mechanism\n * for layers: 'type', 'source', 'source-layer', 'minzoom', 'maxzoom',\n * 'filter', and 'layout'.\n *\n * The input is not modified. The output layers are references to the\n * input layers.\n *\n * @private\n * @param {Array<Layer>} layers\n * @param {Object} [cachedKeys] - an object to keep already calculated keys.\n * @returns {Array<Array<Layer>>}\n */\nfunction groupByLayout(layers, cachedKeys) {\n    const groups = {};\n    for (let i = 0; i < layers.length; i++) {\n        const k = (cachedKeys && cachedKeys[layers[i].id]) || getKey(layers[i]);\n        // update the cache if there is one\n        if (cachedKeys)\n            cachedKeys[layers[i].id] = k;\n        let group = groups[k];\n        if (!group) {\n            group = groups[k] = [];\n        }\n        group.push(layers[i]);\n    }\n    const result = [];\n    for (const k in groups) {\n        result.push(groups[k]);\n    }\n    return result;\n}\n\nfunction emptyStyle() {\n    const style = {};\n    const version = v8Spec['$version'];\n    for (const styleKey in v8Spec['$root']) {\n        const specification = v8Spec['$root'][styleKey];\n        if (specification.required) {\n            let value = null;\n            if (styleKey === 'version') {\n                value = version;\n            }\n            else {\n                if (specification.type === 'array') {\n                    value = [];\n                }\n                else {\n                    value = {};\n                }\n            }\n            if (value != null) {\n                style[styleKey] = value;\n            }\n        }\n    }\n    return style;\n}\n\nfunction validateConstants(options) {\n    const key = options.key;\n    const constants = options.value;\n    if (constants) {\n        return [new ValidationError(key, constants, 'constants have been deprecated as of v8')];\n    }\n    else {\n        return [];\n    }\n}\n\n// Turn jsonlint-lines-primitives objects into primitive objects\nfunction unbundle(value) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    }\n    else {\n        return value;\n    }\n}\nfunction deepUnbundle(value) {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    }\n    else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n    return unbundle(value);\n}\n\nfunction validateObject(options) {\n    const key = options.key;\n    const object = options.value;\n    const elementSpecs = options.valueSpec || {};\n    const elementValidators = options.objectElementValidators || {};\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const validateSpec = options.validateSpec;\n    let errors = [];\n    const type = getType(object);\n    if (type !== 'object') {\n        return [new ValidationError(key, object, `object expected, ${type} found`)];\n    }\n    for (const objectKey in object) {\n        const elementSpecKey = objectKey.split('.')[0]; // treat 'paint.*' as 'paint'\n        const elementSpec = elementSpecs[elementSpecKey] || elementSpecs['*'];\n        let validateElement;\n        if (elementValidators[elementSpecKey]) {\n            validateElement = elementValidators[elementSpecKey];\n        }\n        else if (elementSpecs[elementSpecKey]) {\n            validateElement = validateSpec;\n        }\n        else if (elementValidators['*']) {\n            validateElement = elementValidators['*'];\n        }\n        else if (elementSpecs['*']) {\n            validateElement = validateSpec;\n        }\n        else {\n            errors.push(new ValidationError(key, object[objectKey], `unknown property \"${objectKey}\"`));\n            continue;\n        }\n        errors = errors.concat(validateElement({\n            key: (key ? `${key}.` : key) + objectKey,\n            value: object[objectKey],\n            valueSpec: elementSpec,\n            style,\n            styleSpec,\n            object,\n            objectKey,\n            validateSpec,\n        }, object));\n    }\n    for (const elementSpecKey in elementSpecs) {\n        // Don't check `required` when there's a custom validator for that property.\n        if (elementValidators[elementSpecKey]) {\n            continue;\n        }\n        if (elementSpecs[elementSpecKey].required && elementSpecs[elementSpecKey]['default'] === undefined && object[elementSpecKey] === undefined) {\n            errors.push(new ValidationError(key, object, `missing required property \"${elementSpecKey}\"`));\n        }\n    }\n    return errors;\n}\n\nfunction validateArray(options) {\n    const array = options.value;\n    const arraySpec = options.valueSpec;\n    const validateSpec = options.validateSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const key = options.key;\n    const validateArrayElement = options.arrayElementValidator || validateSpec;\n    if (getType(array) !== 'array') {\n        return [new ValidationError(key, array, `array expected, ${getType(array)} found`)];\n    }\n    if (arraySpec.length && array.length !== arraySpec.length) {\n        return [new ValidationError(key, array, `array length ${arraySpec.length} expected, length ${array.length} found`)];\n    }\n    if (arraySpec['min-length'] && array.length < arraySpec['min-length']) {\n        return [new ValidationError(key, array, `array length at least ${arraySpec['min-length']} expected, length ${array.length} found`)];\n    }\n    let arrayElementSpec = {\n        'type': arraySpec.value,\n        'values': arraySpec.values\n    };\n    if (styleSpec.$version < 7) {\n        arrayElementSpec['function'] = arraySpec.function;\n    }\n    if (getType(arraySpec.value) === 'object') {\n        arrayElementSpec = arraySpec.value;\n    }\n    let errors = [];\n    for (let i = 0; i < array.length; i++) {\n        errors = errors.concat(validateArrayElement({\n            array,\n            arrayIndex: i,\n            value: array[i],\n            valueSpec: arrayElementSpec,\n            validateSpec: options.validateSpec,\n            style,\n            styleSpec,\n            key: `${key}[${i}]`\n        }));\n    }\n    return errors;\n}\n\nfunction validateNumber(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    let type = getType(value);\n    if (type === 'number' && value !== value) {\n        type = 'NaN';\n    }\n    if (type !== 'number') {\n        return [new ValidationError(key, value, `number expected, ${type} found`)];\n    }\n    if ('minimum' in valueSpec && value < valueSpec.minimum) {\n        return [new ValidationError(key, value, `${value} is less than the minimum value ${valueSpec.minimum}`)];\n    }\n    if ('maximum' in valueSpec && value > valueSpec.maximum) {\n        return [new ValidationError(key, value, `${value} is greater than the maximum value ${valueSpec.maximum}`)];\n    }\n    return [];\n}\n\nfunction validateFunction(options) {\n    const functionValueSpec = options.valueSpec;\n    const functionType = unbundle(options.value.type);\n    let stopKeyType;\n    let stopDomainValues = {};\n    let previousStopDomainValue;\n    let previousStopDomainZoom;\n    const isZoomFunction = functionType !== 'categorical' && options.value.property === undefined;\n    const isPropertyFunction = !isZoomFunction;\n    const isZoomAndPropertyFunction = getType(options.value.stops) === 'array' &&\n        getType(options.value.stops[0]) === 'array' &&\n        getType(options.value.stops[0][0]) === 'object';\n    const errors = validateObject({\n        key: options.key,\n        value: options.value,\n        valueSpec: options.styleSpec.function,\n        validateSpec: options.validateSpec,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            stops: validateFunctionStops,\n            default: validateFunctionDefault\n        }\n    });\n    if (functionType === 'identity' && isZoomFunction) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"property\"'));\n    }\n    if (functionType !== 'identity' && !options.value.stops) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"stops\"'));\n    }\n    if (functionType === 'exponential' && options.valueSpec.expression && !supportsInterpolation(options.valueSpec)) {\n        errors.push(new ValidationError(options.key, options.value, 'exponential functions not supported'));\n    }\n    if (options.styleSpec.$version >= 8) {\n        if (isPropertyFunction && !supportsPropertyExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'property functions not supported'));\n        }\n        else if (isZoomFunction && !supportsZoomExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'zoom functions not supported'));\n        }\n    }\n    if ((functionType === 'categorical' || isZoomAndPropertyFunction) && options.value.property === undefined) {\n        errors.push(new ValidationError(options.key, options.value, '\"property\" property is required'));\n    }\n    return errors;\n    function validateFunctionStops(options) {\n        if (functionType === 'identity') {\n            return [new ValidationError(options.key, options.value, 'identity function may not have a \"stops\" property')];\n        }\n        let errors = [];\n        const value = options.value;\n        errors = errors.concat(validateArray({\n            key: options.key,\n            value,\n            valueSpec: options.valueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec,\n            arrayElementValidator: validateFunctionStop\n        }));\n        if (getType(value) === 'array' && value.length === 0) {\n            errors.push(new ValidationError(options.key, value, 'array must have at least one stop'));\n        }\n        return errors;\n    }\n    function validateFunctionStop(options) {\n        let errors = [];\n        const value = options.value;\n        const key = options.key;\n        if (getType(value) !== 'array') {\n            return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n        }\n        if (value.length !== 2) {\n            return [new ValidationError(key, value, `array length 2 expected, length ${value.length} found`)];\n        }\n        if (isZoomAndPropertyFunction) {\n            if (getType(value[0]) !== 'object') {\n                return [new ValidationError(key, value, `object expected, ${getType(value[0])} found`)];\n            }\n            if (value[0].zoom === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have zoom')];\n            }\n            if (value[0].value === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have value')];\n            }\n            if (previousStopDomainZoom && previousStopDomainZoom > unbundle(value[0].zoom)) {\n                return [new ValidationError(key, value[0].zoom, 'stop zoom values must appear in ascending order')];\n            }\n            if (unbundle(value[0].zoom) !== previousStopDomainZoom) {\n                previousStopDomainZoom = unbundle(value[0].zoom);\n                previousStopDomainValue = undefined;\n                stopDomainValues = {};\n            }\n            errors = errors.concat(validateObject({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: { zoom: {} },\n                validateSpec: options.validateSpec,\n                style: options.style,\n                styleSpec: options.styleSpec,\n                objectElementValidators: { zoom: validateNumber, value: validateStopDomainValue }\n            }));\n        }\n        else {\n            errors = errors.concat(validateStopDomainValue({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {},\n                validateSpec: options.validateSpec,\n                style: options.style,\n                styleSpec: options.styleSpec\n            }, value));\n        }\n        if (isExpression(deepUnbundle(value[1]))) {\n            return errors.concat([new ValidationError(`${key}[1]`, value[1], 'expressions are not allowed in function stops.')]);\n        }\n        return errors.concat(options.validateSpec({\n            key: `${key}[1]`,\n            value: value[1],\n            valueSpec: functionValueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        }));\n    }\n    function validateStopDomainValue(options, stop) {\n        const type = getType(options.value);\n        const value = unbundle(options.value);\n        const reportValue = options.value !== null ? options.value : stop;\n        if (!stopKeyType) {\n            stopKeyType = type;\n        }\n        else if (type !== stopKeyType) {\n            return [new ValidationError(options.key, reportValue, `${type} stop domain type must match previous stop domain type ${stopKeyType}`)];\n        }\n        if (type !== 'number' && type !== 'string' && type !== 'boolean') {\n            return [new ValidationError(options.key, reportValue, 'stop domain value must be a number, string, or boolean')];\n        }\n        if (type !== 'number' && functionType !== 'categorical') {\n            let message = `number expected, ${type} found`;\n            if (supportsPropertyExpression(functionValueSpec) && functionType === undefined) {\n                message += '\\nIf you intended to use a categorical function, specify `\"type\": \"categorical\"`.';\n            }\n            return [new ValidationError(options.key, reportValue, message)];\n        }\n        if (functionType === 'categorical' && type === 'number' && (!isFinite(value) || Math.floor(value) !== value)) {\n            return [new ValidationError(options.key, reportValue, `integer expected, found ${value}`)];\n        }\n        if (functionType !== 'categorical' && type === 'number' && previousStopDomainValue !== undefined && value < previousStopDomainValue) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must appear in ascending order')];\n        }\n        else {\n            previousStopDomainValue = value;\n        }\n        if (functionType === 'categorical' && value in stopDomainValues) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must be unique')];\n        }\n        else {\n            stopDomainValues[value] = true;\n        }\n        return [];\n    }\n    function validateFunctionDefault(options) {\n        return options.validateSpec({\n            key: options.key,\n            value: options.value,\n            valueSpec: functionValueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        });\n    }\n}\n\nfunction validateExpression(options) {\n    const expression = (options.expressionContext === 'property' ? createPropertyExpression : createExpression)(deepUnbundle(options.value), options.valueSpec);\n    if (expression.result === 'error') {\n        return expression.value.map((error) => {\n            return new ValidationError(`${options.key}${error.key}`, options.value, error.message);\n        });\n    }\n    const expressionObj = expression.value.expression || expression.value._styleExpression.expression;\n    if (options.expressionContext === 'property' && (options.propertyKey === 'text-font') &&\n        !expressionObj.outputDefined()) {\n        return [new ValidationError(options.key, options.value, `Invalid data expression for \"${options.propertyKey}\". Output values must be contained as literals within the expression.`)];\n    }\n    if (options.expressionContext === 'property' && options.propertyType === 'layout' &&\n        (!isStateConstant(expressionObj))) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with layout properties.')];\n    }\n    if (options.expressionContext === 'filter' && !isStateConstant(expressionObj)) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with filters.')];\n    }\n    if (options.expressionContext && options.expressionContext.indexOf('cluster') === 0) {\n        if (!isGlobalPropertyConstant(expressionObj, ['zoom', 'feature-state'])) {\n            return [new ValidationError(options.key, options.value, '\"zoom\" and \"feature-state\" expressions are not supported with cluster properties.')];\n        }\n        if (options.expressionContext === 'cluster-initial' && !isFeatureConstant(expressionObj)) {\n            return [new ValidationError(options.key, options.value, 'Feature data expressions are not supported with initial expression part of cluster properties.')];\n        }\n    }\n    return [];\n}\n\nfunction validateBoolean(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n    if (type !== 'boolean') {\n        return [new ValidationError(key, value, `boolean expected, ${type} found`)];\n    }\n    return [];\n}\n\nfunction validateColor(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `color expected, ${type} found`)];\n    }\n    if (!Color.parse(String(value))) { // cast String object to string primitive\n        return [new ValidationError(key, value, `color expected, \"${value}\" found`)];\n    }\n    return [];\n}\n\nfunction validateEnum(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const errors = [];\n    if (Array.isArray(valueSpec.values)) { // <=v7\n        if (valueSpec.values.indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${valueSpec.values.join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    else { // >=v8\n        if (Object.keys(valueSpec.values).indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${Object.keys(valueSpec.values).join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    return errors;\n}\n\nfunction validateFilter(options) {\n    if (isExpressionFilter(deepUnbundle(options.value))) {\n        return validateExpression(extendBy({}, options, {\n            expressionContext: 'filter',\n            valueSpec: { value: 'boolean' }\n        }));\n    }\n    else {\n        return validateNonExpressionFilter(options);\n    }\n}\nfunction validateNonExpressionFilter(options) {\n    const value = options.value;\n    const key = options.key;\n    if (getType(value) !== 'array') {\n        return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n    }\n    const styleSpec = options.styleSpec;\n    let type;\n    let errors = [];\n    if (value.length < 1) {\n        return [new ValidationError(key, value, 'filter array must have at least 1 element')];\n    }\n    errors = errors.concat(validateEnum({\n        key: `${key}[0]`,\n        value: value[0],\n        valueSpec: styleSpec.filter_operator,\n        style: options.style,\n        styleSpec: options.styleSpec\n    }));\n    switch (unbundle(value[0])) {\n        case '<':\n        case '<=':\n        case '>':\n        case '>=':\n            if (value.length >= 2 && unbundle(value[1]) === '$type') {\n                errors.push(new ValidationError(key, value, `\"$type\" cannot be use with operator \"${value[0]}\"`));\n            }\n        /* falls through */\n        case '==':\n        case '!=':\n            if (value.length !== 3) {\n                errors.push(new ValidationError(key, value, `filter array for operator \"${value[0]}\" must have 3 elements`));\n            }\n        /* falls through */\n        case 'in':\n        case '!in':\n            if (value.length >= 2) {\n                type = getType(value[1]);\n                if (type !== 'string') {\n                    errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n                }\n            }\n            for (let i = 2; i < value.length; i++) {\n                type = getType(value[i]);\n                if (unbundle(value[1]) === '$type') {\n                    errors = errors.concat(validateEnum({\n                        key: `${key}[${i}]`,\n                        value: value[i],\n                        valueSpec: styleSpec.geometry_type,\n                        style: options.style,\n                        styleSpec: options.styleSpec\n                    }));\n                }\n                else if (type !== 'string' && type !== 'number' && type !== 'boolean') {\n                    errors.push(new ValidationError(`${key}[${i}]`, value[i], `string, number, or boolean expected, ${type} found`));\n                }\n            }\n            break;\n        case 'any':\n        case 'all':\n        case 'none':\n            for (let i = 1; i < value.length; i++) {\n                errors = errors.concat(validateNonExpressionFilter({\n                    key: `${key}[${i}]`,\n                    value: value[i],\n                    style: options.style,\n                    styleSpec: options.styleSpec\n                }));\n            }\n            break;\n        case 'has':\n        case '!has':\n            type = getType(value[1]);\n            if (value.length !== 2) {\n                errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n            }\n            else if (type !== 'string') {\n                errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n            }\n            break;\n    }\n    return errors;\n}\n\nfunction validateProperty(options, propertyType) {\n    const key = options.key;\n    const validateSpec = options.validateSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const value = options.value;\n    const propertyKey = options.objectKey;\n    const layerSpec = styleSpec[`${propertyType}_${options.layerType}`];\n    if (!layerSpec)\n        return [];\n    const transitionMatch = propertyKey.match(/^(.*)-transition$/);\n    if (propertyType === 'paint' && transitionMatch && layerSpec[transitionMatch[1]] && layerSpec[transitionMatch[1]].transition) {\n        return validateSpec({\n            key,\n            value,\n            valueSpec: styleSpec.transition,\n            style,\n            styleSpec\n        });\n    }\n    const valueSpec = options.valueSpec || layerSpec[propertyKey];\n    if (!valueSpec) {\n        return [new ValidationError(key, value, `unknown property \"${propertyKey}\"`)];\n    }\n    let tokenMatch;\n    if (getType(value) === 'string' && supportsPropertyExpression(valueSpec) && !valueSpec.tokens && (tokenMatch = /^{([^}]+)}$/.exec(value))) {\n        return [new ValidationError(key, value, `\"${propertyKey}\" does not support interpolation syntax\\n` +\n                `Use an identity property function instead: \\`{ \"type\": \"identity\", \"property\": ${JSON.stringify(tokenMatch[1])} }\\`.`)];\n    }\n    const errors = [];\n    if (options.layerType === 'symbol') {\n        if (propertyKey === 'text-field' && style && !style.glyphs) {\n            errors.push(new ValidationError(key, value, 'use of \"text-field\" requires a style \"glyphs\" property'));\n        }\n        if (propertyKey === 'text-font' && isFunction$1(deepUnbundle(value)) && unbundle(value.type) === 'identity') {\n            errors.push(new ValidationError(key, value, '\"text-font\" does not support identity functions'));\n        }\n    }\n    return errors.concat(validateSpec({\n        key: options.key,\n        value,\n        valueSpec,\n        style,\n        styleSpec,\n        expressionContext: 'property',\n        propertyType,\n        propertyKey\n    }));\n}\n\nfunction validatePaintProperty(options) {\n    return validateProperty(options, 'paint');\n}\n\nfunction validateLayoutProperty(options) {\n    return validateProperty(options, 'layout');\n}\n\nfunction validateLayer(options) {\n    let errors = [];\n    const layer = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    if (!layer.type && !layer.ref) {\n        errors.push(new ValidationError(key, layer, 'either \"type\" or \"ref\" is required'));\n    }\n    let type = unbundle(layer.type);\n    const ref = unbundle(layer.ref);\n    if (layer.id) {\n        const layerId = unbundle(layer.id);\n        for (let i = 0; i < options.arrayIndex; i++) {\n            const otherLayer = style.layers[i];\n            if (unbundle(otherLayer.id) === layerId) {\n                errors.push(new ValidationError(key, layer.id, `duplicate layer id \"${layer.id}\", previously used at line ${otherLayer.id.__line__}`));\n            }\n        }\n    }\n    if ('ref' in layer) {\n        ['type', 'source', 'source-layer', 'filter', 'layout'].forEach((p) => {\n            if (p in layer) {\n                errors.push(new ValidationError(key, layer[p], `\"${p}\" is prohibited for ref layers`));\n            }\n        });\n        let parent;\n        style.layers.forEach((layer) => {\n            if (unbundle(layer.id) === ref)\n                parent = layer;\n        });\n        if (!parent) {\n            errors.push(new ValidationError(key, layer.ref, `ref layer \"${ref}\" not found`));\n        }\n        else if (parent.ref) {\n            errors.push(new ValidationError(key, layer.ref, 'ref cannot reference another ref layer'));\n        }\n        else {\n            type = unbundle(parent.type);\n        }\n    }\n    else if (type !== 'background') {\n        if (!layer.source) {\n            errors.push(new ValidationError(key, layer, 'missing required property \"source\"'));\n        }\n        else {\n            const source = style.sources && style.sources[layer.source];\n            const sourceType = source && unbundle(source.type);\n            if (!source) {\n                errors.push(new ValidationError(key, layer.source, `source \"${layer.source}\" not found`));\n            }\n            else if (sourceType === 'vector' && type === 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster source`));\n            }\n            else if (sourceType !== 'raster-dem' && type === 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster-dem source`));\n            }\n            else if (sourceType === 'raster' && type !== 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a vector source`));\n            }\n            else if (sourceType === 'vector' && !layer['source-layer']) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" must specify a \"source-layer\"`));\n            }\n            else if (sourceType === 'raster-dem' && type !== 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, 'raster-dem source can only be used with layer type \\'hillshade\\'.'));\n            }\n            else if (type === 'line' && layer.paint && layer.paint['line-gradient'] &&\n                (sourceType !== 'geojson' || !source.lineMetrics)) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" specifies a line-gradient, which requires a GeoJSON source with \\`lineMetrics\\` enabled.`));\n            }\n        }\n    }\n    errors = errors.concat(validateObject({\n        key,\n        value: layer,\n        valueSpec: styleSpec.layer,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        validateSpec: options.validateSpec,\n        objectElementValidators: {\n            '*'() {\n                return [];\n            },\n            // We don't want to enforce the spec's `\"requires\": true` for backward compatibility with refs;\n            // the actual requirement is validated above. See https://github.com/mapbox/mapbox-gl-js/issues/5772.\n            type() {\n                return options.validateSpec({\n                    key: `${key}.type`,\n                    value: layer.type,\n                    valueSpec: styleSpec.layer.type,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    object: layer,\n                    objectKey: 'type'\n                });\n            },\n            filter: validateFilter,\n            layout(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validateLayoutProperty(extendBy({ layerType: type }, options));\n                        }\n                    }\n                });\n            },\n            paint(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validatePaintProperty(extendBy({ layerType: type }, options));\n                        }\n                    }\n                });\n            }\n        }\n    }));\n    return errors;\n}\n\nfunction validateString(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `string expected, ${type} found`)];\n    }\n    return [];\n}\n\nfunction validateRasterDEMSource(options) {\n    var _a;\n    const sourceName = (_a = options.sourceName) !== null && _a !== undefined ? _a : '';\n    const rasterDEM = options.value;\n    const styleSpec = options.styleSpec;\n    const rasterDEMSpec = styleSpec.source_raster_dem;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(rasterDEM);\n    if (rasterDEM === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors.push(new ValidationError('source_raster_dem', rasterDEM, `object expected, ${rootType} found`));\n        return errors;\n    }\n    const encoding = unbundle(rasterDEM.encoding);\n    const isCustomEncoding = encoding === 'custom';\n    const customEncodingKeys = ['redFactor', 'greenFactor', 'blueFactor', 'baseShift'];\n    const encodingName = options.value.encoding ? `\"${options.value.encoding}\"` : 'Default';\n    for (const key in rasterDEM) {\n        if (!isCustomEncoding && customEncodingKeys.includes(key)) {\n            errors.push(new ValidationError(key, rasterDEM[key], `In \"${sourceName}\": \"${key}\" is only valid when \"encoding\" is set to \"custom\". ${encodingName} encoding found`));\n        }\n        else if (rasterDEMSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: rasterDEM[key],\n                valueSpec: rasterDEMSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors.push(new ValidationError(key, rasterDEM[key], `unknown property \"${key}\"`));\n        }\n    }\n    return errors;\n}\n\nconst objectElementValidators = {\n    promoteId: validatePromoteId\n};\nfunction validateSource(options) {\n    const value = options.value;\n    const key = options.key;\n    const styleSpec = options.styleSpec;\n    const style = options.style;\n    const validateSpec = options.validateSpec;\n    if (!value.type) {\n        return [new ValidationError(key, value, '\"type\" is required')];\n    }\n    const type = unbundle(value.type);\n    let errors;\n    switch (type) {\n        case 'vector':\n        case 'raster':\n            errors = validateObject({\n                key,\n                value,\n                valueSpec: styleSpec[`source_${type.replace('-', '_')}`],\n                style: options.style,\n                styleSpec,\n                objectElementValidators,\n                validateSpec,\n            });\n            return errors;\n        case 'raster-dem':\n            errors = validateRasterDEMSource({\n                sourceName: key,\n                value,\n                style: options.style,\n                styleSpec,\n                validateSpec,\n            });\n            return errors;\n        case 'geojson':\n            errors = validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_geojson,\n                style,\n                styleSpec,\n                validateSpec,\n                objectElementValidators\n            });\n            if (value.cluster) {\n                for (const prop in value.clusterProperties) {\n                    const [operator, mapExpr] = value.clusterProperties[prop];\n                    const reduceExpr = typeof operator === 'string' ? [operator, ['accumulated'], ['get', prop]] : operator;\n                    errors.push(...validateExpression({\n                        key: `${key}.${prop}.map`,\n                        value: mapExpr,\n                        validateSpec,\n                        expressionContext: 'cluster-map'\n                    }));\n                    errors.push(...validateExpression({\n                        key: `${key}.${prop}.reduce`,\n                        value: reduceExpr,\n                        validateSpec,\n                        expressionContext: 'cluster-reduce'\n                    }));\n                }\n            }\n            return errors;\n        case 'video':\n            return validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_video,\n                style,\n                validateSpec,\n                styleSpec\n            });\n        case 'image':\n            return validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_image,\n                style,\n                validateSpec,\n                styleSpec\n            });\n        case 'canvas':\n            return [new ValidationError(key, null, 'Please use runtime APIs to add canvas sources, rather than including them in stylesheets.', 'source.canvas')];\n        default:\n            return validateEnum({\n                key: `${key}.type`,\n                value: value.type,\n                valueSpec: { values: ['vector', 'raster', 'raster-dem', 'geojson', 'video', 'image'] },\n                style,\n                validateSpec,\n                styleSpec\n            });\n    }\n}\nfunction validatePromoteId({ key, value }) {\n    if (getType(value) === 'string') {\n        return validateString({ key, value });\n    }\n    else {\n        const errors = [];\n        for (const prop in value) {\n            errors.push(...validateString({ key: `${key}.${prop}`, value: value[prop] }));\n        }\n        return errors;\n    }\n}\n\nfunction validateLight(options) {\n    const light = options.value;\n    const styleSpec = options.styleSpec;\n    const lightSpec = styleSpec.light;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(light);\n    if (light === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('light', light, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n    for (const key in light) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n        if (transitionMatch && lightSpec[transitionMatch[1]] && lightSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: light[key],\n                valueSpec: styleSpec.transition,\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else if (lightSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: light[key],\n                valueSpec: lightSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, light[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateSky(options) {\n    const sky = options.value;\n    const styleSpec = options.styleSpec;\n    const skySpec = styleSpec.sky;\n    const style = options.style;\n    const rootType = getType(sky);\n    if (sky === undefined) {\n        return [];\n    }\n    else if (rootType !== 'object') {\n        return [new ValidationError('sky', sky, `object expected, ${rootType} found`)];\n    }\n    let errors = [];\n    for (const key in sky) {\n        if (skySpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: sky[key],\n                valueSpec: skySpec[key],\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, sky[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateTerrain(options) {\n    const terrain = options.value;\n    const styleSpec = options.styleSpec;\n    const terrainSpec = styleSpec.terrain;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(terrain);\n    if (terrain === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('terrain', terrain, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n    for (const key in terrain) {\n        if (terrainSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: terrain[key],\n                valueSpec: terrainSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, terrain[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateFormatted(options) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n    return validateExpression(options);\n}\n\nfunction validateImage(options) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n    return validateExpression(options);\n}\n\nfunction validatePadding(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type === 'array') {\n        if (value.length < 1 || value.length > 4) {\n            return [new ValidationError(key, value, `padding requires 1 to 4 values; ${value.length} values found`)];\n        }\n        const arrayElementSpec = {\n            type: 'number'\n        };\n        let errors = [];\n        for (let i = 0; i < value.length; i++) {\n            errors = errors.concat(options.validateSpec({\n                key: `${key}[${i}]`,\n                value: value[i],\n                validateSpec: options.validateSpec,\n                valueSpec: arrayElementSpec\n            }));\n        }\n        return errors;\n    }\n    else {\n        return validateNumber({\n            key,\n            value,\n            valueSpec: {}\n        });\n    }\n}\n\nfunction validateVariableAnchorOffsetCollection(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    const styleSpec = options.styleSpec;\n    if (type !== 'array' || value.length < 1 || value.length % 2 !== 0) {\n        return [new ValidationError(key, value, 'variableAnchorOffsetCollection requires a non-empty array of even length')];\n    }\n    let errors = [];\n    for (let i = 0; i < value.length; i += 2) {\n        // Elements in even positions should be values from text-anchor enum\n        errors = errors.concat(validateEnum({\n            key: `${key}[${i}]`,\n            value: value[i],\n            valueSpec: styleSpec['layout_symbol']['text-anchor']\n        }));\n        // Elements in odd positions should be points (2-element numeric arrays)\n        errors = errors.concat(validateArray({\n            key: `${key}[${i + 1}]`,\n            value: value[i + 1],\n            valueSpec: {\n                length: 2,\n                value: 'number'\n            },\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec\n        }));\n    }\n    return errors;\n}\n\nfunction validateSprite(options) {\n    let errors = [];\n    const sprite = options.value;\n    const key = options.key;\n    if (!Array.isArray(sprite)) {\n        return validateString({\n            key,\n            value: sprite\n        });\n    }\n    else {\n        const allSpriteIds = [];\n        const allSpriteURLs = [];\n        for (const i in sprite) {\n            if (sprite[i].id && allSpriteIds.includes(sprite[i].id))\n                errors.push(new ValidationError(key, sprite, `all the sprites' ids must be unique, but ${sprite[i].id} is duplicated`));\n            allSpriteIds.push(sprite[i].id);\n            if (sprite[i].url && allSpriteURLs.includes(sprite[i].url))\n                errors.push(new ValidationError(key, sprite, `all the sprites' URLs must be unique, but ${sprite[i].url} is duplicated`));\n            allSpriteURLs.push(sprite[i].url);\n            const pairSpec = {\n                id: {\n                    type: 'string',\n                    required: true,\n                },\n                url: {\n                    type: 'string',\n                    required: true,\n                }\n            };\n            errors = errors.concat(validateObject({\n                key: `${key}[${i}]`,\n                value: sprite[i],\n                valueSpec: pairSpec,\n                validateSpec: options.validateSpec,\n            }));\n        }\n        return errors;\n    }\n}\n\nfunction validateProjection(options) {\n    const projection = options.value;\n    const styleSpec = options.styleSpec;\n    const projectionSpec = styleSpec.projection;\n    const style = options.style;\n    const rootType = getType(projection);\n    if (projection === undefined) {\n        return [];\n    }\n    else if (rootType !== 'object') {\n        return [new ValidationError('projection', projection, `object expected, ${rootType} found`)];\n    }\n    let errors = [];\n    for (const key in projection) {\n        if (projectionSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: projection[key],\n                valueSpec: projectionSpec[key],\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, projection[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateProjectionDefinition(options) {\n    const key = options.key;\n    let value = options.value;\n    value = value instanceof String ? value.valueOf() : value;\n    const type = getType(value);\n    if (type === 'array' && !isProjectionDefinitionValue(value) && !isPropertyValueSpecification(value)) {\n        return [new ValidationError(key, value, `projection expected, invalid array ${JSON.stringify(value)} found`)];\n    }\n    else if (!['array', 'string'].includes(type)) {\n        return [new ValidationError(key, value, `projection expected, invalid type \"${type}\" found`)];\n    }\n    return [];\n}\nfunction isPropertyValueSpecification(value) {\n    if (['interpolate', 'step', 'literal'].includes(value[0])) {\n        return true;\n    }\n    return false;\n}\nfunction isProjectionDefinitionValue(value) {\n    return Array.isArray(value) &&\n        value.length === 3 &&\n        typeof value[0] === 'string' &&\n        typeof value[1] === 'string' &&\n        typeof value[2] === 'number';\n}\n\nconst VALIDATORS = {\n    '*'() {\n        return [];\n    },\n    'array': validateArray,\n    'boolean': validateBoolean,\n    'number': validateNumber,\n    'color': validateColor,\n    'constants': validateConstants,\n    'enum': validateEnum,\n    'filter': validateFilter,\n    'function': validateFunction,\n    'layer': validateLayer,\n    'object': validateObject,\n    'source': validateSource,\n    'light': validateLight,\n    'sky': validateSky,\n    'terrain': validateTerrain,\n    'projection': validateProjection,\n    'projectionDefinition': validateProjectionDefinition,\n    'string': validateString,\n    'formatted': validateFormatted,\n    'resolvedImage': validateImage,\n    'padding': validatePadding,\n    'variableAnchorOffsetCollection': validateVariableAnchorOffsetCollection,\n    'sprite': validateSprite,\n};\n/**\n * Main recursive validation function used internally.\n * You should use `validateStyleMin` in the browser or `validateStyle` in node env.\n * @param options - the options object\n * @param options.key - string representing location of validation in style tree. Used only\n * for more informative error reporting.\n * @param options.value - current value from style being evaluated. May be anything from a\n * high level object that needs to be descended into deeper or a simple\n * scalar value.\n * @param options.valueSpec - current spec being evaluated. Tracks value.\n * @param options.styleSpec - current full spec being evaluated.\n * @param options.validateSpec - the validate function itself\n * @param options.style - the style object\n * @param options.objectElementValidators - optional object of functions that will be called\n * @returns an array of errors, or an empty array if no errors are found.\n */\nfunction validate(options) {\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const styleSpec = options.styleSpec;\n    options.validateSpec = validate;\n    if (valueSpec.expression && isFunction$1(unbundle(value))) {\n        return validateFunction(options);\n    }\n    else if (valueSpec.expression && isExpression(deepUnbundle(value))) {\n        return validateExpression(options);\n    }\n    else if (valueSpec.type && VALIDATORS[valueSpec.type]) {\n        return VALIDATORS[valueSpec.type](options);\n    }\n    else {\n        const valid = validateObject(extendBy({}, options, {\n            valueSpec: valueSpec.type ? styleSpec[valueSpec.type] : valueSpec\n        }));\n        return valid;\n    }\n}\n\nfunction validateGlyphsUrl(options) {\n    const value = options.value;\n    const key = options.key;\n    const errors = validateString(options);\n    if (errors.length)\n        return errors;\n    if (value.indexOf('{fontstack}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{fontstack}\" token'));\n    }\n    if (value.indexOf('{range}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{range}\" token'));\n    }\n    return errors;\n}\n\n/**\n * Validate a MapLibre style against the style specification.\n * Use this when running in the browser.\n *\n * @param style - The style to be validated.\n * @param styleSpec - The style specification to validate against.\n * If omitted, the latest style spec is used.\n * @returns an array of errors, or an empty array if no errors are found.\n * @example\n *   const validate = require('@maplibre/maplibre-gl-style-spec/').validateStyleMin;\n *   const errors = validate(style);\n */\nfunction validateStyleMin(style, styleSpec = v8Spec) {\n    let errors = [];\n    errors = errors.concat(validate({\n        key: '',\n        value: style,\n        valueSpec: styleSpec.$root,\n        styleSpec,\n        style,\n        validateSpec: validate,\n        objectElementValidators: {\n            glyphs: validateGlyphsUrl,\n            '*'() {\n                return [];\n            }\n        }\n    }));\n    if (style['constants']) {\n        errors = errors.concat(validateConstants({\n            key: 'constants',\n            value: style['constants'],\n            style,\n            styleSpec,\n            validateSpec: validate,\n        }));\n    }\n    return sortErrors(errors);\n}\nvalidateStyleMin.source = wrapCleanErrors(injectValidateSpec(validateSource));\nvalidateStyleMin.sprite = wrapCleanErrors(injectValidateSpec(validateSprite));\nvalidateStyleMin.glyphs = wrapCleanErrors(injectValidateSpec(validateGlyphsUrl));\nvalidateStyleMin.light = wrapCleanErrors(injectValidateSpec(validateLight));\nvalidateStyleMin.sky = wrapCleanErrors(injectValidateSpec(validateSky));\nvalidateStyleMin.terrain = wrapCleanErrors(injectValidateSpec(validateTerrain));\nvalidateStyleMin.layer = wrapCleanErrors(injectValidateSpec(validateLayer));\nvalidateStyleMin.filter = wrapCleanErrors(injectValidateSpec(validateFilter));\nvalidateStyleMin.paintProperty = wrapCleanErrors(injectValidateSpec(validatePaintProperty));\nvalidateStyleMin.layoutProperty = wrapCleanErrors(injectValidateSpec(validateLayoutProperty));\nfunction injectValidateSpec(validator) {\n    return function (options) {\n        return validator({\n            ...options,\n            validateSpec: validate,\n        });\n    };\n}\nfunction sortErrors(errors) {\n    return [].concat(errors).sort((a, b) => {\n        return a.line - b.line;\n    });\n}\nfunction wrapCleanErrors(inner) {\n    return function (...args) {\n        return sortErrors(inner.apply(this, args));\n    };\n}\n\n// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nconst stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,]/g;\n\nfunction stringify(passedObj, options = {}) {\n  const indent = JSON.stringify(\n    [1],\n    undefined,\n    options.indent === undefined ? 2 : options.indent\n  ).slice(2, -3);\n\n  const maxLength =\n    indent === \"\"\n      ? Infinity\n      : options.maxLength === undefined\n      ? 80\n      : options.maxLength;\n\n  let { replacer } = options;\n\n  return (function _stringify(obj, currentIndent, reserved) {\n    if (obj && typeof obj.toJSON === \"function\") {\n      obj = obj.toJSON();\n    }\n\n    const string = JSON.stringify(obj, replacer);\n\n    if (string === undefined) {\n      return string;\n    }\n\n    const length = maxLength - currentIndent.length - reserved;\n\n    if (string.length <= length) {\n      const prettified = string.replace(\n        stringOrChar,\n        (match, stringLiteral) => {\n          return stringLiteral || `${match} `;\n        }\n      );\n      if (prettified.length <= length) {\n        return prettified;\n      }\n    }\n\n    if (replacer != null) {\n      obj = JSON.parse(string);\n      replacer = undefined;\n    }\n\n    if (typeof obj === \"object\" && obj !== null) {\n      const nextIndent = currentIndent + indent;\n      const items = [];\n      let index = 0;\n      let start;\n      let end;\n\n      if (Array.isArray(obj)) {\n        start = \"[\";\n        end = \"]\";\n        const { length } = obj;\n        for (; index < length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, index === length - 1 ? 0 : 1) ||\n              \"null\"\n          );\n        }\n      } else {\n        start = \"{\";\n        end = \"}\";\n        const keys = Object.keys(obj);\n        const { length } = keys;\n        for (; index < length; index++) {\n          const key = keys[index];\n          const keyPart = `${JSON.stringify(key)}: `;\n          const value = _stringify(\n            obj[key],\n            nextIndent,\n            keyPart.length + (index === length - 1 ? 0 : 1)\n          );\n          if (value !== undefined) {\n            items.push(keyPart + value);\n          }\n        }\n      }\n\n      if (items.length > 0) {\n        return [start, indent + items.join(`,\\n${nextIndent}`), end].join(\n          `\\n${currentIndent}`\n        );\n      }\n    }\n\n    return string;\n  })(passedObj, \"\", 0);\n}\n\nfunction sortKeysBy(obj, reference) {\n    const result = {};\n    for (const key in reference) {\n        if (obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n    }\n    for (const key in obj) {\n        if (result[key] === undefined) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n/**\n * Format a MapLibre Style.  Returns a stringified style with its keys\n * sorted in the same order as the reference style.\n *\n * The optional `space` argument is passed to\n * [`JSON.stringify`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify)\n * to generate formatted output.\n *\n * If `space` is unspecified, a default of `2` spaces will be used.\n *\n * @private\n * @param {Object} style a MapLibre Style\n * @param {number} [space] space argument to pass to `JSON.stringify`\n * @returns {string} stringified formatted JSON\n * @example\n * var fs = require('fs');\n * var format = require('maplibre-gl-style-spec').format;\n * var style = fs.readFileSync('./source.json', 'utf8');\n * fs.writeFileSync('./dest.json', format(style));\n * fs.writeFileSync('./dest.min.json', format(style, 0));\n */\nfunction format(style, space = 2) {\n    style = sortKeysBy(style, v8Spec.$root);\n    if (style.layers) {\n        style.layers = style.layers.map((layer) => sortKeysBy(layer, v8Spec.layer));\n    }\n    return stringify(style, { indent: space });\n}\n\nfunction eachLayout(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('layout') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\nfunction eachPaint(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('paint') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\nfunction resolveConstant(style, value) {\n    if (typeof value === 'string' && value[0] === '@') {\n        return resolveConstant(style, style.constants[value]);\n    }\n    else {\n        return value;\n    }\n}\nfunction isFunction(value) {\n    return Array.isArray(value.stops);\n}\nfunction renameProperty(obj, from, to) {\n    obj[to] = obj[from];\n    delete obj[from];\n}\nfunction migrateV8(style) {\n    style.version = 8;\n    // Rename properties, reverse coordinates in source and layers\n    eachSource(style, (source) => {\n        if (source.type === 'video' && source['url'] !== undefined) {\n            renameProperty(source, 'url', 'urls');\n        }\n        if (source.type === 'video') {\n            source.coordinates.forEach((coord) => {\n                return coord.reverse();\n            });\n        }\n    });\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['symbol-min-distance'] !== undefined) {\n                renameProperty(layout, 'symbol-min-distance', 'symbol-spacing');\n            }\n        });\n        eachPaint(layer, (paint) => {\n            if (paint['background-image'] !== undefined) {\n                renameProperty(paint, 'background-image', 'background-pattern');\n            }\n            if (paint['line-image'] !== undefined) {\n                renameProperty(paint, 'line-image', 'line-pattern');\n            }\n            if (paint['fill-image'] !== undefined) {\n                renameProperty(paint, 'fill-image', 'fill-pattern');\n            }\n        });\n    });\n    // Inline Constants\n    eachProperty(style, { paint: true, layout: true }, (property) => {\n        const value = resolveConstant(style, property.value);\n        if (isFunction(value)) {\n            value.stops.forEach((stop) => {\n                stop[1] = resolveConstant(style, stop[1]);\n            });\n        }\n        property.set(value);\n    });\n    delete style['constants'];\n    eachLayer(style, (layer) => {\n        // get rid of text-max-size, icon-max-size\n        // turn text-size, icon-size into layout properties\n        // https://github.com/mapbox/mapbox-gl-style-spec/issues/255\n        eachLayout(layer, (layout) => {\n            delete layout['text-max-size'];\n            delete layout['icon-max-size'];\n        });\n        eachPaint(layer, (paint) => {\n            if (paint['text-size']) {\n                if (!layer.layout)\n                    layer.layout = {};\n                layer.layout['text-size'] = paint['text-size'];\n                delete paint['text-size'];\n            }\n            if (paint['icon-size']) {\n                if (!layer.layout)\n                    layer.layout = {};\n                layer.layout['icon-size'] = paint['icon-size'];\n                delete paint['icon-size'];\n            }\n        });\n    });\n    function migrateFontStack(font) {\n        function splitAndTrim(string) {\n            return string.split(',').map((s) => {\n                return s.trim();\n            });\n        }\n        if (Array.isArray(font)) {\n            // Assume it's a previously migrated font-array.\n            return font;\n        }\n        else if (typeof font === 'string') {\n            return splitAndTrim(font);\n        }\n        else if (typeof font === 'object') {\n            font.stops.forEach((stop) => {\n                stop[1] = splitAndTrim(stop[1]);\n            });\n            return font;\n        }\n        else {\n            throw new Error('unexpected font value');\n        }\n    }\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['text-font']) {\n                layout['text-font'] = migrateFontStack(layout['text-font']);\n            }\n        });\n    });\n    // Reverse order of symbol layers. This is an imperfect migration.\n    //\n    // The order of a symbol layer in the layers list affects two things:\n    // - how it is drawn relative to other layers (like oneway arrows below bridges)\n    // - the placement priority compared to other layers\n    //\n    // It's impossible to reverse the placement priority without breaking the draw order\n    // in some cases. This migration only reverses the order of symbol layers that\n    // are above all other types of layers.\n    //\n    // Symbol layers that are at the top of the map preserve their priority.\n    // Symbol layers that are below another type (line, fill) of layer preserve their draw order.\n    let firstSymbolLayer = 0;\n    for (let i = style.layers.length - 1; i >= 0; i--) {\n        const layer = style.layers[i];\n        if (layer.type !== 'symbol') {\n            firstSymbolLayer = i + 1;\n            break;\n        }\n    }\n    const symbolLayers = style.layers.splice(firstSymbolLayer);\n    symbolLayers.reverse();\n    style.layers = style.layers.concat(symbolLayers);\n    return style;\n}\n\n/**\n * Migrate the given style object in place to use expressions. Specifically,\n * this will convert (a) \"stop\" functions, and (b) legacy filters to their\n * expression equivalents.\n * @param style The style object to migrate.\n * @returns The migrated style object.\n */\nfunction expressions(style) {\n    const converted = [];\n    eachLayer(style, (layer) => {\n        if (layer.filter) {\n            layer.filter = convertFilter(layer.filter);\n        }\n    });\n    eachProperty(style, { paint: true, layout: true }, ({ path, value, reference, set }) => {\n        if (isExpression(value))\n            return;\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            set(convertFunction(value, reference));\n            converted.push(path.join('.'));\n        }\n        else if (reference.tokens && typeof value === 'string') {\n            set(convertTokenString(value));\n        }\n    });\n    return style;\n}\n\n/**\n * Migrate color style values to supported format.\n *\n * @param colorToMigrate Color value to migrate, could be a string or an expression.\n * @returns Color style value in supported format.\n */\nfunction migrateColors(colorToMigrate) {\n    return JSON.parse(migrateHslColors(JSON.stringify(colorToMigrate)));\n}\n/**\n * Created to migrate from colors supported by the former CSS color parsing\n * library `csscolorparser` but not compliant with the CSS Color specification,\n * like `hsl(900, 0.15, 90%)`.\n *\n * @param colorToMigrate Serialized color style value.\n * @returns A serialized color style value in which all non-standard hsl color values\n * have been converted to a format that complies with the CSS Color specification.\n *\n * @example\n * migrateHslColors('\"hsl(900, 0.15, 90%)\"'); // returns '\"hsl(900, 15%, 90%)\"'\n * migrateHslColors('\"hsla(900, .15, .9)\"'); // returns '\"hsl(900, 15%, 90%)\"'\n * migrateHslColors('\"hsl(900, 15%, 90%)\"'); // returns '\"hsl(900, 15%, 90%)\"' - no changes\n */\nfunction migrateHslColors(colorToMigrate) {\n    return colorToMigrate.replace(/\"hsla?\\((.+?)\\)\"/gi, (match, hslArgs) => {\n        const argsMatch = hslArgs.match(/^(.+?)\\s*,\\s*(.+?)\\s*,\\s*(.+?)(?:\\s*,\\s*(.+))?$/i);\n        if (argsMatch) {\n            let [h, s, l, a] = argsMatch.slice(1);\n            [s, l] = [s, l].map(v => v.endsWith('%') ? v : `${parseFloat(v) * 100}%`);\n            return `\"hsl${typeof a === 'string' ? 'a' : ''}(${[h, s, l, a].filter(Boolean).join(',')})\"`;\n        }\n        return match;\n    });\n}\n\n/**\n * Migrate a Mapbox/MapLibre GL Style to the latest version.\n *\n * @param style - a MapLibre Style\n * @returns a migrated style\n * @example\n * const fs = require('fs');\n * const migrate = require('@maplibre/maplibre-gl-style-spec').migrate;\n * const style = fs.readFileSync('./style.json', 'utf8');\n * fs.writeFileSync('./style.json', JSON.stringify(migrate(style)));\n */\nfunction migrate(style) {\n    let migrated = false;\n    if (style.version === 7) {\n        style = migrateV8(style);\n        migrated = true;\n    }\n    if (style.version === 8) {\n        migrated = !!expressions(style);\n        migrated = true;\n    }\n    eachProperty(style, { paint: true, layout: true }, ({ value, reference, set }) => {\n        if (reference.type === 'color') {\n            set(migrateColors(value));\n        }\n    });\n    if (!migrated) {\n        throw new Error(`Cannot migrate from ${style.version}`);\n    }\n    return style;\n}\n\nconst v8 = v8Spec;\nconst expression = {\n    StyleExpression,\n    StylePropertyFunction,\n    ZoomConstantExpression,\n    ZoomDependentExpression,\n    createExpression,\n    createPropertyExpression,\n    isExpression,\n    isExpressionFilter,\n    isZoomExpression,\n    normalizePropertyExpression,\n};\nconst styleFunction = {\n    convertFunction,\n    createFunction,\n    isFunction: isFunction$1\n};\nconst visit = { eachLayer, eachProperty, eachSource };\n\nexport { Color, ColorType, CompoundExpression, EvaluationContext, FormatExpression, Formatted, FormattedSection, FormattedType, Interpolate, Literal, NullType, Padding, ParsingError, ProjectionDefinition, ProjectionDefinitionType, ResolvedImage, Step, StyleExpression, StylePropertyFunction, ValidationError, VariableAnchorOffsetCollection, ZoomConstantExpression, ZoomDependentExpression, classifyRings, convertFilter, convertFunction, createExpression, createFunction, createPropertyExpression, derefLayers, diff, emptyStyle, expression, expressions$1 as expressions, featureFilter, format, styleFunction as function, groupByLayout, interpolateFactory as interpolates, isExpression, isFunction$1 as isFunction, isZoomExpression, v8Spec as latest, migrate, normalizePropertyExpression, supportsPropertyExpression, typeToString as toString, typeOf, v8, validate, validateStyleMin, visit };\n//# sourceMappingURL=index.mjs.map\n","var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 200,\n  'extra-light': 200,\n  light: 300,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  'extra-bold': 800,\n  'ultra-bold': 800,\n  heavy: 900,\n  black: 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900,\n  'ultra-black': 950,\n  'extra-black': 950\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\n/**\n * @param {string|Array<string>} fonts Mapbox GL Style fontstack or single font, e.g. `['Open Sans Regular', 'Arial Unicode MS Regular']` or `'Open Sans Regular'`.\n * @param {number} size Font size in pixels.\n * @param {string|number} [lineHeight] Line height as css line-height.\n * @returns {string} CSS font definition, e.g. `'normal 400 16px/1.2 \"Open Sans\"'`.\n */\nexport default function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        haveStyle = true;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n        haveStyle = true;\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n        haveWeight = true;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n}\n","const mapboxBaseUrl = 'https://api.mapbox.com';\n\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nexport function getMapboxPath(url) {\n  const startsWith = 'mapbox://';\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n  return url.slice(startsWith.length);\n}\n\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeSpriteUrl(url, token, styleUrl) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n  const startsWith = 'sprites/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected sprites url: ${url}`);\n  }\n  const sprite = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${sprite}/sprite?access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeStyleUrl(url, token) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n  const startsWith = 'styles/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected style url: ${url}`);\n  }\n  const style = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${style}?&access_token=${token}`;\n}\n\nconst mapboxSubdomains = ['a', 'b', 'c', 'd'];\n\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {Array<string>} A vector tile template.\n * @private\n */\nexport function normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  const urlObject = new URL(url, styleUrl);\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    if (!token) {\n      return [decodeURI(urlObject.href)];\n    }\n    if (!urlObject.searchParams.has(tokenParam)) {\n      urlObject.searchParams.set(tokenParam, token);\n    }\n    return [decodeURI(urlObject.href)];\n  }\n\n  if (mapboxPath === 'mapbox.satellite') {\n    const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n    return [\n      `https://api.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}${sizeFactor}.webp?access_token=${token}`,\n    ];\n  }\n  return mapboxSubdomains.map(\n    (sub) =>\n      `https://${sub}.tiles.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}.vector.pbf?access_token=${token}`,\n  );\n}\n","import {VectorTile} from 'ol';\nimport TileState from 'ol/TileState.js';\nimport {toPromise} from 'ol/functions.js';\nimport {getUid} from 'ol/util.js';\nimport {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\n\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\n\nlet styleId = 0;\nexport function getStyleId(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  return glStyle.id;\n}\n\nexport function getStyleFunctionKey(glStyle, olLayer) {\n  return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nexport function getFunctionCache(glStyle) {\n  let functionCache = functionCacheByStyleId[glStyle.id];\n  if (!functionCache) {\n    functionCache = {};\n    functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n  }\n  return functionCache;\n}\n\nexport function clearFunctionCache() {\n  for (const key in functionCacheByStyleId) {\n    delete functionCacheByStyleId[key];\n  }\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nexport function getFilterCache(glStyle) {\n  let filterCache = filterCacheByStyleId[glStyle.id];\n  if (!filterCache) {\n    filterCache = {};\n    filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n  }\n  return filterCache;\n}\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nexport function getResolutionForZoom(zoom, resolutions) {\n  const base = Math.floor(zoom);\n  const factor = Math.pow(2, zoom - base);\n  return resolutions[base] / factor;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.request = pendingRequests[url][0];\n    }\n    return pendingRequests[url][1];\n  }\n  const transformedRequest = options.transformRequest\n    ? options.transformRequest(url, resourceType) || url\n    : url;\n  const pendingRequest = toPromise(() => transformedRequest).then(\n    (transformedRequest) => {\n      if (!(transformedRequest instanceof Request)) {\n        transformedRequest = new Request(transformedRequest);\n      }\n      if (!transformedRequest.headers.get('Accept')) {\n        transformedRequest.headers.set('Accept', 'application/json');\n      }\n      if (metadata) {\n        metadata.request = transformedRequest;\n      }\n      return fetch(transformedRequest)\n        .then(function (response) {\n          delete pendingRequests[url];\n          return response.ok\n            ? response.json()\n            : Promise.reject(new Error('Error fetching source ' + url));\n        })\n        .catch(function (error) {\n          delete pendingRequests[url];\n          return Promise.reject(new Error('Error fetching source ' + url));\n        });\n    },\n  );\n  pendingRequests[url] = [transformedRequest, pendingRequest];\n  return pendingRequest;\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise<{tileJson: Object, tileLoadFunction: import('ol/Tile.js').LoadFunction}?>} TileJson and load function\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    let tileLoadFunction;\n    if (options.transformRequest) {\n      tileLoadFunction = (tile, src) => {\n        const transformedRequest = options.transformRequest\n          ? options.transformRequest(src, 'Tiles') || src\n          : src;\n        if (tile instanceof VectorTile) {\n          tile.setLoader((extent, resolution, projection) => {\n            toPromise(() => transformedRequest).then((transformedRequest) => {\n              fetch(transformedRequest)\n                .then((response) => response.arrayBuffer())\n                .then((data) => {\n                  const format = tile.getFormat();\n                  const features = format.readFeatures(data, {\n                    extent: extent,\n                    featureProjection: projection,\n                  });\n                  // @ts-ignore\n                  tile.setFeatures(features);\n                })\n                .catch((e) => tile.setState(TileState.ERROR));\n            });\n          });\n        } else {\n          const img = tile.getImage();\n          toPromise(() => transformedRequest).then((transformedRequest) => {\n            if (transformedRequest instanceof Request) {\n              fetch(transformedRequest)\n                .then((response) => response.blob())\n                .then((blob) => {\n                  const url = URL.createObjectURL(blob);\n                  img.addEventListener('load', () => URL.revokeObjectURL(url));\n                  img.addEventListener('error', () => URL.revokeObjectURL(url));\n                  img.src = url;\n                })\n                .catch((e) => tile.setState(TileState.ERROR));\n            } else {\n              img.src = transformedRequest;\n            }\n          });\n        }\n      };\n    }\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href,\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve({\n          tileJson: Object.assign({}, glSource, {\n            url: undefined,\n            tiles: normalizedSourceUrl,\n          }),\n          tileLoadFunction,\n        });\n      } else {\n        const metadata = {};\n        promise = fetchResource(\n          'Source',\n          normalizedSourceUrl[0],\n          options,\n          metadata,\n        ).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            if (tileJson.scheme === 'tms') {\n              tileUrl = tileUrl.replace('{y}', '{-y}');\n            }\n            return normalizeSourceUrl(\n              tileUrl,\n              options.accessToken,\n              options.accessTokenParam || 'access_token',\n              metadata.request.url,\n            )[0];\n          });\n          return Promise.resolve({tileJson, tileLoadFunction});\n        });\n      }\n    } else {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          if (glSource.scheme === 'tms') {\n            tileUrl = tileUrl.replace('{y}', '{-y}');\n          }\n          return normalizeSourceUrl(\n            tileUrl,\n            options.accessToken,\n            options.accessTokenParam || 'access_token',\n            styleUrl || location.href,\n          )[0];\n        }),\n      });\n      promise = Promise.resolve({\n        tileJson: Object.assign({}, glSource),\n        tileLoadFunction,\n      });\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nexport function drawIconHalo(\n  spriteImage,\n  spriteImageData,\n  haloWidth,\n  haloColor,\n) {\n  const imgSize = [\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height,\n  ];\n  const imageCanvas = createCanvas(imgSize[0], imgSize[1]);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    spriteImage,\n    spriteImageData.x,\n    spriteImageData.y,\n    spriteImageData.width,\n    spriteImageData.height,\n    haloWidth * spriteImageData.pixelRatio,\n    haloWidth * spriteImageData.pixelRatio,\n    spriteImageData.width,\n    spriteImageData.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n  imageContext.globalCompositeOperation = 'destination-over';\n  imageContext.fillStyle = `rgba(${haloColor.r * 255},${haloColor.g * 255},${\n    haloColor.b * 255\n  },${haloColor.a})`;\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const alpha = data[index + 3];\n      if (alpha > 0) {\n        imageContext.arc(\n          i,\n          j,\n          haloWidth * spriteImageData.pixelRatio,\n          0,\n          2 * Math.PI,\n        );\n      }\n    }\n  }\n  imageContext.fill();\n  return imageCanvas;\n}\n\nfunction smoothstep(min, max, value) {\n  const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n  return x * x * (3 - 2 * x);\n}\n\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nexport function drawSDF(image, area, color) {\n  const imageCanvas = createCanvas(area.width, area.height);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    image,\n    area.x,\n    area.y,\n    area.width,\n    area.height,\n    0,\n    0,\n    area.width,\n    area.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const dist = data[index + 3] / 255;\n\n      const buffer = 0.75;\n      const gamma = 0.1;\n\n      const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n      if (alpha > 0) {\n        data[index + 0] = Math.round(255 * color.r * alpha);\n        data[index + 1] = Math.round(255 * color.g * alpha);\n        data[index + 2] = Math.round(255 * color.b * alpha);\n        data[index + 3] = Math.round(255 * alpha);\n      } else {\n        data[index + 3] = 0;\n      }\n    }\n  }\n  imageContext.putImageData(imageData, 0, 0);\n  return imageCanvas;\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @private\n */\n","import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts, registerFont} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1),\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n  if (!loadedFontFamilies) {\n    loadedFontFamilies = {};\n    const styleSheets = document.styleSheets;\n    for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n      const styleSheet = /** @type {CSSStyleSheet} */ (styleSheets[i]);\n      try {\n        const cssRules = styleSheet.rules || styleSheet.cssRules;\n        if (cssRules) {\n          for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n            const cssRule = cssRules[j];\n            if (cssRule.type == 5) {\n              const match = cssRule.cssText.match(fontFamilyRegEx);\n              loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n            }\n          }\n        }\n      } catch {\n        // empty catch block\n      }\n    }\n  }\n  return family in loadedFontFamilies;\n}\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(\n  fonts,\n  templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css',\n) {\n  const fontsKey = fonts.toString();\n  if (fontsKey in processedFontFamilies) {\n    return processedFontFamilies[fontsKey];\n  }\n  const fontDescriptions = [];\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n    const font = fonts[i];\n    const cssFont = mb2css(font, 1);\n    registerFont(cssFont);\n    const parts = cssFont.split(' ');\n    fontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n    const fontDescription = fontDescriptions[i];\n    const family = fontDescription[0];\n    if (!hasFontFamily(family)) {\n      if (\n        checkedFonts.get(\n          `${fontDescription[2]}\\n${fontDescription[1]} \\n${family}`,\n        ) !== 100\n      ) {\n        const fontUrl = templateUrl\n          .replace('{font-family}', family.replace(/ /g, '-').toLowerCase())\n          .replace('{Font+Family}', family.replace(/ /g, '+'))\n          .replace('{fontweight}', fontDescription[1])\n          .replace(\n            '{-fontstyle}',\n            fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1'),\n          )\n          .replace('{fontstyle}', fontDescription[2]);\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  }\n  processedFontFamilies[fontsKey] = fonts;\n  return fonts;\n}\n","/*\nol-mapbox-style - Use Mapbox/MapLibre Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport {\n  Color,\n  convertFunction,\n  createPropertyExpression,\n  derefLayers,\n  featureFilter as createFilter,\n  isExpression,\n  isFunction,\n  v8 as spec,\n} from '@maplibre/maplibre-gl-style-spec';\nimport mb2css from 'mapbox-to-css-font';\nimport {toPromise} from 'ol/functions.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\n\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  clearFunctionCache,\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  drawIconHalo,\n  drawSDF,\n  getFilterCache,\n  getFunctionCache,\n  getStyleFunctionKey,\n  getZoomForResolution,\n} from './util.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n * @typedef {import('./util.js').ResourceType} ResourceType\n */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec,\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', '),\n    );\n  }\n  return compiledExpression.value;\n};\n\nconst emptyObj = {};\nconst zoomObj = {zoom: 0};\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  zoom,\n  feature,\n  functionCache,\n  featureState,\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); //eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  zoomObj.zoom = zoom;\n  return functions[property](zoomObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {\"icon\"|\"text\"} prefix Style property prefix.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getDeclutterMode(layer, zoom, feature, prefix, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    `${prefix}-allow-overlap`,\n    zoom,\n    feature,\n    functionCache,\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    `${prefix}-ignore-placement`,\n    zoom,\n    feature,\n    functionCache,\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); //eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    filterCache[layerId] = createFilter(filter).filter;\n  }\n  zoomObj.zoom = zoom;\n  return filterCache[layerId](zoomObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  if (enabled !== renderTransparentEnabled) {\n    clearFunctionCache();\n    renderTransparentEnabled = enabled;\n  }\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox/MapLibre Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\nexport const styleFunctionArgs = {};\n\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox/MapLibre Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox/MapLibre Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox/MapLibre Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox/MapLibre Style object.\n * @param {string|Request|Promise<string|Request>} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox/MapLibre Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox/MapLibre Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox/MapLibre Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined,\n  getImage = undefined,\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n  styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] =\n    Array.from(arguments);\n\n  let spriteImage, spriteImageSize;\n  let spriteImageUnSDFed;\n\n  if (spriteImageUrl) {\n    if (typeof Image !== 'undefined') {\n      const img = new Image();\n      let blobUrl;\n      toPromise(() => spriteImageUrl).then((spriteImageUrl) => {\n        if (spriteImageUrl instanceof Request) {\n          fetch(spriteImageUrl)\n            .then((response) => response.blob())\n            .then((blob) => {\n              blobUrl = URL.createObjectURL(blob);\n              img.src = blobUrl;\n            })\n            .catch(() => {});\n        } else {\n          img.crossOrigin = 'anonymous';\n          img.src = spriteImageUrl;\n          if (blobUrl) {\n            URL.revokeObjectURL(blobUrl);\n          }\n        }\n      });\n      img.onload = function () {\n        spriteImage = img;\n        spriteImageSize = [img.width, img.height];\n        olLayer.changed();\n        img.onload = null;\n      };\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) { //eslint-disable-line\n      const worker = /** @type {*} */ (self);\n      // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n      worker.postMessage({\n        action: 'loadImage',\n        src: spriteImageUrl,\n      });\n      worker.addEventListener('message', function handler(event) {\n        if (\n          event.data.action === 'imageLoaded' &&\n          event.data.src === spriteImageUrl\n        ) {\n          spriteImage = event.data.image;\n          spriteImageSize = [spriteImage.width, spriteImage.height];\n        }\n      });\n    }\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = getFunctionCache(glStyle);\n  const filterCache = getFilterCache(glStyle);\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      (Array.isArray(sourceOrLayers) && sourceOrLayers.indexOf(layerId) !== -1)\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`,\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`,\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n  const styleFunction = function (feature, resolution, onlyLayer) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties.layer];\n    if (!layers) {\n      return undefined;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    const type = types[feature.getGeometry().getType()];\n    const f = {\n      id: feature.getId(),\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n      if (onlyLayer !== undefined && onlyLayer !== layerId) {\n        continue;\n      }\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              if (spriteImage && spriteData && spriteData[icon]) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n                opacity,\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          if (!('line-pattern' in paint)) {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'line-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              getValue(\n                layer,\n                'paint',\n                'line-opacity',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n          } else {\n            color = undefined;\n          }\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null,\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            if (\n              (spriteImage && spriteData && spriteData[icon]) ||\n              imageElement\n            ) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              );\n              if (type == 2) {\n                const geom = /** @type {*} */ (feature.getGeometry());\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2),\n                    ),\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        2,\n                        {},\n                        undefined,\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState,\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const maxX = Math.max(x1, x2);\n                        const xM = midpoint[0];\n                        const yM = midpoint[1];\n                        const dotProduct =\n                          (y2 - y1) * (xM - x1) - (x2 - x1) * (yM - y1);\n                        if (\n                          Math.abs(dotProduct) < 0.001 && //midpoint is aligned with the segment\n                          xM <= maxX &&\n                          xM >= minX //midpoint is on the segment and not outside it\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  const haloWidth = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-width',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getDeclutterMode(\n                      layer,\n                      zoom,\n                      f,\n                      'icon',\n                      functionCache,\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      ).slice(0);\n                      displacement[0] *= iconSize;\n                      displacement[1] *= -iconSize;\n                    }\n                    let color = iconColor\n                      ? [\n                          iconColor.r * 255,\n                          iconColor.g * 255,\n                          iconColor.b * 255,\n                          iconColor.a,\n                        ]\n                      : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                        scale: iconSize,\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [\n                          imageElement.width,\n                          imageElement.height,\n                        ];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, size, offset;\n                      if (haloWidth) {\n                        if (spriteImageData.sdf) {\n                          img = drawIconHalo(\n                            drawSDF(\n                              spriteImage,\n                              spriteImageData,\n                              iconColor || [0, 0, 0, 1],\n                            ),\n                            {\n                              x: 0,\n                              y: 0,\n                              width: spriteImageData.width,\n                              height: spriteImageData.height,\n                              pixelRatio: spriteImageData.pixelRatio,\n                            },\n                            haloWidth,\n                            haloColor,\n                          );\n                          color = undefined; // do not tint haloed icons\n                        } else {\n                          img = drawIconHalo(\n                            spriteImage,\n                            spriteImageData,\n                            haloWidth,\n                            haloColor,\n                          );\n                        }\n                      } else {\n                        if (spriteImageData.sdf) {\n                          if (!spriteImageUnSDFed) {\n                            spriteImageUnSDFed = drawSDF(\n                              spriteImage,\n                              {\n                                x: 0,\n                                y: 0,\n                                width: spriteImageSize[0],\n                                height: spriteImageSize[1],\n                              },\n                              {r: 1, g: 1, b: 1, a: 1},\n                            );\n                          }\n                          img = spriteImageUnSDFed;\n                        } else {\n                          img = spriteImage;\n                        }\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        // @ts-ignore\n                        imgSize: spriteImageSize,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          zoom,\n                          f,\n                          functionCache,\n                          featureState,\n                        ),\n                      ),\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState,\n                    ),\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    ],\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n\n          const circleTranslate = getValue(\n            layer,\n            'paint',\n            'circle-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth +\n            '.' +\n            circleTranslate[0] +\n            '.' +\n            circleTranslate[1];\n\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              displacement: [circleTranslate[0], -circleTranslate[1]],\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          font = mb2css(\n            getFonts\n              ? getFonts(\n                  fontArray,\n                  glStyle.metadata\n                    ? glStyle.metadata['ol:webfonts']\n                    : undefined,\n                )\n              : fontArray,\n            textSize,\n            textLineHeight,\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight,\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return acc;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing,\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          const declutterMode = getDeclutterMode(\n            layer,\n            zoom,\n            f,\n            'text',\n            functionCache,\n          );\n          if (!style.getText()) {\n            style.setText(text);\n          }\n          text = style.getText();\n          if (\n            !text ||\n            ('getDeclutterMode' in text &&\n              text.getDeclutterMode() !== declutterMode)\n          ) {\n            text = new Text({\n              padding: [2, 2, 2, 2],\n              // @ts-ignore\n              declutterMode: declutterMode,\n            });\n            style.setText(text);\n          }\n          const textTransform = getValue(\n            layer,\n            'layout',\n            'text-transform',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n              ? applyLetterSpacing(label, letterSpacing)\n              : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            ),\n          );\n          if (typeof text.setKeepUpright === 'function') {\n            const keepUpright = getValue(\n              layer,\n              'layout',\n              'text-keep-upright',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setKeepUpright(keepUpright);\n          }\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                );\n          let textAlign;\n          if (placement === 'line-center') {\n            text.setPlacement('line');\n            textAlign = 'center';\n          } else {\n            text.setPlacement(placement);\n          }\n          if (placement === 'line' && typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(\n              layer,\n              'layout',\n              'symbol-spacing',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n              ) *\n                label.length) /\n                wrappedLabel.length,\n            );\n            text.setRotateWithView(false);\n          }\n          text.setTextAlign(textAlign);\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0],\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1],\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            ),\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            opacity,\n          );\n          if (haloColor && textHaloWidth > 0) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize,\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if ('set' in feature) {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n    return undefined;\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n  return styleFunction;\n}\n\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nexport function getStyleForLayer(feature, resolution, olLayer, layerId) {\n  const evaluateStyle = olLayer.getStyleFunction();\n  if (evaluateStyle.length === 3) {\n    // @ts-ignore\n    return evaluateStyle(feature, resolution, layerId);\n  }\n  return undefined;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n","/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nexport function hillshade(inputs, data) {\n  const elevationImage = inputs[0];\n  const width = elevationImage.width;\n  const height = elevationImage.height;\n  const elevationData = elevationImage.data;\n  const shadeData = new Uint8ClampedArray(elevationData.length);\n  const dp = data.resolution * 2;\n  const maxX = width - 1;\n  const maxY = height - 1;\n  const pixel = [0, 0, 0, 0];\n  const twoPi = 2 * Math.PI;\n  const halfPi = Math.PI / 2;\n  const sunEl = (Math.PI * data.sunEl) / 180;\n  const sunAz = (Math.PI * data.sunAz) / 180;\n  const cosSunEl = Math.cos(sunEl);\n  const sinSunEl = Math.sin(sunEl);\n  const highlightColor = data.highlightColor;\n  const shadowColor = data.shadowColor;\n  const accentColor = data.accentColor;\n  const encoding = data.encoding;\n\n  let pixelX,\n    pixelY,\n    x0,\n    x1,\n    y0,\n    y1,\n    offset,\n    z0,\n    z1,\n    dzdx,\n    dzdy,\n    slope,\n    aspect,\n    accent,\n    scaled,\n    shade,\n    scaledAccentColor,\n    compositeShadeColor,\n    clamp,\n    slopeScaleBase,\n    scaledSlope,\n    cosIncidence;\n\n  function calculateElevation(pixel, encoding = 'mapbox') {\n    // The method used to extract elevations from the DEM.\n    //\n    // The supported methods are the Mapbox format\n    // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n    // and the Terrarium format\n    // (red * 256 + green + blue / 256) - 32768\n    //\n    if (encoding === 'mapbox') {\n      return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n    }\n    if (encoding === 'terrarium') {\n      return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n    }\n  }\n  for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n    y0 = pixelY === 0 ? 0 : pixelY - 1;\n    y1 = pixelY === maxY ? maxY : pixelY + 1;\n    for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n      x0 = pixelX === 0 ? 0 : pixelX - 1;\n      x1 = pixelX === maxX ? maxX : pixelX + 1;\n\n      // determine elevation for (x0, pixelY)\n      offset = (pixelY * width + x0) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (x1, pixelY)\n      offset = (pixelY * width + x1) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdx = (z1 - z0) / dp;\n\n      // determine elevation for (pixelX, y0)\n      offset = (y0 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (pixelX, y1)\n      offset = (y1 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdy = (z1 - z0) / dp;\n\n      aspect = Math.atan2(dzdy, -dzdx);\n      if (aspect < 0) {\n        aspect = halfPi - aspect;\n      } else if (aspect > halfPi) {\n        aspect = twoPi - aspect + halfPi;\n      } else {\n        aspect = halfPi - aspect;\n      }\n\n      // Bootstrap slope and corresponding incident values\n      slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n      cosIncidence =\n        sinSunEl * Math.cos(slope) +\n        cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n      accent = Math.cos(slope);\n      // 255 for Hex colors\n      scaled = 255 * cosIncidence;\n\n      /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n\n      // Forces given value to stay between two given extremes\n      clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n\n      // Intensity basis for hillshade opacity\n      slopeScaleBase = 1.875 - data.opacity * 1.75;\n      // Intensity interpolation so that higher intensity values create more opaque hillshading\n      scaledSlope =\n        data.opacity !== 0.5\n          ? halfPi *\n            ((Math.pow(slopeScaleBase, slope) - 1) /\n              (Math.pow(slopeScaleBase, halfPi) - 1))\n          : slope;\n\n      // Accent hillshade color with given accentColor to emphasize rougher terrain\n      scaledAccentColor = {\n        r: (1 - accent) * accentColor.r * clamp * 255,\n        g: (1 - accent) * accentColor.g * clamp * 255,\n        b: (1 - accent) * accentColor.b * clamp * 255,\n        a: (1 - accent) * accentColor.a * clamp * 255,\n      };\n\n      // Allows highlight vs shadow discrimination\n      shade = Math.abs((((aspect + sunAz) / Math.PI + 0.5) % 2) - 1);\n      // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n      compositeShadeColor = {\n        r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n        g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n        b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n        a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled,\n      };\n\n      // Fill in result color value\n      offset = (pixelY * width + pixelX) * 4;\n      shadeData[offset] =\n        scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n      shadeData[offset + 1] =\n        scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n      shadeData[offset + 2] =\n        scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n      // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n      shadeData[offset + 3] =\n        elevationData[offset + 3] *\n        data.opacity *\n        clamp *\n        Math.sin(scaledSlope);\n    }\n  }\n\n  return new ImageData(shadeData, width, height);\n}\n","/*\nol-mapbox-style - Use Mapbox/MapLibre Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport {derefLayers} from '@maplibre/maplibre-gl-style-spec';\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport {getCenter, getTopLeft} from 'ol/extent.js';\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport MVT from 'ol/format/MVT.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy.js';\nimport {METERS_PER_UNIT} from 'ol/proj/Units.js';\nimport {\n  equivalent,\n  fromLonLat,\n  get as getProjection,\n  getPointResolution,\n  getUserProjection,\n} from 'ol/proj.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileSource, {defaultLoadFunction} from 'ol/source/VectorTile.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport {createXYZ} from 'ol/tilegrid.js';\nimport {\n  normalizeSourceUrl,\n  normalizeSpriteUrl,\n  normalizeStyleUrl,\n} from './mapbox.js';\nimport {hillshade} from './shaders.js';\nimport {\n  _colorWithOpacity,\n  getValue,\n  styleFunctionArgs,\n  stylefunction as applyStylefunction,\n} from './stylefunction.js';\nimport {getFonts} from './text.js';\nimport {\n  defaultResolutions,\n  fetchResource,\n  getFilterCache,\n  getFunctionCache,\n  getGlStyle,\n  getResolutionForZoom,\n  getStyleFunctionKey,\n  getTileJson,\n  getZoomForResolution,\n} from './util.js';\n\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, import(\"./util.js\").ResourceType): (Request|string|Promise<Request|string>|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` or a url `string`, or a promise tehereof.\n * Without a return value the original request will not be modified.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox/MapLibre style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {string} [webfonts] Template for resolving webfonts. Can be used to specify where to fetch\n * web fonts when no `ol:webfonts` metadata is set in the style object. See `getFonts()` and the\n * \"Font handling\" section in `README.md` for details.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n  return projection.getExtent()\n    ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22,\n      }).getResolutions()\n    : defaultResolutions;\n}\n\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n  if (!options.accessToken) {\n    options = Object.assign({}, options);\n    const searchParams = new URL(styleUrl).searchParams;\n    // The last search parameter is the access token\n    searchParams.forEach((value, key) => {\n      options.accessToken = value;\n      options.accessTokenParam = key;\n    });\n  }\n  return options;\n}\n\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox/MapLibre Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox/MapLibre Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nexport function applyStyle(\n  layer,\n  glStyle,\n  sourceOrLayersOrOptions = '',\n  optionsOrPath = {},\n  resolutions = undefined,\n) {\n  let styleUrl, sourceId;\n  /** @type {Options&ApplyStyleOptions} */\n  let options;\n  let sourceOrLayers;\n  let updateSource = true;\n  if (\n    typeof sourceOrLayersOrOptions !== 'string' &&\n    !Array.isArray(sourceOrLayersOrOptions)\n  ) {\n    options = sourceOrLayersOrOptions;\n    sourceOrLayers = options.source || options.layers;\n    optionsOrPath = options;\n  } else {\n    sourceOrLayers = sourceOrLayersOrOptions;\n  }\n  if (typeof optionsOrPath === 'string') {\n    styleUrl = optionsOrPath;\n    options = {};\n  } else {\n    styleUrl = optionsOrPath.styleUrl;\n    options = optionsOrPath;\n  }\n  if (options.updateSource === false) {\n    updateSource = false;\n  }\n  if (!resolutions) {\n    resolutions = options.resolutions;\n  }\n  if (\n    !styleUrl &&\n    typeof glStyle === 'string' &&\n    !glStyle.trim().startsWith('{')\n  ) {\n    styleUrl = glStyle;\n  }\n  if (styleUrl) {\n    styleUrl = styleUrl.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(styleUrl, options.accessToken);\n    options = completeOptions(styleUrl, options);\n  }\n\n  return new Promise(function (resolve, reject) {\n    // TODO: figure out where best place to check source type is\n    // Note that the source arg is an array of gl layer ids and each must be\n    // dereferenced to get source type to validate\n    getGlStyle(glStyle, options)\n      .then(function (glStyle) {\n        if (glStyle.version != 8) {\n          return reject(new Error('glStyle version 8 required.'));\n        }\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          return reject(\n            new Error('Can only apply to VectorLayer or VectorTileLayer'),\n          );\n        }\n\n        const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n        if (!sourceOrLayers) {\n          sourceId = Object.keys(glStyle.sources).find(function (key) {\n            return glStyle.sources[key].type === type;\n          });\n          sourceOrLayers = sourceId;\n        } else if (Array.isArray(sourceOrLayers)) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.id === sourceOrLayers[0];\n          }).source;\n        } else {\n          sourceId = sourceOrLayers;\n        }\n        if (!sourceId) {\n          return reject(new Error(`No ${type} source found in the glStyle.`));\n        }\n\n        function assignSource() {\n          if (!updateSource) {\n            return Promise.resolve();\n          }\n          if (layer instanceof VectorTileLayer) {\n            return setupVectorSource(\n              glStyle.sources[sourceId],\n              styleUrl,\n              options,\n            ).then(function (source) {\n              const targetSource = layer.getSource();\n              if (!targetSource) {\n                layer.setSource(source);\n              } else if (source !== targetSource) {\n                targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                if (\n                  typeof targetSource.setUrls === 'function' &&\n                  typeof source.getUrls === 'function'\n                ) {\n                  // to get correct keys for tile cache and queue\n                  targetSource.setUrls(source.getUrls());\n                }\n                //@ts-ignore\n                if (!targetSource.format_) {\n                  //@ts-ignore\n                  targetSource.format_ = source.format_;\n                }\n                if (!targetSource.getAttributions()) {\n                  targetSource.setAttributions(source.getAttributions());\n                }\n                if (\n                  targetSource.getTileLoadFunction() === defaultLoadFunction\n                ) {\n                  targetSource.setTileLoadFunction(\n                    source.getTileLoadFunction(),\n                  );\n                }\n                if (\n                  equivalent(\n                    targetSource.getProjection(),\n                    source.getProjection(),\n                  )\n                ) {\n                  //@ts-ignore\n                  targetSource.tileGrid = source.getTileGrid();\n                }\n              }\n              const tileGrid = layer.getSource().getTileGrid();\n              if (\n                !isFinite(layer.getMaxResolution()) &&\n                !isFinite(layer.getMinZoom()) &&\n                tileGrid.getMinZoom() > 0\n              ) {\n                layer.setMaxResolution(\n                  getResolutionForZoom(\n                    Math.max(0, tileGrid.getMinZoom() - 1e-12),\n                    tileGrid.getResolutions(),\n                  ),\n                );\n              }\n            });\n          }\n          const glSource = glStyle.sources[sourceId];\n          let source = layer.getSource();\n          if (!source || source.get('mapbox-source') !== glSource) {\n            source = setupGeoJSONSource(glSource, styleUrl, options);\n          }\n          const targetSource = /** @type {VectorSource} */ (layer.getSource());\n          if (!targetSource) {\n            layer.setSource(source);\n          } else if (source !== targetSource) {\n            if (!targetSource.getAttributions()) {\n              targetSource.setAttributions(source.getAttributions());\n            }\n            //@ts-ignore\n            if (!targetSource.format_) {\n              //@ts-ignore\n              targetSource.format_ = source.getFormat();\n            }\n            //@ts-ignore\n            targetSource.url_ = source.getUrl();\n          }\n          return Promise.resolve();\n        }\n\n        let spriteScale, spriteData, spriteImageUrl, style;\n        function onChange() {\n          if (!style && (!glStyle.sprite || spriteData)) {\n            if (options.projection && !resolutions) {\n              const projection = getProjection(options.projection);\n              const units = projection.getUnits();\n              if (units !== 'm') {\n                resolutions = defaultResolutions.map(\n                  (resolution) => resolution / METERS_PER_UNIT[units],\n                );\n              }\n            }\n            style = applyStylefunction(\n              layer,\n              glStyle,\n              sourceOrLayers,\n              resolutions,\n              spriteData,\n              spriteImageUrl,\n              (fonts, templateUrl = options.webfonts) =>\n                getFonts(fonts, templateUrl),\n              options.getImage,\n            );\n            if (!layer.getStyle()) {\n              reject(new Error(`Nothing to show for source [${sourceId}]`));\n            } else {\n              assignSource().then(resolve).catch(reject);\n            }\n          } else if (style) {\n            layer.setStyle(style);\n            assignSource().then(resolve).catch(reject);\n          } else {\n            reject(new Error('Something went wrong trying to apply style.'));\n          }\n        }\n\n        if (glStyle.sprite) {\n          const sprite = new URL(\n            normalizeSpriteUrl(\n              glStyle.sprite,\n              options.accessToken,\n              styleUrl || location.href,\n            ),\n          );\n          spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n          const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n          let spriteUrl =\n            sprite.origin +\n            sprite.pathname +\n            sizeFactor +\n            '.json' +\n            sprite.search;\n\n          new Promise(function (resolve, reject) {\n            fetchResource('Sprite', spriteUrl, options)\n              .then(resolve)\n              .catch(function (error) {\n                spriteUrl =\n                  sprite.origin + sprite.pathname + '.json' + sprite.search;\n                fetchResource('Sprite', spriteUrl, options)\n                  .then(resolve)\n                  .catch(reject);\n              });\n          })\n            .then(function (spritesJson) {\n              if (spritesJson === undefined) {\n                reject(new Error('No sprites found.'));\n              }\n              spriteData = spritesJson;\n              spriteImageUrl =\n                sprite.origin +\n                sprite.pathname +\n                sizeFactor +\n                '.png' +\n                sprite.search;\n              if (options.transformRequest) {\n                const transformed =\n                  options.transformRequest(spriteImageUrl, 'SpriteImage') ||\n                  spriteImageUrl;\n                if (\n                  transformed instanceof Request ||\n                  transformed instanceof Promise\n                ) {\n                  spriteImageUrl = transformed;\n                }\n              }\n              onChange();\n            })\n            .catch(function (err) {\n              reject(\n                new Error(\n                  `Sprites cannot be loaded: ${spriteUrl}: ${err.message}`,\n                ),\n              );\n            });\n        } else {\n          onChange();\n        }\n      })\n      .catch(reject);\n  });\n}\n\nconst emptyObj = {};\n\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n  glStyle.layers.some(function (layer) {\n    if (layer.type === 'background') {\n      if (mapOrLayer instanceof Layer) {\n        mapOrLayer.setBackground(function (resolution) {\n          return getBackgroundColor(layer, resolution, options, {});\n        });\n        return true;\n      }\n      if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n        mapOrLayer\n          .getLayers()\n          .insertAt(0, setupBackgroundLayer(layer, options, {}));\n        return true;\n      }\n    }\n  });\n}\n\n/**\n * Applies properties of the Mapbox/MapLibre Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox/MapLibre Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nexport function applyBackground(mapOrLayer, glStyle, options = {}) {\n  return getGlStyle(glStyle, options).then(function (glStyle) {\n    setFirstBackground(mapOrLayer, glStyle, options);\n  });\n}\n\nfunction getSourceIdByRef(layers, ref) {\n  let sourceId;\n  layers.some(function (layer) {\n    if (layer.id == ref) {\n      sourceId = layer.source;\n      return true;\n    }\n  });\n  return sourceId;\n}\n\nfunction extentFromTileJSON(tileJSON, projection) {\n  const bounds = tileJSON.bounds;\n  if (bounds) {\n    const ll = fromLonLat([bounds[0], bounds[1]], projection);\n    const tr = fromLonLat([bounds[2], bounds[3]], projection);\n    return [ll[0], ll[1], tr[0], tr[1]];\n  }\n  return getProjection(projection).getExtent();\n}\n\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n  const tileJSONSource = new TileJSON({\n    tileJSON: tileJSON,\n    tileSize: glSource.tileSize || tileJSON.tileSize || 512,\n  });\n  const tileJSONDoc = tileJSONSource.getTileJSON();\n  const tileGrid = tileJSONSource.getTileGrid();\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const extent = extentFromTileJSON(tileJSONDoc, projection);\n  const projectionExtent = projection.getExtent();\n  const minZoom = tileJSONDoc.minzoom || 0;\n  const maxZoom = tileJSONDoc.maxzoom || 22;\n  /** @type {import(\"ol/source/VectorTile.js\").Options<import(\"ol/render/Feature.js\").default>} */\n  const sourceOptions = {\n    attributions: tileJSONSource.getAttributions(),\n    projection: projection,\n    tileGrid: new TileGrid({\n      origin: projectionExtent\n        ? getTopLeft(projectionExtent)\n        : tileGrid.getOrigin(0),\n      extent: extent || tileGrid.getExtent(),\n      minZoom: minZoom,\n      resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(\n        0,\n        maxZoom + 1,\n      ),\n      tileSize: tileGrid.getTileSize(0),\n    }),\n  };\n  if (Array.isArray(tileJSONDoc.tiles)) {\n    sourceOptions.urls = tileJSONDoc.tiles;\n  } else {\n    sourceOptions.url = tileJSONDoc.tiles;\n  }\n  return sourceOptions;\n}\n\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n  const background = {\n    id: glLayer.id,\n    type: glLayer.type,\n  };\n  const layout = glLayer.layout || {};\n  const paint = glLayer.paint || {};\n  background['paint'] = paint;\n  const zoom = getZoomForResolution(\n    resolution,\n    options.resolutions || defaultResolutions,\n  );\n  let opacity;\n  const bg = getValue(\n    background,\n    'paint',\n    'background-color',\n    zoom,\n    emptyObj,\n    functionCache,\n  );\n  if (paint['background-opacity'] !== undefined) {\n    opacity = getValue(\n      background,\n      'paint',\n      'background-opacity',\n      zoom,\n      emptyObj,\n      functionCache,\n    );\n  }\n  return layout.visibility == 'none'\n    ? undefined\n    : _colorWithOpacity(bg, opacity);\n}\n\n/**\n * @param {Object} glLayer Mapbox/MapLibre Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n  const div = document.createElement('div');\n  div.className = 'ol-mapbox-style-background';\n  div.style.position = 'absolute';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  return new Layer({\n    source: new Source({}),\n    render(frameState) {\n      const color = getBackgroundColor(\n        glLayer,\n        frameState.viewState.resolution,\n        options,\n        functionCache,\n      );\n      div.style.backgroundColor = color;\n      return div;\n    },\n  });\n}\n\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox/MapLibre Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nexport function setupVectorSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function ({tileJson, tileLoadFunction}) {\n        const sourceOptions = sourceOptionsFromTileJSON(\n          glSource,\n          tileJson,\n          options,\n        );\n        sourceOptions.tileLoadFunction = tileLoadFunction;\n        sourceOptions.format = new MVT();\n        resolve(new VectorTileSource(sourceOptions));\n      })\n      .catch(reject);\n  });\n}\n\nfunction setupVectorLayer(glSource, styleUrl, options) {\n  const layer = new VectorTileLayer({\n    declutter: true,\n    visible: false,\n  });\n  setupVectorSource(glSource, styleUrl, options)\n    .then(function (source) {\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\nfunction getBboxTemplate(projection) {\n  const projCode = projection ? projection.getCode() : 'EPSG:3857';\n  return `{bbox-${projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')}}`;\n}\n\nfunction setupRasterSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function ({tileJson, tileLoadFunction}) {\n        const source = new TileJSON({\n          interpolate:\n            options.interpolate === undefined ? true : options.interpolate,\n          transition: 0,\n          crossOrigin: 'anonymous',\n          tileJSON: tileJson,\n        });\n        //@ts-ignore\n        source.tileGrid = sourceOptionsFromTileJSON(\n          glSource,\n          tileJson,\n          options,\n        ).tileGrid;\n        if (options.projection) {\n          //@ts-ignore\n          source.projection = getProjection(options.projection);\n        }\n        const getTileUrl = source.getTileUrlFunction();\n        if (tileLoadFunction) {\n          source.setTileLoadFunction(tileLoadFunction);\n        }\n        source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n          const bboxTemplate = getBboxTemplate(projection);\n          let src = getTileUrl(tileCoord, pixelRatio, projection);\n          if (src.indexOf(bboxTemplate) != -1) {\n            const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n            src = src.replace(bboxTemplate, bbox.toString());\n          }\n          return src;\n        });\n        source.set('mapbox-source', glSource);\n        resolve(source);\n      })\n      .catch(function (error) {\n        reject(error);\n      });\n  });\n}\n\nfunction setupRasterLayer(glSource, styleUrl, options) {\n  const layer = new TileLayer();\n  setupRasterSource(glSource, styleUrl, options)\n    .then(function (source) {\n      layer.setSource(source);\n    })\n    .catch(function () {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox/MapLibre Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n  const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n  /** @type {ImageLayer<Raster>} */\n  const layer = new ImageLayer({\n    source: new Raster({\n      operationType: 'image',\n      operation: hillshade,\n      sources: [tileLayer],\n    }),\n  });\n  return layer;\n}\n\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n  const geoJsonFormat = options.projection\n    ? new GeoJSON({dataProjection: options.projection})\n    : new GeoJSON();\n  const data = glSource.data;\n  const sourceOptions = {};\n  if (typeof data == 'string') {\n    const [geoJsonUrl] = normalizeSourceUrl(\n      data,\n      options.accessToken,\n      options.accessTokenParam || 'access_token',\n      styleUrl || location.href,\n    );\n    if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n      const extentUrl = (extent, resolution, projection) => {\n        const bboxTemplate = getBboxTemplate(projection);\n        return geoJsonUrl.replace(bboxTemplate, `${extent.join(',')}`);\n      };\n      const source = new VectorSource({\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n        loader: (extent, resolution, projection, success, failure) => {\n          const url =\n            typeof extentUrl === 'function'\n              ? extentUrl(extent, resolution, projection)\n              : extentUrl;\n          fetchResource('GeoJSON', url, options)\n            .then((json) => {\n              const features = /** @type {*} */ (\n                source\n                  .getFormat()\n                  .readFeatures(json, {featureProjection: projection})\n              );\n              source.addFeatures(features);\n              success(features);\n            })\n            .catch((response) => {\n              source.removeLoadedExtent(extent);\n              failure();\n            });\n        },\n        strategy: bboxStrategy,\n      });\n      source.set('mapbox-source', glSource);\n      return source;\n    }\n    const source = new VectorSource({\n      attributions: glSource.attribution,\n      format: geoJsonFormat,\n      url: geoJsonUrl,\n      loader: (extent, resolution, projection, success, failure) => {\n        fetchResource('GeoJSON', geoJsonUrl, options)\n          .then((json) => {\n            const features = /** @type {*} */ (\n              source\n                .getFormat()\n                .readFeatures(json, {featureProjection: projection})\n            );\n            source.addFeatures(features);\n            success(features);\n          })\n          .catch((response) => {\n            source.removeLoadedExtent(extent);\n            failure();\n          });\n      },\n    });\n    return source;\n  }\n  sourceOptions.features = geoJsonFormat.readFeatures(data, {\n    featureProjection: getUserProjection() || 'EPSG:3857',\n  });\n\n  const source = new VectorSource(\n    Object.assign(\n      {\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n      },\n      sourceOptions,\n    ),\n  );\n  source.set('mapbox-source', glSource);\n  return /** @type {VectorSource} */ (source);\n}\n\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n  return new VectorLayer({\n    declutter: true,\n    source: setupGeoJSONSource(glSource, styleUrl, options),\n    visible: false,\n  });\n}\n\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n  let zoom = null;\n  return function (event) {\n    if (\n      glLayer.paint &&\n      'raster-opacity' in glLayer.paint &&\n      event.frameState.viewState.zoom !== zoom\n    ) {\n      zoom = event.frameState.viewState.zoom;\n      delete functionCache[glLayer.id];\n      updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n    }\n  };\n}\n\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n  const opacity = getValue(\n    glLayer,\n    'paint',\n    'raster-opacity',\n    zoom,\n    emptyObj,\n    functionCache,\n  );\n  layer.setOpacity(opacity);\n}\n\nfunction manageVisibility(layer, mapOrGroup) {\n  function onChange() {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    if (!glStyle) {\n      return;\n    }\n    const mapboxLayers = derefLayers(glStyle.layers);\n    const layerMapboxLayerids = layer.get('mapbox-layers');\n    const visible = mapboxLayers\n      .filter(function (mapboxLayer) {\n        return layerMapboxLayerids.includes(mapboxLayer.id);\n      })\n      .some(function (mapboxLayer) {\n        return (\n          !mapboxLayer.layout ||\n          !mapboxLayer.layout.visibility ||\n          mapboxLayer.layout.visibility === 'visible'\n        );\n      });\n    if (layer.get('visible') !== visible) {\n      layer.setVisible(visible);\n    }\n  }\n  layer.on('change', onChange);\n  onChange();\n}\n\nexport function setupLayer(glStyle, styleUrl, glLayer, options) {\n  const functionCache = getFunctionCache(glStyle);\n  const glLayers = glStyle.layers;\n  const type = glLayer.type;\n\n  const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n  const glSource = glStyle.sources[id];\n  let layer;\n  if (type == 'background') {\n    layer = setupBackgroundLayer(glLayer, options, functionCache);\n  } else if (glSource.type == 'vector') {\n    layer = setupVectorLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster') {\n    layer = setupRasterLayer(glSource, styleUrl, options);\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true,\n    );\n    layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n  } else if (glSource.type == 'geojson') {\n    layer = setupGeoJSONLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n    const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n    layer = hillshadeLayer;\n    hillshadeLayer.getSource().on('beforeoperations', function (event) {\n      const data = event.data;\n      data.resolution = getPointResolution(\n        options.projection || 'EPSG:3857',\n        event.resolution,\n        getCenter(event.extent),\n        'm',\n      );\n      const zoom = getZoomForResolution(\n        event.resolution,\n        options.resolutions || defaultResolutions,\n      );\n      data.encoding = glSource.encoding;\n      data.vert =\n        5 *\n        getValue(\n          glLayer,\n          'paint',\n          'hillshade-exaggeration',\n          zoom,\n          emptyObj,\n          functionCache,\n        );\n      data.sunAz = getValue(\n        glLayer,\n        'paint',\n        'hillshade-illumination-direction',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n      data.sunEl = 35;\n      data.opacity = 0.3;\n      data.highlightColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-highlight-color',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n      data.shadowColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-shadow-color',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n      data.accentColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-accent-color',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n    });\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true,\n    );\n  }\n  const glSourceId = id;\n  if (layer) {\n    layer.set('mapbox-source', glSourceId);\n  }\n  return layer;\n}\n\n/**\n * @param {*} glStyle Mapbox/MapLibre Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n  const promises = [];\n\n  let view = null;\n  if (mapOrGroup instanceof Map) {\n    view = mapOrGroup.getView();\n    if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n      const projection = options.projection\n        ? getProjection(options.projection)\n        : view.getProjection();\n      view = new View(\n        Object.assign(view.getProperties(), {\n          maxResolution:\n            defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n          projection: options.projection || view.getProjection(),\n        }),\n      );\n      mapOrGroup.setView(view);\n    }\n\n    if ('center' in glStyle && !view.getCenter()) {\n      view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n    }\n    if ('zoom' in glStyle && view.getZoom() === undefined) {\n      view.setResolution(\n        defaultResolutions[0] /\n          METERS_PER_UNIT[view.getProjection().getUnits()] /\n          Math.pow(2, glStyle.zoom),\n      );\n    }\n    if (!view.getCenter() || view.getZoom() === undefined) {\n      view.fit(view.getProjection().getExtent(), {\n        nearest: true,\n        size: mapOrGroup.getSize(),\n      });\n    }\n  }\n  mapOrGroup.set('mapbox-style', glStyle);\n  mapOrGroup.set('mapbox-metadata', {styleUrl, options});\n\n  const glLayers = glStyle.layers;\n  let layerIds = [];\n\n  let layer, glSourceId, id;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    const type = glLayer.type;\n    if (type == 'heatmap') {\n      //FIXME Unsupported layer type\n      // eslint-disable-next-line no-console\n      console.debug(`layers[${i}].type \"${type}\" not supported`);\n      continue;\n    } else {\n      id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n      // this technique assumes gl layers will be in a particular order\n      if (!id || id != glSourceId) {\n        if (layerIds.length) {\n          promises.push(\n            finalizeLayer(\n              layer,\n              layerIds,\n              glStyle,\n              styleUrl,\n              mapOrGroup,\n              options,\n            ),\n          );\n          layerIds = [];\n        }\n\n        layer = setupLayer(glStyle, styleUrl, glLayer, options);\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          layerIds = [];\n        }\n        glSourceId = layer.get('mapbox-source');\n      }\n      layerIds.push(glLayer.id);\n    }\n  }\n  promises.push(\n    finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options),\n  );\n  return Promise.all(promises);\n}\n\n/**\n * Loads and applies a Mapbox/MapLibre Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox/MapLibre Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox/MapLibre Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox/MapLibre Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox/MapLibre Style document). When passed\n * as style url, layers will be added to the map when the Mapbox/MapLibre Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nexport function apply(mapOrGroupOrElement, style, options = {}) {\n  let promise;\n  /** @type {Map|LayerGroup} */\n  let mapOrGroup;\n  if (\n    typeof mapOrGroupOrElement === 'string' ||\n    mapOrGroupOrElement instanceof HTMLElement\n  ) {\n    mapOrGroup = new Map({\n      target: mapOrGroupOrElement,\n    });\n  } else {\n    mapOrGroup = mapOrGroupOrElement;\n  }\n\n  if (typeof style === 'string') {\n    const styleUrl = style.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(style, options.accessToken);\n    options = completeOptions(styleUrl, options);\n\n    promise = new Promise(function (resolve, reject) {\n      getGlStyle(style, options)\n        .then(function (glStyle) {\n          processStyle(glStyle, mapOrGroup, styleUrl, options)\n            .then(function () {\n              resolve(mapOrGroup);\n            })\n            .catch(reject);\n        })\n        .catch(function (err) {\n          reject(new Error(`Could not load ${style}: ${err.message}`));\n        });\n    });\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      processStyle(\n        style,\n        mapOrGroup,\n        !options.styleUrl || options.styleUrl.startsWith('data:')\n          ? location.href\n          : normalizeStyleUrl(options.styleUrl, options.accessToken),\n        options,\n      )\n        .then(function () {\n          resolve(mapOrGroup);\n        })\n        .catch(reject);\n    });\n  }\n\n  return promise;\n}\n\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nexport function finalizeLayer(\n  layer,\n  layerIds,\n  glStyle,\n  styleUrl,\n  mapOrGroup,\n  options = {},\n) {\n  let minZoom = 24;\n  let maxZoom = 0;\n  const glLayers = glStyle.layers;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    if (layerIds.indexOf(glLayer.id) !== -1) {\n      minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n      maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    const setStyle = function () {\n      const source = layer.getSource();\n      if (!source || source.getState() === 'error') {\n        reject(\n          new Error(\n            'Error accessing data for source ' + layer.get('mapbox-source'),\n          ),\n        );\n        return;\n      }\n      if ('getTileGrid' in source) {\n        const tileGrid =\n          /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */ (\n            source\n          ).getTileGrid();\n        if (tileGrid) {\n          const sourceMinZoom = tileGrid.getMinZoom();\n          if (minZoom > 0 || sourceMinZoom > 0) {\n            layer.setMaxResolution(\n              Math.min(\n                getResolutionForZoom(\n                  Math.max(0, minZoom - 1e-12),\n                  defaultResolutions,\n                ),\n                getResolutionForZoom(\n                  Math.max(0, sourceMinZoom - 1e-12),\n                  tileGrid.getResolutions(),\n                ),\n              ),\n            );\n          }\n          if (maxZoom < 24) {\n            layer.setMinResolution(\n              getResolutionForZoom(maxZoom, defaultResolutions),\n            );\n          }\n        }\n      } else {\n        if (minZoom > 0) {\n          layer.setMaxResolution(\n            getResolutionForZoom(\n              Math.max(0, minZoom - 1e-12),\n              defaultResolutions,\n            ),\n          );\n        }\n      }\n      if (\n        source instanceof VectorSource ||\n        source instanceof VectorTileSource\n      ) {\n        applyStyle(\n          /** @type {import(\"ol/layer/Vector\").default|import(\"ol/layer/VectorTile\").default} */ (\n            layer\n          ),\n          glStyle,\n          layerIds,\n          Object.assign({styleUrl: styleUrl}, options),\n        )\n          .then(function () {\n            manageVisibility(layer, mapOrGroup);\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        resolve();\n      }\n    };\n\n    layer.set('mapbox-layers', layerIds);\n    const layers = mapOrGroup.getLayers();\n    if (layers.getArray().indexOf(layer) === -1) {\n      layers.push(layer);\n    }\n\n    if (layer.getSource()) {\n      setStyle();\n    } else {\n      layer.once('change:source', setStyle);\n    }\n  });\n}\n\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nexport function getMapboxLayer(mapOrGroup, layerId) {\n  const style = mapOrGroup.get('mapbox-style');\n  const layerStyle = style.layers.find(function (layer) {\n    return layer.id === layerId;\n  });\n  return layerStyle;\n}\n\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nexport function addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  let spliceIndex;\n  let sourceIndex = -1;\n  if (beforeLayerId !== undefined) {\n    const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n    if (beforeMapboxLayer === undefined) {\n      throw new Error(`Layer with id \"${beforeLayerId}\" not found.`);\n    }\n    spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n  } else {\n    spliceIndex = mapboxLayers.length;\n  }\n  let sourceOffset;\n  if (\n    spliceIndex > 0 &&\n    mapboxLayers[spliceIndex - 1].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex - 1;\n    sourceOffset = -1;\n  } else if (\n    spliceIndex < mapboxLayers.length &&\n    mapboxLayers[spliceIndex].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex;\n    sourceOffset = 0;\n  }\n  if (sourceIndex === -1) {\n    const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n    const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n    if (beforeLayerId) {\n      const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n      const beforeLayerIndex = mapOrGroup\n        .getLayers()\n        .getArray()\n        .indexOf(beforeLayer);\n      mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n    }\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    return finalizeLayer(\n      layer,\n      [mapboxLayer.id],\n      glStyle,\n      styleUrl,\n      mapOrGroup,\n      options,\n    );\n  }\n\n  if (mapboxLayers.some((layer) => layer.id === mapboxLayer.id)) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" already exists.`);\n  }\n  const sourceLayerId = mapboxLayers[sourceIndex].id;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, sourceLayerId),\n      )\n    ];\n  mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n      sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n  }\n  return Promise.resolve();\n}\n\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nexport function updateMapboxLayer(mapOrGroup, mapboxLayer) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  const index = mapboxLayers.findIndex(function (layer) {\n    return layer.id === mapboxLayer.id;\n  });\n  if (index === -1) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" not found.`);\n  }\n  const oldLayer = mapboxLayers[index];\n  if (oldLayer.source !== mapboxLayer.source) {\n    throw new Error(\n      'Updated layer and previous version must use the same source.',\n    );\n  }\n  delete getFunctionCache(glStyle)[mapboxLayer.id];\n  delete getFilterCache(glStyle)[mapboxLayer.id];\n  mapboxLayers[index] = mapboxLayer;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, mapboxLayer.id),\n      )\n    ];\n  if (args) {\n    applyStylefunction.apply(undefined, args);\n  } else {\n    getLayer(mapOrGroup, mapboxLayer.id).changed();\n  }\n}\n\n/**\n * Updates a Mapbox source object in the style. The according OpenLayers source will be replaced\n * and the map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string} id Key of the source in the `sources` object literal.\n * @param {Object} mapboxSource Mapbox source object.\n * @return {Promise<Source>} Promise that resolves when the source has been updated.\n */\nexport function updateMapboxSource(mapOrGroup, id, mapboxSource) {\n  const currentSource = getSource(mapOrGroup, id);\n  const layers = /** @type {Array<VectorLayer|TileLayer|VectorTileLayer>} */ (\n    mapOrGroup\n      .getLayers()\n      .getArray()\n      .filter(function (layer) {\n        return (\n          (layer instanceof VectorLayer ||\n            layer instanceof TileLayer ||\n            layer instanceof VectorTileLayer) &&\n          layer.getSource() === currentSource\n        );\n      })\n  );\n  const metadata = mapOrGroup.get('mapbox-metadata');\n  let newSourcePromise;\n  switch (mapboxSource.type) {\n    case 'vector':\n      newSourcePromise = setupVectorSource(\n        mapboxSource,\n        metadata.styleUrl,\n        metadata.options,\n      );\n      break;\n    case 'geojson':\n      newSourcePromise = Promise.resolve(\n        setupGeoJSONSource(mapboxSource, metadata.styleUrl, metadata.options),\n      );\n      break;\n    case 'raster':\n    case 'raster-dem':\n      newSourcePromise = setupRasterSource(\n        mapboxSource,\n        metadata.styleUrl,\n        metadata.options,\n      );\n      break;\n    default:\n      return Promise.reject(\n        new Error('Unsupported source type ' + mapboxSource.type),\n      );\n  }\n  newSourcePromise.then(function (newSource) {\n    layers.forEach(function (layer) {\n      layer.setSource(newSource);\n    });\n  });\n  return newSourcePromise;\n}\n\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nexport function removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n  const mapboxLayerId =\n    typeof mapboxLayerIdOrLayer === 'string'\n      ? mapboxLayerIdOrLayer\n      : mapboxLayerIdOrLayer.id;\n  const layer = getLayer(mapOrGroup, mapboxLayerId);\n  /** @type {Array<Object>} */\n  const layerMapboxLayers = layer.get('mapbox-layers');\n  if (layerMapboxLayers.length === 1) {\n    throw new Error(\n      'Cannot remove last Mapbox layer from an OpenLayers layer.',\n    );\n  }\n  layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const layers = glStyle.layers;\n  layers.splice(\n    layers.findIndex((layer) => layer.id === mapboxLayerId),\n    1,\n  );\n  const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      sourceOrLayers.splice(\n        sourceOrLayers.findIndex((layer) => layer === mapboxLayerId),\n        1,\n      );\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayerId).changed();\n  }\n}\n\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox/MapLibre Style\n * `layer`. Note that multiple Mapbox/MapLibre Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox/MapLibre Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nexport function getLayer(map, layerId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const mapboxLayers = layers[i].get('mapbox-layers');\n    if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n      return /** @type {Layer} */ (layers[i]);\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the OpenLayers layer instances for the provided Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox/MapLibre Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nexport function getLayers(map, sourceId) {\n  const result = [];\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    if (layers[i].get('mapbox-source') === sourceId) {\n      result.push(/** @type {Layer} */ (layers[i]));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the OpenLayers source instance for the provided Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox/MapLibre Style source id.\n * @return {Source} OpenLayers source instance.\n */\nexport function getSource(map, sourceId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const source = /** @type {Layer} */ (layers[i]).getSource();\n    if (layers[i].get('mapbox-source') === sourceId) {\n      return source;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nexport function setFeatureState(mapOrLayer, feature, state) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState) {\n      if (state) {\n        featureState[feature.id] = state;\n      } else {\n        delete featureState[feature.id];\n      }\n      layers[i].changed();\n    } else {\n      throw new Error(`Map or layer for source \"${feature.source}\" not found.`);\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nexport function getFeatureState(mapOrLayer, feature) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState && featureState[feature.id]) {\n      return featureState[feature.id];\n    }\n  }\n  return undefined;\n}\n","import BaseEvent from 'ol/events/Event.js';\nimport EventType from 'ol/events/EventType.js';\nimport MVT from 'ol/format/MVT.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource from 'ol/source/VectorTile.js';\nimport {applyBackground, applyStyle} from './apply.js';\n\n/** @typedef {import(\"ol/Map.js\").default} Map */\n\n/**\n * Event emitted on configuration or loading error.\n */\nclass ErrorEvent extends BaseEvent {\n  /**\n   * @param {Error} error error object.\n   */\n  constructor(error) {\n    super(EventType.ERROR);\n\n    /**\n     * @type {Error}\n     */\n    this.error = error;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox/MapLibre Style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox/MapLibre style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox/MapLibre style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"ol/layer/Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox/MapLibre Style object will be used. Set to `false` to prevent\n * the Mapbox/MapLibre style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"ol/extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"ol/render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"ol/layer/VectorTile.js\").VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"ol/Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use `map.addLayer()`.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * ```js\n * import {MapboxVectorLayer} from 'ol-mapbox-style';\n * ```\n * A vector tile layer based on a Mapbox/MapLibre style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here',\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * Instances of this class emit an `error` event when an error occurs during style loading:\n *\n *     layer.on('error', function() {\n *       console.error('Error loading style');\n *     }\n *\n * **Note for users of the full build**: The `MapboxVectorLayer` requires the\n * [ol-mapbox-style](https://github.com/openlayers/ol-mapbox-style) library to be loaded as well.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer<import(\"ol/source/VectorTile.js\").default>}\n */\nexport default class MapboxVectorLayer extends VectorTileLayer {\n  /**\n   * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n   * must be provided.\n   */\n  constructor(options) {\n    const declutter = 'declutter' in options ? options.declutter : true;\n    const source = new VectorTileSource({\n      state: 'loading',\n      format: new MVT(),\n    });\n\n    super({\n      source: source,\n      background: options.background === false ? null : options.background,\n      declutter: declutter,\n      className: options.className,\n      opacity: options.opacity,\n      visible: options.visible,\n      zIndex: options.zIndex,\n      minResolution: options.minResolution,\n      maxResolution: options.maxResolution,\n      minZoom: options.minZoom,\n      maxZoom: options.maxZoom,\n      renderOrder: options.renderOrder,\n      renderBuffer: options.renderBuffer,\n      renderMode: options.renderMode,\n      map: options.map,\n      updateWhileAnimating: options.updateWhileAnimating,\n      updateWhileInteracting: options.updateWhileInteracting,\n      preload: options.preload,\n      useInterimTilesOnError: options.useInterimTilesOnError,\n      properties: options.properties,\n    });\n\n    if (options.accessToken) {\n      this.accessToken = options.accessToken;\n    }\n    const url = options.styleUrl;\n    const promises = [\n      applyStyle(this, url, options.layers || options.source, {\n        accessToken: this.accessToken,\n      }),\n    ];\n    if (this.getBackground() === undefined) {\n      promises.push(\n        applyBackground(this, options.styleUrl, {\n          accessToken: this.accessToken,\n        }),\n      );\n    }\n    Promise.all(promises)\n      .then(() => {\n        source.setState('ready');\n      })\n      .catch((error) => {\n        this.dispatchEvent(new ErrorEvent(error));\n        const source = this.getSource();\n        source.setState('error');\n      });\n  }\n}\n"],"names":["v8Spec","$version","$root","version","required","type","values","name","metadata","center","value","centerAltitude","zoom","bearing","default","period","units","pitch","roll","light","sky","projection","terrain","sources","sprite","glyphs","transition","layers","source","source_vector","vector","url","tiles","bounds","length","scheme","xyz","tms","minzoom","maxzoom","attribution","promoteId","volatile","source_raster","raster","tileSize","source_raster_dem","encoding","terrarium","mapbox","custom","redFactor","blueFactor","greenFactor","baseShift","source_geojson","geojson","data","buffer","maximum","minimum","filter","tolerance","cluster","clusterRadius","clusterMaxZoom","clusterMinPoints","clusterProperties","lineMetrics","generateId","source_video","video","urls","coordinates","source_image","image","layer","id","fill","line","symbol","circle","heatmap","hillshade","background","layout","paint","layout_background","visibility","visible","none","layout_fill","expression","interpolated","parameters","layout_circle","layout_heatmap","layout_line","butt","round","square","bevel","miter","requires","layout_symbol","point","auto","never","always","cooperative","map","viewport","width","height","both","tokens","left","right","top","bottom","horizontal","vertical","uppercase","lowercase","layout_raster","layout_hillshade","filter_operator","in","all","any","has","geometry_type","Point","LineString","Polygon","function","stops","base","property","identity","exponential","interval","categorical","colorSpace","rgb","lab","hcl","function_stop","anchor","position","color","intensity","exaggeration","paint_fill","paint_line","paint_circle","paint_heatmap","paint_symbol","overridable","paint_raster","linear","nearest","paint_hillshade","paint_background","duration","delay","constant","refProperties","deref","parent","result","k","forEach","derefLayers","slice","Object","create","i","ref","ExpressionParsingError","Error","constructor","key","message","super","this","Scope","bindings","concat","get","NullType","kind","NumberType","StringType","BooleanType","ColorType","ProjectionDefinitionType","ObjectType","ValueType","CollatorType","FormattedType","PaddingType","ResolvedImageType","VariableAnchorOffsetCollectionType","array","itemType","N","typeToString","valueMemberTypes","checkSubtype","expected","t","memberType","isValidType","provided","allowedTypes","some","isValidNativeType","Array","isArray","verifyType","sample","Xn","Yn","Zn","t0","t1","t2","t3","deg2rad","Math","PI","rad2deg","constrainAngle","angle","rgbToLab","r","g","b","alpha","x","z","y","xyz2lab","rgb2xyz","l","pow","labToRgb","a","isNaN","lab2xyz","xyz2rgb","parseCssColor","input","toLowerCase","trim","namedColorsMatch","namedColors","startsWith","test","step","parseHex","rgbRegExp","rgbMatch","match","_","rp","f1","gp","f2","bp","f3","ap","argFormat","join","valFormat","maxValue","rgba","clamp","parseAlpha","validateNumbers","hslMatch","h","s","hsla","f","n","min","max","hslToRgb","hex","parseInt","padEnd","asPercentage","Number","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","interpolateNumber","from","to","interpolateArray","d","Color","premultiplied","overwriteGetter","parse","Infinity","rgbColor","c","sqrt","atan2","NaN","rgbToHcl","getterKey","lazyValue","defineProperty","toString","interpolate","spaceKey","hue0","chroma0","light0","alphaF","hue1","chroma1","light1","alphaT","hue","chroma","dh","cos","sin","hclToRgb","transparent","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","compare","lhs","rhs","resolvedLocale","resolvedOptions","VERTICAL_ALIGN_OPTIONS","FormattedSection","text","scale","fontStack","textColor","verticalAlign","Formatted","sections","fromString","unformatted","isEmpty","section","factory","Padding","val","JSON","stringify","RuntimeError","toJSON","anchors","Set","VariableAnchorOffsetCollection","anchorValue","offsetValue","fromValues","toValues","output","push","fx","fy","tx","ty","ResolvedImage","options","available","ProjectionDefinition","validateRGBA","isValue","mixed","item","typeOf","valueToString","String","Literal","args","context","error","expectedType","evaluate","eachChild","outputDefined","types$1","string","number","boolean","object","Assertion","floor","parsed","ctx","fn","every","arg","types","Coercion","Boolean","parseColor","pad","coll","num","geometryTypes","EvaluationContext","globals","feature","featureState","formattedSection","_parseColorCache","availableImages","canonical","geometryType","geometry","canonicalID","properties","cached","ParsingContext","registry","isConstantFunc","path","scope","errors","part","_isConstant","expr","index","_parse","annotate","typeAnnotation","op","Expr","actual","ec","e","keys","Let","binding","Var","boundExpression","At","In","needle","haystack","indexOf","IndexOf","fromIndex","rawIndex","Match","inputType","outputType","cases","outputs","otherwise","labels","labelContext","label","abs","MAX_SAFE_INTEGER","out","Case","branches","Slice","beginIndex","endIndex","findStopLessThanOrEqualTo","lastIndex","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labelKey","valueKey","stopCount","getDefaultExportFromCjs","__esModule","prototype","hasOwnProperty","call","unitbezier","hasRequiredUnitbezier","unitbezierExports","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","undefined","x2","d2","solve","requireUnitbezier","Interpolate","operator","interpolation","interpolationFactor","lower","upper","exponentialInterpolation","controlPoints","rest","outputLower","outputUpper","lowerValue","upperValue","difference","progress","Coalesce","parsedArgs","needsAnnotation","requestedImageName","argCount","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","rt","Equals","NotEquals","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","CollatorExpression","NumberFormat","currency","minFractionDigits","maxFractionDigits","style","minimumFractionDigits","maximumFractionDigits","format","FormatExpression","firstArg","nextTokenMayBeObject","font","includes","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","Length","EXTENT","getTileCoordinates","p","lat","log","tilesAtZoom","getLngLatFromTileCoord","coord","mercatorX","mercatorY","atan","exp","updateBBox","bbox","boxWithinBox","bbox1","bbox2","pointOnBoundary","p1","p2","x1","y1","y2","segmentIntersectSegment","vectorP","vectorQ","v1","v2","twoSided","lineIntersectPolygon","polygon","ring","j","pointWithinPolygon","rings","trueIfOnBoundary","inside","pointWithinPolygons","polygons","lineStringWithinPolygon","lineStringWithinPolygons","q1","q2","x3","y3","det1","det2","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","shift","getTilePoints","pointBBox","shifts","tilePoints","points","getTileLines","lineBBox","tileLines","tileLine","Within","geometries","polygonsCoords","features","polygonGeometry","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","TinyQueue","_down","_up","pop","peek","pos","current","halfLength","bestChild","quickselect","arr","defaultCompare","m","sd","swap","tmp","compareAreas","area","calculateSignedArea","sum","len","FE","E2","RAD","CheapRuler","coslat","w2","w","kx","ky","distance","dx","wrap","dy","pointOnLine","minX","minY","minI","minT","minDist","sqDist","deg","MinPointsSize","MinLinePointsSize","compareDistPair","getRangeSize","range","isRangeSafe","threshold","splitRange","isLine","size","size1","getBBox","coords","getPolygonBBox","isValidBBox","bboxToBBoxDistance","ruler","pointToLineDistance","nearestPoint","segmentToSegmentDistance","dist1","dist2","lineToLineDistance","line1","range1","line2","range2","dist","pointsToPointsDistance","points1","points2","pointToPolygonDistance","front","back","lineToPolygonDistance","polygonIntersect","poly1","poly2","polygonToPolygonDistance","polygon1","polygon2","currentMiniDist","ring1","len1","ring2","len2","updateQueue","distQueue","miniDist","rangeA","tempDist","updateQueueTwoSets","pointSet1","pointSet2","pointsToPolygonDistance","distPair","newRangesA","pointSetToPointSetDistance","isLine1","isLine2","rangeB","threshold1","threshold2","sublibe","newRangesB","polygonToGeometryDistance","maxRings","ccw","classifyRings","toSimpleGeometry","lineString","Distance","flat","pointPosition","pointToGeometryDistance","linePositions","lineStringToGeometryDistance","expressions$1","at","case","coalesce","let","literal","var","within","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","signature","signatureContext","params","isExpressionConstant","argParseFailed","signatures","stringifySignature","actualTypes","register","obj","v","varargs","isTypeAnnotation","childrenConstant","child","isFeatureConstant","isGlobalPropertyConstant","isStateConstant","success","isFunction$1","typeof","heatmapDensity","lineProgress","accumulated","ln2","LN2","pi","E","log10","LN10","ln","log2","asin","acos","ceil","binarySearch","isSupportedScript","upcase","toUpperCase","downcase","StyleExpression","propertySpec","spec","_warningHistory","_evaluator","_defaultValue","_enumValues","evaluateWithoutErrorHandling","console","warn","createExpression","parser","enum","formatted","padding","projectionDefinition","resolvedImage","variableAnchorOffsetCollection","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","zoomStops","interpolationType","createPropertyExpression","expressionInput","isFeatureConstantResult","isZoomConstant","supportsZoomExpression","zoomCurve","findZoomCurve","supportsInterpolation","childResult","isExpressionFilter","filterSpec","featureFilter","needGeometry","convertFilter$1","compiled","err","globalProperties","geometryNeeded","filters","convertComparisonOp$1","convertNegation","convertInOp$1","convertHasOp$1","sort","convertLiteral","convertFunction","splice","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","stop","convertTokenString","featureFunctionParameters","featureFunctionStops","functionType","getFunctionType","getInterpolateOperator","appendStopPair","convertPropertyFunction","fixupDegenerateStepCurve","convertZoomAndPropertyFunction","isStep","convertZoomFunction","getFallback","defaultValue","curve","re","exec","v8","fontWeights","thin","hairline","book","regular","normal","plain","roman","standard","medium","bold","heavy","fat","poster","sp","italicRE","fontCache","mb2css","fonts","lineHeight","cssData","haveWeight","haveStyle","weight","fontFamilies","ii","parts","split","maybeWeight","replace","previousPart","fontFamily","mapboxBaseUrl","getMapboxPath","normalizeStyleUrl","token","mapboxPath","decodeURI","URL","location","href","mapboxSubdomains","normalizeSourceUrl","tokenParam","styleUrl","urlObject","searchParams","set","sizeFactor","window","devicePixelRatio","sub","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","getStyleFunctionKey","olLayer","getUid","getFunctionCache","functionCache","getFilterCache","filterCache","degrees","defaultResolutions","resolutions","res","createCanvas","WorkerGlobalScope","self","OffscreenCanvas","canvas","document","createElement","getZoomForResolution","resolution","zoomFactor","getResolutionForZoom","factor","pendingRequests","fetchResource","resourceType","request","transformedRequest","transformRequest","pendingRequest","toPromise","then","Request","headers","fetch","response","ok","json","Promise","reject","catch","getGlStyle","glStyleOrUrl","resolve","accessToken","tilejsonCache","getTileJson","glSource","cacheKey","promise","tileLoadFunction","tile","src","VectorTile","setLoader","extent","arrayBuffer","getFormat","readFeatures","featureProjection","setFeatures","setState","TileState","ERROR","img","getImage","blob","createObjectURL","addEventListener","revokeObjectURL","normalizedSourceUrl","accessTokenParam","tileJson","assign","tileUrl","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imgSize","pixelRatio","imageCanvas","imageContext","getContext","drawImage","imageData","getImageData","globalCompositeOperation","fillStyle","jj","arc","smoothstep","drawSDF","gamma","putImageData","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","measureContext","getMeasureContext","measureText","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","fontFamilyRegEx","stripQuotesRegEx","loadedFontFamilies","hasFontFamily","family","styleSheets","styleSheet","cssRules","rules","cssRule","cssText","processedFontFamilies","MultiPoint","MultiLineString","MultiPolygon","expressionData","rawExpression","compiledExpression","emptyObj","zoomObj","renderFeatureCoordinates","renderFeature","getValue","layoutOrPaint","layerId","functions","isExpr","isFunction","bind","getDeclutterMode","prefix","evaluateFilter","createFilter","renderTransparentEnabled","colorWithOpacity","opacity","templateRegEx","fromTemplate","recordLayer","styleFunctionArgs","stylefunction","sourceOrLayers","spriteData","spriteImageUrl","getFonts","spriteImageSize","spriteImageUnSDFed","arguments","Image","blobUrl","crossOrigin","onload","changed","worker","postMessage","action","event","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","Stroke","Fill","styles","styleFunction","onlyLayer","getProperties","getGeometry","getType","getId","featureBelongsToLayer","stylesLength","layerData","stroke","strokeColor","fillIcon","icon","getFill","getStroke","getText","Style","setZIndex","icon_cache_key","pattern","globalAlpha","createPattern","setColor","setWidth","setLineCap","setLineJoin","setMiterLimit","setLineDash","iconImg","skipLabel","textLineHeight","textSize","maxTextWidth","hasImage","placementAngle","iconImage","styleGeom","imageElement","iconRotationAlignment","geom","getFlatMidpoint","getFlatMidpoints","getExtent","midpoint","RenderFeature","stride","getStride","getFlatCoordinates","maxX","xM","dotProduct","iconSize","iconColor","iconCacheKey","declutterMode","displacement","iconOptions","rotateWithView","Icon","offset","sdf","setGeometry","setRotation","setOpacity","setAnchor","setImage","setText","circleRadius","circleStrokeColor","circleTranslate","circleColor","circleStrokeWidth","cache_key","Circle","radius","fontArray","textField","reduce","acc","chunk","chunkFont","Text","textTransform","wrappedLabel","setFont","setKeepUpright","keepUpright","textAnchor","placement","textAlign","setPlacement","setRepeat","symbolSpacing","setOverflow","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","setRotateWithView","setMaxAngle","setTextAlign","textBaseline","setTextBaseline","textJustify","setJustify","setOffsetX","setOffsetY","setFill","halfTextSize","setStroke","textPadding","getPadding","setStyle","inputs","elevationImage","elevationData","shadeData","Uint8ClampedArray","dp","maxY","pixel","twoPi","halfPi","sunEl","sunAz","cosSunEl","sinSunEl","highlightColor","shadowColor","accentColor","pixelX","pixelY","x0","y0","z0","z1","dzdx","dzdy","slope","aspect","accent","scaled","shade","scaledAccentColor","compositeShadeColor","slopeScaleBase","scaledSlope","cosIncidence","calculateElevation","vert","ImageData","getTileResolutions","createXYZ","maxZoom","getResolutions","completeOptions","applyStyle","sourceOrLayersOrOptions","optionsOrPath","sourceId","updateSource","VectorLayer","VectorTileLayer","find","assignSource","setupVectorSource","targetSource","getSource","setTileUrlFunction","getTileUrlFunction","setUrls","getUrls","format_","getAttributions","setAttributions","getTileLoadFunction","defaultLoadFunction","setTileLoadFunction","equivalent","getProjection","tileGrid","getTileGrid","setSource","isFinite","getMaxResolution","getMinZoom","setMaxResolution","setupGeoJSONSource","url_","getUrl","spriteScale","onChange","getUnits","METERS_PER_UNIT","applyStylefunction","templateUrl","webfonts","fontsKey","fontDescriptions","cssFont","registerFont","fontDescription","checkedFonts","fontUrl","querySelector","markup","rel","head","appendChild","getStyle","normalizeSpriteUrl","spriteUrl","origin","pathname","search","spritesJson","transformed","applyBackground","mapOrLayer","Layer","setBackground","getBackgroundColor","Map","LayerGroup","getLayers","insertAt","setupBackgroundLayer","setFirstBackground","getSourceIdByRef","sourceOptionsFromTileJSON","tileJSON","tileJSONSource","TileJSON","tileJSONDoc","getTileJSON","fromLonLat","tr","extentFromTileJSON","projectionExtent","minZoom","sourceOptions","attributions","TileGrid","getTopLeft","getOrigin","getTileSize","glLayer","bg","_colorWithOpacity","div","className","Source","render","frameState","viewState","backgroundColor","MVT","VectorTileSource","getBboxTemplate","getCode","setupRasterSource","getTileUrl","tileCoord","bboxTemplate","getTileCoordExtent","setupRasterLayer","TileLayer","geoJsonFormat","GeoJSON","dataProjection","geoJsonUrl","extentUrl","VectorSource","loader","failure","addFeatures","removeLoadedExtent","strategy","bboxStrategy","getUserProjection","prerenderRasterLayer","updateRasterLayerProperties","setupLayer","glLayers","declutter","setupVectorLayer","setVisible","on","setupGeoJSONLayer","hillshadeLayer","tileLayer","ImageLayer","Raster","operationType","operation","setupHillshadeLayer","getPointResolution","getCenter","glSourceId","processStyle","mapOrGroup","promises","view","getView","isDef","getRotation","View","maxResolution","setView","setCenter","getZoom","setResolution","fit","getSize","layerIds","finalizeLayer","debug","apply","mapOrGroupOrElement","HTMLElement","target","getState","sourceMinZoom","setMinResolution","layerMapboxLayerids","mapboxLayer","manageVisibility","getArray","once","getMapboxLayer","layerStyle","getLayer","ErrorEvent","BaseEvent","EventType","MapboxVectorLayer","state","zIndex","minResolution","renderOrder","renderBuffer","renderMode","updateWhileAnimating","updateWhileInteracting","preload","useInterimTilesOnError","getBackground","dispatchEvent","beforeLayerId","spliceIndex","sourceOffset","sourceIndex","beforeMapboxLayer","beforeLayer","beforeLayerIndex","sourceLayerId","layerIndex","evaluateStyle","getStyleFunction","record","mapboxLayerIdOrLayer","mapboxLayerId","layerMapboxLayers","findIndex","enabled","clearFunctionCache","currentSource","newSourcePromise","newSource"],"mappings":"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"}