{"version":3,"file":"common.js","mappings":"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","sources":["webpack://ol-mapbox-style/webpack/runtime/chunk loaded","webpack://ol-mapbox-style/./node_modules/ol/Collection.js","webpack://ol-mapbox-style/./node_modules/ol/CollectionEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Disposable.js","webpack://ol-mapbox-style/./node_modules/ol/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/Image.js","webpack://ol-mapbox-style/./node_modules/ol/ImageState.js","webpack://ol-mapbox-style/./node_modules/ol/ImageTile.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Map.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Composite.js","webpack://ol-mapbox-style/./node_modules/ol/MapEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventType.js","webpack://ol-mapbox-style/./node_modules/ol/pointer/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventHandler.js","webpack://ol-mapbox-style/./node_modules/ol/MapEventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapProperty.js","webpack://ol-mapbox-style/./node_modules/ol/control/Control.js","webpack://ol-mapbox-style/./node_modules/ol/control/Attribution.js","webpack://ol-mapbox-style/./node_modules/ol/control/Rotate.js","webpack://ol-mapbox-style/./node_modules/ol/control/Zoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Property.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Interaction.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Pointer.js","webpack://ol-mapbox-style/./node_modules/ol/events/condition.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragRotate.js","webpack://ol-mapbox-style/./node_modules/ol/render/Box.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragBox.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragZoom.js","webpack://ol-mapbox-style/./node_modules/ol/events/Key.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardZoom.js","webpack://ol-mapbox-style/./node_modules/ol/Kinetic.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchRotate.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchZoom.js","webpack://ol-mapbox-style/./node_modules/ol/Map.js","webpack://ol-mapbox-style/./node_modules/ol/control/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/Object.js","webpack://ol-mapbox-style/./node_modules/ol/ObjectEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Observable.js","webpack://ol-mapbox-style/./node_modules/ol/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/structs/PriorityQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileRange.js","webpack://ol-mapbox-style/./node_modules/ol/TileState.js","webpack://ol-mapbox-style/./node_modules/ol/ViewProperty.js","webpack://ol-mapbox-style/./node_modules/ol/centerconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/resolutionconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/View.js","webpack://ol-mapbox-style/./node_modules/ol/ViewHint.js","webpack://ol-mapbox-style/./node_modules/ol/array.js","webpack://ol-mapbox-style/./node_modules/ol/asserts.js","webpack://ol-mapbox-style/./node_modules/color-space/rgb.js","webpack://ol-mapbox-style/./node_modules/color-space/xyz.js","webpack://ol-mapbox-style/./node_modules/color-space/luv.js","webpack://ol-mapbox-style/./node_modules/color-space/lchuv.js","webpack://ol-mapbox-style/./node_modules/color-parse/node_modules/color-name/index.js","webpack://ol-mapbox-style/./node_modules/color-parse/index.js","webpack://ol-mapbox-style/./node_modules/color-space/hsl.js","webpack://ol-mapbox-style/./node_modules/ol/color.js","webpack://ol-mapbox-style/./node_modules/color-rgba/index.js","webpack://ol-mapbox-style/./node_modules/ol/colorlike.js","webpack://ol-mapbox-style/./node_modules/ol/console.js","webpack://ol-mapbox-style/./node_modules/ol/coordinate.js","webpack://ol-mapbox-style/./node_modules/ol/css.js","webpack://ol-mapbox-style/./node_modules/ol/dom.js","webpack://ol-mapbox-style/./node_modules/ol/easing.js","webpack://ol-mapbox-style/./node_modules/ol/events.js","webpack://ol-mapbox-style/./node_modules/ol/events/Event.js","webpack://ol-mapbox-style/./node_modules/ol/events/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/events/Target.js","webpack://ol-mapbox-style/./node_modules/ol/extent.js","webpack://ol-mapbox-style/./node_modules/ol/extent/Relationship.js","webpack://ol-mapbox-style/./node_modules/ol/featureloader.js","webpack://ol-mapbox-style/./node_modules/ol/geom/GeometryCollection.js","webpack://ol-mapbox-style/./node_modules/ol/format/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/format/JSONFeature.js","webpack://ol-mapbox-style/./node_modules/ol/format/GeoJSON.js","webpack://ol-mapbox-style/./node_modules/ol/functions.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Geometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiLineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPolygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Point.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LinearRing.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Polygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/SimpleGeometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/area.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/center.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/closest.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/contains.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/deflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/inflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interiorpoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interpolate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/intersectsextent.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/length.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/reverse.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/orient.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/segments.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/simplify.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/transform.js","webpack://ol-mapbox-style/./node_modules/ol/has.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Base.js","webpack://ol-mapbox-style/./node_modules/ol/expr/expression.js","webpack://ol-mapbox-style/./node_modules/ol/expr/cpu.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/style.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseVector.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Group.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Property.js","webpack://ol-mapbox-style/./node_modules/ol/layer/TileProperty.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/loadingstrategy.js","webpack://ol-mapbox-style/./node_modules/ol/math.js","webpack://ol-mapbox-style/./node_modules/ol/obj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg3857.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg4326.js","webpack://ol-mapbox-style/./node_modules/ol/proj/projections.js","webpack://ol-mapbox-style/./node_modules/ol/proj/transforms.js","webpack://ol-mapbox-style/./node_modules/ol/sphere.js","webpack://ol-mapbox-style/./node_modules/ol/proj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Projection.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Units.js","webpack://ol-mapbox-style/./node_modules/ol/render/Event.js","webpack://ol-mapbox-style/./node_modules/ol/render/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/render/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/render/VectorContext.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Builder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/textpath.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Executor.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Instruction.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/linechunk.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/straightchunk.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ZIndexContext.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Immediate.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/hitdetect.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/DataTile.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/DataTile.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/vector.js","webpack://ol-mapbox-style/./node_modules/ol/reproj.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Triangulation.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/common.js","webpack://ol-mapbox-style/./node_modules/ol/rotationconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/size.js","webpack://ol-mapbox-style/./node_modules/ol/source/Source.js","webpack://ol-mapbox-style/./node_modules/ol/structs/RBush.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/structs/LRUCache.js","webpack://ol-mapbox-style/./node_modules/ol/style/Circle.js","webpack://ol-mapbox-style/./node_modules/ol/style/Fill.js","webpack://ol-mapbox-style/./node_modules/ol/style/Icon.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImage.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImageCache.js","webpack://ol-mapbox-style/./node_modules/ol/style/Image.js","webpack://ol-mapbox-style/./node_modules/ol/style/RegularShape.js","webpack://ol-mapbox-style/./node_modules/ol/style/Stroke.js","webpack://ol-mapbox-style/./node_modules/ol/style/Style.js","webpack://ol-mapbox-style/./node_modules/ol/style/Text.js","webpack://ol-mapbox-style/./node_modules/ol/tilecoord.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/common.js","webpack://ol-mapbox-style/./node_modules/ol/transform.js","webpack://ol-mapbox-style/./node_modules/ol/util.js","webpack://ol-mapbox-style/./node_modules/quickselect/index.js","webpack://ol-mapbox-style/./node_modules/rbush/index.js","webpack://ol-mapbox-style/./node_modules/@maplibre/maplibre-gl-style-spec/dist/index.mjs","webpack://ol-mapbox-style/./node_modules/mapbox-to-css-font/index.js","webpack://ol-mapbox-style/./node_modules/ol/VectorTile.js","webpack://ol-mapbox-style/./src/mapbox.js","webpack://ol-mapbox-style/./src/util.js","webpack://ol-mapbox-style/./src/text.js","webpack://ol-mapbox-style/./src/stylefunction.js","webpack://ol-mapbox-style/./node_modules/pbf/index.js","webpack://ol-mapbox-style/./node_modules/ol/format/MVT.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseImage.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Image.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseTile.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/ImageCanvas.js","webpack://ol-mapbox-style/./node_modules/ol/resolution.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Image.js","webpack://ol-mapbox-style/./node_modules/ol/source/Image.js","webpack://ol-mapbox-style/./node_modules/ol/source/common.js","webpack://ol-mapbox-style/./node_modules/ol/TileCache.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/TileGrid.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid.js","webpack://ol-mapbox-style/./node_modules/ol/source/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/source/Raster.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileEventType.js","webpack://ol-mapbox-style/./node_modules/ol/uri.js","webpack://ol-mapbox-style/./node_modules/ol/tileurlfunction.js","webpack://ol-mapbox-style/./node_modules/ol/source/UrlTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileImage.js","webpack://ol-mapbox-style/./node_modules/ol/net.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileJSON.js","webpack://ol-mapbox-style/./node_modules/ol/VectorRenderTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorTile.js","webpack://ol-mapbox-style/./src/shaders.js","webpack://ol-mapbox-style/./src/apply.js","webpack://ol-mapbox-style/./src/MapboxVectorLayer.js","webpack://ol-mapbox-style/webpack/bootstrap","webpack://ol-mapbox-style/webpack/runtime/define property getters","webpack://ol-mapbox-style/webpack/runtime/hasOwnProperty shorthand","webpack://ol-mapbox-style/webpack/runtime/jsonp chunk loading"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = Array.from(\n      new Set(layers.flatMap((layer) => layer.getAttributions(frameState))),\n    );\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      /**\n       * @type {import(\"./Tile.js\").default}\n       */\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @this {typeof target}\n     */\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(thisArg ?? this, arguments);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @typedef {function(this:(import(\"./source/Vector\").default<FeatureType>|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<FeatureType>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @template {import(\"./Feature.js\").FeatureLike} FeatureType\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source =\n      /** @type {import(\"./source/Vector\").default<FeatureType>} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import('../Feature.js').FeatureLike} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {FeatureToFeatureClass<FeatureType>}\n     */\n    this.featureClass = /** @type {FeatureToFeatureClass<FeatureType>} */ (\n      Feature\n    );\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {FeatureFormat<FeatureType>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   * @override\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   * @override\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {JSONFeature<FeatureType>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @override\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return /** @type {FeatureType|Array<FeatureType>} */ (\n        createRenderFeature(\n          {\n            geometry,\n            id: geoJSONFeature['id'],\n            properties: geoJSONFeature['properties'],\n          },\n          options,\n        )\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return /** @type {FeatureType|Array<FeatureType>} */ (feature);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return /** @type {Array<FeatureType>} */ (features.flat());\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   * @override\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   * @override\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   * @override\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(withNoArgs),\n  [Ops.Time]: createCallExpressionParser(withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        (evt) => {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup, {\n  DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default<import('../../source/VectorTile.js').default<import('../../Feature.js').FeatureLike>>>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   * @param {import(\"./TileLayer.js\").Options} options Options.\n   */\n  constructor(layer, options) {\n    super(layer, options);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedOpacity_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<ZIndexContext>}\n     */\n    this.tileClipContexts_ = null;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @override\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    this.updateExecutorGroup_(\n      tile,\n      frameState.pixelRatio,\n      frameState.viewState.projection,\n    );\n    if (this.tileImageNeedsRender_(tile)) {\n      this.renderTileImage_(tile, frameState);\n    }\n    super.drawTile(tile, frameState, x, y, w, h, gutter, transition);\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @override\n   */\n  getTile(z, x, y, frameState) {\n    const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n      this.getOrCreateTile(z, x, y, frameState)\n    );\n    if (!tile) {\n      return null;\n    }\n\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    return tile;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = !!layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tempExtent,\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        sharedExtent,\n        resolution,\n        pixelRatio,\n      );\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio,\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @param {number} [index] Render order index.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature, index) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutter,\n            index,\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature, i);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer(),\n        true,\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutter = layer.getDeclutter();\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures = declutter\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures,\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice(),\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution,\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile.getSourceTiles().reduce(function (\n        accumulator,\n        sourceTile,\n      ) {\n        return accumulator.concat(sourceTile.getFeatures());\n      }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection),\n          ),\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0,\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation,\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @return {Array<import('../../Feature.js').FeatureLike>} Features.\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.getTileCache();\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const tileGrid = this.getLayer().getSource().tileGrid;\n    const z = tileGrid.getZForResolution(this.renderedResolution);\n    tileCache.forEach((tile) => {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const executorGroups = tile.executorGroups[getUid(this.getLayer())];\n      const declutter = this.getLayer().getDeclutter();\n      if (executorGroups) {\n        for (let j = executorGroups.length - 1; j >= 0; --j) {\n          executorGroups[j].execute(\n            this.context,\n            [this.context.canvas.width, this.context.canvas.height],\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            DECLUTTER,\n            declutter ? frameState.declutter[declutter] : undefined,\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const executorGroups = tiles.reduce((acc, tile, index) => {\n      tile.executorGroups[getUid(this.getLayer())].forEach((executorGroup) =>\n        acc.push({\n          executorGroup,\n          index,\n        }),\n      );\n      return acc;\n    }, []);\n\n    const executorGroupZIndexContexts = executorGroups.map(({executorGroup}) =>\n      executorGroup.getDeferredZIndexContexts(),\n    );\n    const usedZIndices = {};\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroupZindexContext =\n        executorGroups[i].executorGroup.getDeferredZIndexContexts();\n      for (const key in executorGroupZindexContext) {\n        usedZIndices[key] = true;\n      }\n    }\n    const zIndexKeys = Object.keys(usedZIndices).sort(ascending);\n    zIndexKeys.map(Number).forEach((zIndex) => {\n      executorGroupZIndexContexts.forEach((zIndexContexts, i) => {\n        if (!zIndexContexts[zIndex]) {\n          return;\n        }\n        zIndexContexts[zIndex].forEach((zIndexContext) => {\n          const {executorGroup, index} = executorGroups[i];\n          const context = executorGroup.getRenderedContext();\n          const alpha = context.globalAlpha;\n          context.globalAlpha = this.renderedOpacity_;\n          const tileClipContext = this.tileClipContexts_[index];\n          if (tileClipContext) {\n            tileClipContext.draw(context);\n          }\n          zIndexContext.draw(context);\n          if (tileClipContext) {\n            context.restore();\n          }\n          context.globalAlpha = alpha;\n          zIndexContext.clear();\n        });\n        zIndexContexts[zIndex].length = 0;\n      });\n    });\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tempExtent)[0] -\n      tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset,\n      ),\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n    this.renderedOpacity_ =\n      frameState.layerStatesArray[frameState.layerIndex].opacity;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.renderedOpacity_;\n    const declutter = layer.getDeclutter();\n    const replayTypes = declutter\n      ? VECTOR_REPLAYS[renderMode].filter((type) => !DECLUTTER.includes(type))\n      : VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    const tileClipContexts = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes),\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      let clipContext = context;\n      let tileClipContext;\n      if (currentClip) {\n        tileClipContext = new ZIndexContext();\n        clipContext = tileClipContext.getContext();\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                clipContext.save();\n                contextSaved = true;\n              }\n              clipContext.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              clipContext.moveTo(currentClip[0], currentClip[1]);\n              clipContext.lineTo(currentClip[2], currentClip[3]);\n              clipContext.lineTo(currentClip[4], currentClip[5]);\n              clipContext.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              clipContext.moveTo(clip[6], clip[7]);\n              clipContext.lineTo(clip[4], clip[5]);\n              clipContext.lineTo(clip[2], clip[3]);\n              clipContext.lineTo(clip[0], clip[1]);\n              clipContext.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          [context.canvas.width, context.canvas.height],\n          transform,\n          rotation,\n          hifi,\n          replayTypes,\n          frameState.declutter?.[declutter],\n        );\n      }\n      if (contextSaved) {\n        if (clipContext === context) {\n          clipContext.restore();\n        } else {\n          tileClipContexts[i] = tileClipContext;\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n    this.tileClipContexts_ = tileClipContexts;\n    if (!frameState.declutter) {\n      this.renderDeferredInternal(frameState);\n    }\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext();\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio),\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tempExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        [\n          context.canvas.width * renderScale,\n          context.canvas.height * renderScale,\n        ],\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()],\n        null,\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/VectorTile.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import(\"../Feature\").FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views, but get lifted above all polygon and line elements.\n *  * `'vector'`: Everything is rendered as vectors and the original render order is maintained. Use\n *    this mode for improved performance and visual epxerience on vector tile layers with not too many\n *    rendered features (e.g. for highlighting a subset of features of another layer with the same\n *    source).\n * @property {VectorTileSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=0] The internal tile cache size.  If too small, this will auto-grow to hold\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorTileSourceType, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorTileSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.preload;\n    const cacheSize = options.cacheSize === undefined ? 0 : options.cacheSize;\n    delete options.cacheSize;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(baseOptions);\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\",\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this, {\n      cacheSize: this.cacheSize_,\n    });\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    return /** @type {Array<FeatureType>} */ (\n      /** @type {*} */ (this.getRenderer().getFeaturesInExtent(extent))\n    );\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    let i, ii, j, jj, replays;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {DataTile} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8ClampedArray(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    const sourceTileGridExtent = options.sourceTileGrid.getExtent();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceTileGridExtent\n        ? getIntersection(sourceProjExtent, sourceTileGridExtent)\n        : sourceProjExtent\n      : sourceTileGridExtent;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n        const getTile = options.getTileFunction;\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   * @override\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   * @override\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @override\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    let imageLike = false;\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        imageLike = true;\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8ClampedArray;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n      extent[0] += source.offset;\n      extent[2] += source.offset;\n      const clipExtent = this.clipExtent_?.slice();\n      if (clipExtent) {\n        clipExtent[0] += source.offset;\n        clipExtent[2] += source.offset;\n      }\n      dataSources.push({\n        extent: extent,\n        clipExtent: clipExtent,\n        data: new Uint8ClampedArray(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n      this.changed();\n      return;\n    }\n\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const targetWidth = typeof size === 'number' ? size : size[0];\n    const targetHeight = typeof size === 'number' ? size : size[1];\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n\n    let dataR, dataU;\n\n    const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n    const reprojs = Math.ceil(bytesPerPixel / 3);\n    for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n      const sources = [];\n      for (let i = 0, len = dataSources.length; i < len; ++i) {\n        const dataSource = dataSources[i];\n        const buffer = dataSource.data;\n        const pixelSize = dataSource.pixelSize;\n        const width = pixelSize[0];\n        const height = pixelSize[1];\n        const context = createCanvasContext2D(width, height, canvasPool);\n        const imageData = context.createImageData(width, height);\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let j = 0, len = data.length; j < len; j += 4) {\n          data[j] = buffer[offset];\n          data[j + 1] = buffer[offset + 1];\n          data[j + 2] = buffer[offset + 2];\n          data[j + 3] = 255;\n          offset += bytesPerPixel;\n        }\n        context.putImageData(imageData, 0, 0);\n        sources.push({\n          extent: dataSource.extent,\n          clipExtent: dataSource.clipExtent,\n          image: context.canvas,\n        });\n      }\n\n      const canvas = renderReprojected(\n        targetWidth,\n        targetHeight,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        false,\n        false,\n        false,\n      );\n\n      for (let i = 0, len = sources.length; i < len; ++i) {\n        const canvas = sources[i].image;\n        const context = canvas.getContext('2d');\n        releaseCanvas(context);\n        canvasPool.push(context.canvas);\n      }\n\n      const context = canvas.getContext('2d');\n      const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n      releaseCanvas(context);\n      canvasPool.push(canvas);\n\n      if (!dataR) {\n        dataU = new Uint8ClampedArray(\n          bytesPerPixel * imageData.width * imageData.height,\n        );\n        dataR = new dataSources[0].dataType(dataU.buffer);\n      }\n\n      const data = imageData.data;\n      let offset = reproj * 3;\n      for (let i = 0, len = data.length; i < len; i += 4) {\n        if (data[i + 3] === 255) {\n          dataU[offset] = data[i];\n          dataU[offset + 1] = data[i + 1];\n          dataU[offset + 2] = data[i + 2];\n        } else {\n          dataU[offset] = 0;\n          dataU[offset + 1] = 0;\n          dataU[offset + 2] = 0;\n        }\n        offset += bytesPerPixel;\n      }\n    }\n\n    if (imageLike) {\n      const context = createCanvasContext2D(targetWidth, targetHeight);\n      const imageData = new ImageData(dataR, targetWidth);\n      context.putImageData(imageData, 0, 0);\n      this.reprojData_ = context.canvas;\n    } else {\n      this.reprojData_ = dataR;\n    }\n    this.reprojSize_ = [\n      Math.round(targetWidth * this.pixelRatio_),\n      Math.round(targetHeight * this.pixelRatio_),\n    ];\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(({tile}) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(tile, EventType.CHANGE, () => {\n        const state = tile.getState();\n        if (\n          state == TileState.LOADED ||\n          state == TileState.ERROR ||\n          state == TileState.EMPTY\n        ) {\n          unlistenByKey(sourceListenKey);\n          leftToLoad--;\n          if (leftToLoad === 0) {\n            this.unlistenSources_();\n            this.reproject_();\n          }\n        }\n      });\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function ({tile}) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = this.getLayer().getSource().getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.get(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.get(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  * maybe skip transition when not fully opaque\n     *  * decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tileState === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      this.renderComplete = false;\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = (map, frameState) => {\n      const tileSourceKey = getUid(tileSource);\n      const wantedTiles = frameState.wantedTiles[tileSourceKey];\n      const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n      this.updateCacheSize(tilesCount);\n      this.tileCache_.expireCache();\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader<FeatureType>} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.0.0';\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","var $version = 8;\nvar $root = {\n\tversion: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: [\n\t\t\t8\n\t\t]\n\t},\n\tname: {\n\t\ttype: \"string\"\n\t},\n\tmetadata: {\n\t\ttype: \"*\"\n\t},\n\tcenter: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\"\n\t},\n\tcenterAltitude: {\n\t\ttype: \"number\"\n\t},\n\tzoom: {\n\t\ttype: \"number\"\n\t},\n\tbearing: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\"\n\t},\n\tpitch: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"degrees\"\n\t},\n\troll: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"degrees\"\n\t},\n\tlight: {\n\t\ttype: \"light\"\n\t},\n\tsky: {\n\t\ttype: \"sky\"\n\t},\n\tprojection: {\n\t\ttype: \"projection\"\n\t},\n\tterrain: {\n\t\ttype: \"terrain\"\n\t},\n\tsources: {\n\t\trequired: true,\n\t\ttype: \"sources\"\n\t},\n\tsprite: {\n\t\ttype: \"sprite\"\n\t},\n\tglyphs: {\n\t\ttype: \"string\"\n\t},\n\ttransition: {\n\t\ttype: \"transition\"\n\t},\n\tlayers: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tvalue: \"layer\"\n\t}\n};\nvar sources = {\n\t\"*\": {\n\t\ttype: \"source\"\n\t}\n};\nvar source = [\n\t\"source_vector\",\n\t\"source_raster\",\n\t\"source_raster_dem\",\n\t\"source_geojson\",\n\t\"source_video\",\n\t\"source_image\"\n];\nvar source_vector = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvector: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tscheme: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\txyz: {\n\t\t\t},\n\t\t\ttms: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"xyz\"\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tpromoteId: {\n\t\ttype: \"promoteId\"\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_raster = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\traster: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\ttileSize: {\n\t\ttype: \"number\",\n\t\t\"default\": 512,\n\t\tunits: \"pixels\"\n\t},\n\tscheme: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\txyz: {\n\t\t\t},\n\t\t\ttms: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"xyz\"\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_raster_dem = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\t\"raster-dem\": {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\ttileSize: {\n\t\ttype: \"number\",\n\t\t\"default\": 512,\n\t\tunits: \"pixels\"\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tencoding: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tterrarium: {\n\t\t\t},\n\t\t\tmapbox: {\n\t\t\t},\n\t\t\tcustom: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"mapbox\"\n\t},\n\tredFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tblueFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tgreenFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tbaseShift: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_geojson = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tgeojson: {\n\t\t\t}\n\t\t}\n\t},\n\tdata: {\n\t\trequired: true,\n\t\ttype: \"*\"\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 18\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tbuffer: {\n\t\ttype: \"number\",\n\t\t\"default\": 128,\n\t\tmaximum: 512,\n\t\tminimum: 0\n\t},\n\tfilter: {\n\t\ttype: \"*\"\n\t},\n\ttolerance: {\n\t\ttype: \"number\",\n\t\t\"default\": 0.375\n\t},\n\tcluster: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tclusterRadius: {\n\t\ttype: \"number\",\n\t\t\"default\": 50,\n\t\tminimum: 0\n\t},\n\tclusterMaxZoom: {\n\t\ttype: \"number\"\n\t},\n\tclusterMinPoints: {\n\t\ttype: \"number\"\n\t},\n\tclusterProperties: {\n\t\ttype: \"*\"\n\t},\n\tlineMetrics: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tgenerateId: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tpromoteId: {\n\t\ttype: \"promoteId\"\n\t}\n};\nvar source_video = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvideo: {\n\t\t\t}\n\t\t}\n\t},\n\turls: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tcoordinates: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tlength: 4,\n\t\tvalue: {\n\t\t\ttype: \"array\",\n\t\t\tlength: 2,\n\t\t\tvalue: \"number\"\n\t\t}\n\t}\n};\nvar source_image = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\timage: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\trequired: true,\n\t\ttype: \"string\"\n\t},\n\tcoordinates: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tlength: 4,\n\t\tvalue: {\n\t\t\ttype: \"array\",\n\t\t\tlength: 2,\n\t\t\tvalue: \"number\"\n\t\t}\n\t}\n};\nvar layer = {\n\tid: {\n\t\ttype: \"string\",\n\t\trequired: true\n\t},\n\ttype: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tfill: {\n\t\t\t},\n\t\t\tline: {\n\t\t\t},\n\t\t\tsymbol: {\n\t\t\t},\n\t\t\tcircle: {\n\t\t\t},\n\t\t\theatmap: {\n\t\t\t},\n\t\t\t\"fill-extrusion\": {\n\t\t\t},\n\t\t\traster: {\n\t\t\t},\n\t\t\thillshade: {\n\t\t\t},\n\t\t\tbackground: {\n\t\t\t}\n\t\t},\n\t\trequired: true\n\t},\n\tmetadata: {\n\t\ttype: \"*\"\n\t},\n\tsource: {\n\t\ttype: \"string\"\n\t},\n\t\"source-layer\": {\n\t\ttype: \"string\"\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\tmaximum: 24\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\tmaximum: 24\n\t},\n\tfilter: {\n\t\ttype: \"filter\"\n\t},\n\tlayout: {\n\t\ttype: \"layout\"\n\t},\n\tpaint: {\n\t\ttype: \"paint\"\n\t}\n};\nvar layout = [\n\t\"layout_fill\",\n\t\"layout_line\",\n\t\"layout_circle\",\n\t\"layout_heatmap\",\n\t\"layout_fill-extrusion\",\n\t\"layout_symbol\",\n\t\"layout_raster\",\n\t\"layout_hillshade\",\n\t\"layout_background\"\n];\nvar layout_background = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_fill = {\n\t\"fill-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_circle = {\n\t\"circle-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_heatmap = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_line = {\n\t\"line-cap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tbutt: {\n\t\t\t},\n\t\t\tround: {\n\t\t\t},\n\t\t\tsquare: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"butt\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-join\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tbevel: {\n\t\t\t},\n\t\t\tround: {\n\t\t\t},\n\t\t\tmiter: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"miter\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-miter-limit\": {\n\t\ttype: \"number\",\n\t\t\"default\": 2,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"line-join\": \"miter\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-round-limit\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1.05,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"line-join\": \"round\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_symbol = {\n\t\"symbol-placement\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tpoint: {\n\t\t\t},\n\t\t\tline: {\n\t\t\t},\n\t\t\t\"line-center\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"point\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-spacing\": {\n\t\ttype: \"number\",\n\t\t\"default\": 250,\n\t\tminimum: 1,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"symbol-placement\": \"line\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-avoid-edges\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"symbol-z-order\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tauto: {\n\t\t\t},\n\t\t\t\"viewport-y\": {\n\t\t\t},\n\t\t\tsource: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-allow-overlap\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t{\n\t\t\t\t\"!\": \"icon-overlap\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-overlap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnever: {\n\t\t\t},\n\t\t\talways: {\n\t\t\t},\n\t\t\tcooperative: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-ignore-placement\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-optional\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-rotation-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-size\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tunits: \"factor of the original icon size\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-text-fit\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnone: {\n\t\t\t},\n\t\t\twidth: {\n\t\t\t},\n\t\t\theight: {\n\t\t\t},\n\t\t\tboth: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"none\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-text-fit-padding\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"icon-text-fit\": [\n\t\t\t\t\t\"both\",\n\t\t\t\t\t\"width\",\n\t\t\t\t\t\"height\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-image\": {\n\t\ttype: \"resolvedImage\",\n\t\ttokens: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-padding\": {\n\t\ttype: \"padding\",\n\t\t\"default\": [\n\t\t\t2\n\t\t],\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-keep-upright\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t{\n\t\t\t\t\"icon-rotation-alignment\": \"map\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-offset\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-rotation-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\t\"viewport-glyph\": {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-field\": {\n\t\ttype: \"formatted\",\n\t\t\"default\": \"\",\n\t\ttokens: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-font\": {\n\t\ttype: \"array\",\n\t\tvalue: \"string\",\n\t\t\"default\": [\n\t\t\t\"Open Sans Regular\",\n\t\t\t\"Arial Unicode MS Regular\"\n\t\t],\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-size\": {\n\t\ttype: \"number\",\n\t\t\"default\": 16,\n\t\tminimum: 0,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-max-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 10,\n\t\tminimum: 0,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-line-height\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1.2,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-letter-spacing\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-justify\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tauto: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-radial-offset\": {\n\t\ttype: \"number\",\n\t\tunits: \"ems\",\n\t\t\"default\": 0,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\t\"property-type\": \"data-driven\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t}\n\t},\n\t\"text-variable-anchor\": {\n\t\ttype: \"array\",\n\t\tvalue: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-variable-anchor-offset\": {\n\t\ttype: \"variableAnchorOffsetCollection\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-variable-anchor\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-max-angle\": {\n\t\ttype: \"number\",\n\t\t\"default\": 45,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-writing-mode\": {\n\t\ttype: \"array\",\n\t\tvalue: \"enum\",\n\t\tvalues: {\n\t\t\thorizontal: {\n\t\t\t},\n\t\t\tvertical: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-padding\": {\n\t\ttype: \"number\",\n\t\t\"default\": 2,\n\t\tminimum: 0,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-keep-upright\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"text-rotation-alignment\": \"map\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-transform\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnone: {\n\t\t\t},\n\t\t\tuppercase: {\n\t\t\t},\n\t\t\tlowercase: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"none\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-offset\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tunits: \"ems\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-radial-offset\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-allow-overlap\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-overlap\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-overlap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnever: {\n\t\t\t},\n\t\t\talways: {\n\t\t\t},\n\t\t\tcooperative: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-ignore-placement\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-optional\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_raster = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_hillshade = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar filter = {\n\ttype: \"array\",\n\tvalue: \"*\"\n};\nvar filter_operator = {\n\ttype: \"enum\",\n\tvalues: {\n\t\t\"==\": {\n\t\t},\n\t\t\"!=\": {\n\t\t},\n\t\t\">\": {\n\t\t},\n\t\t\">=\": {\n\t\t},\n\t\t\"<\": {\n\t\t},\n\t\t\"<=\": {\n\t\t},\n\t\t\"in\": {\n\t\t},\n\t\t\"!in\": {\n\t\t},\n\t\tall: {\n\t\t},\n\t\tany: {\n\t\t},\n\t\tnone: {\n\t\t},\n\t\thas: {\n\t\t},\n\t\t\"!has\": {\n\t\t}\n\t}\n};\nvar geometry_type = {\n\ttype: \"enum\",\n\tvalues: {\n\t\tPoint: {\n\t\t},\n\t\tLineString: {\n\t\t},\n\t\tPolygon: {\n\t\t}\n\t}\n};\nvar function_stop = {\n\ttype: \"array\",\n\tminimum: 0,\n\tmaximum: 24,\n\tvalue: [\n\t\t\"number\",\n\t\t\"color\"\n\t],\n\tlength: 2\n};\nvar expression$1 = {\n\ttype: \"array\",\n\tvalue: \"*\",\n\tminimum: 1\n};\nvar light = {\n\tanchor: {\n\t\ttype: \"enum\",\n\t\t\"default\": \"viewport\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t},\n\tposition: {\n\t\ttype: \"array\",\n\t\t\"default\": [\n\t\t\t1.15,\n\t\t\t210,\n\t\t\t30\n\t\t],\n\t\tlength: 3,\n\t\tvalue: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t},\n\tcolor: {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\tintensity: {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t}\n};\nvar sky = {\n\t\"sky-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#88C6FC\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"horizon-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"fog-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"fog-ground-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"horizon-fog-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"sky-horizon-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"atmosphere-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t}\n};\nvar terrain = {\n\tsource: {\n\t\ttype: \"string\",\n\t\trequired: true\n\t},\n\texaggeration: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\t\"default\": 1\n\t}\n};\nvar projection = {\n\ttype: {\n\t\ttype: \"projectionDefinition\",\n\t\t\"default\": \"mercator\",\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t}\n};\nvar paint = [\n\t\"paint_fill\",\n\t\"paint_line\",\n\t\"paint_circle\",\n\t\"paint_heatmap\",\n\t\"paint_fill-extrusion\",\n\t\"paint_symbol\",\n\t\"paint_raster\",\n\t\"paint_hillshade\",\n\t\"paint_background\"\n];\nvar paint_fill = {\n\t\"fill-antialias\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-outline-color\": {\n\t\ttype: \"color\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-pattern\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"fill-antialias\": true\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"fill-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t}\n};\nvar paint_line = {\n\t\"line-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"line-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-gap-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-offset\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-dasharray\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"line widths\",\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded\"\n\t},\n\t\"line-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t},\n\t\"line-gradient\": {\n\t\ttype: \"color\",\n\t\ttransition: false,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-dasharray\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsource: \"geojson\",\n\t\t\t\thas: {\n\t\t\t\t\tlineMetrics: true\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"line-progress\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"color-ramp\"\n\t}\n};\nvar paint_circle = {\n\t\"circle-radius\": {\n\t\ttype: \"number\",\n\t\t\"default\": 5,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"circle-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-pitch-scale\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"viewport\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-stroke-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-stroke-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-stroke-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t}\n};\nvar paint_heatmap = {\n\t\"heatmap-radius\": {\n\t\ttype: \"number\",\n\t\t\"default\": 30,\n\t\tminimum: 1,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"heatmap-weight\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"heatmap-intensity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"heatmap-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": [\n\t\t\t\"interpolate\",\n\t\t\t[\n\t\t\t\t\"linear\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"heatmap-density\"\n\t\t\t],\n\t\t\t0,\n\t\t\t\"rgba(0, 0, 255, 0)\",\n\t\t\t0.1,\n\t\t\t\"royalblue\",\n\t\t\t0.3,\n\t\t\t\"cyan\",\n\t\t\t0.5,\n\t\t\t\"lime\",\n\t\t\t0.7,\n\t\t\t\"yellow\",\n\t\t\t1,\n\t\t\t\"red\"\n\t\t],\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"heatmap-density\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"color-ramp\"\n\t},\n\t\"heatmap-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_symbol = {\n\t\"icon-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"rgba(0, 0, 0, 0)\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"icon-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\toverridable: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"rgba(0, 0, 0, 0)\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t\"text-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_raster = {\n\t\"raster-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-hue-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\ttransition: true,\n\t\tunits: \"degrees\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-brightness-min\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-brightness-max\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-saturation\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: -1,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-contrast\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: -1,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-resampling\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tlinear: {\n\t\t\t},\n\t\t\tnearest: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"linear\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-fade-duration\": {\n\t\ttype: \"number\",\n\t\t\"default\": 300,\n\t\tminimum: 0,\n\t\ttransition: false,\n\t\tunits: \"milliseconds\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_hillshade = {\n\t\"hillshade-illumination-direction\": {\n\t\ttype: \"number\",\n\t\t\"default\": 335,\n\t\tminimum: 0,\n\t\tmaximum: 359,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-illumination-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"viewport\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-exaggeration\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-shadow-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-highlight-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#FFFFFF\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-accent-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_background = {\n\t\"background-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"background-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"background-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded\"\n\t},\n\t\"background-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar transition = {\n\tduration: {\n\t\ttype: \"number\",\n\t\t\"default\": 300,\n\t\tminimum: 0,\n\t\tunits: \"milliseconds\"\n\t},\n\tdelay: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"milliseconds\"\n\t}\n};\nvar promoteId = {\n\t\"*\": {\n\t\ttype: \"string\"\n\t}\n};\nvar v8Spec = {\n\t$version: $version,\n\t$root: $root,\n\tsources: sources,\n\tsource: source,\n\tsource_vector: source_vector,\n\tsource_raster: source_raster,\n\tsource_raster_dem: source_raster_dem,\n\tsource_geojson: source_geojson,\n\tsource_video: source_video,\n\tsource_image: source_image,\n\tlayer: layer,\n\tlayout: layout,\n\tlayout_background: layout_background,\n\tlayout_fill: layout_fill,\n\tlayout_circle: layout_circle,\n\tlayout_heatmap: layout_heatmap,\n\t\"layout_fill-extrusion\": {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n},\n\tlayout_line: layout_line,\n\tlayout_symbol: layout_symbol,\n\tlayout_raster: layout_raster,\n\tlayout_hillshade: layout_hillshade,\n\tfilter: filter,\n\tfilter_operator: filter_operator,\n\tgeometry_type: geometry_type,\n\t\"function\": {\n\texpression: {\n\t\ttype: \"expression\"\n\t},\n\tstops: {\n\t\ttype: \"array\",\n\t\tvalue: \"function_stop\"\n\t},\n\tbase: {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0\n\t},\n\tproperty: {\n\t\ttype: \"string\",\n\t\t\"default\": \"$zoom\"\n\t},\n\ttype: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tidentity: {\n\t\t\t},\n\t\t\texponential: {\n\t\t\t},\n\t\t\tinterval: {\n\t\t\t},\n\t\t\tcategorical: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"exponential\"\n\t},\n\tcolorSpace: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\trgb: {\n\t\t\t},\n\t\t\tlab: {\n\t\t\t},\n\t\t\thcl: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"rgb\"\n\t},\n\t\"default\": {\n\t\ttype: \"*\",\n\t\trequired: false\n\t}\n},\n\tfunction_stop: function_stop,\n\texpression: expression$1,\n\tlight: light,\n\tsky: sky,\n\tterrain: terrain,\n\tprojection: projection,\n\tpaint: paint,\n\tpaint_fill: paint_fill,\n\t\"paint_fill-extrusion\": {\n\t\"fill-extrusion-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-extrusion-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"fill-extrusion-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t},\n\t\"fill-extrusion-height\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"meters\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-base\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"meters\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"fill-extrusion-height\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-vertical-gradient\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n},\n\tpaint_line: paint_line,\n\tpaint_circle: paint_circle,\n\tpaint_heatmap: paint_heatmap,\n\tpaint_symbol: paint_symbol,\n\tpaint_raster: paint_raster,\n\tpaint_hillshade: paint_hillshade,\n\tpaint_background: paint_background,\n\ttransition: transition,\n\t\"property-type\": {\n\t\"data-driven\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"cross-faded\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"cross-faded-data-driven\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"color-ramp\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"data-constant\": {\n\t\ttype: \"property-type\"\n\t},\n\tconstant: {\n\t\ttype: \"property-type\"\n\t}\n},\n\tpromoteId: promoteId\n};\n\nconst refProperties = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n\nfunction deref(layer, parent) {\n    const result = {};\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = parent[k];\n        }\n    });\n    return result;\n}\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n    layers = layers.slice();\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[layers[i].ref]);\n        }\n    }\n    return layers;\n}\n\n/**\n * Deeply compares two object literals.\n *\n * @private\n */\nfunction deepEqual(a, b) {\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b) || a.length !== b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            if (!deepEqual(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    if (typeof a === 'object' && a !== null && b !== null) {\n        if (!(typeof b === 'object'))\n            return false;\n        const keys = Object.keys(a);\n        if (keys.length !== Object.keys(b).length)\n            return false;\n        for (const key in a) {\n            if (!deepEqual(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a === b;\n}\n\n/**\n * The main reason for this method is to allow type check when adding a command to the array.\n * @param commands - The commands array to add to\n * @param command - The command to add\n */\nfunction addCommand(commands, command) {\n    commands.push(command);\n}\nfunction addSource(sourceId, after, commands) {\n    addCommand(commands, { command: 'addSource', args: [sourceId, after[sourceId]] });\n}\nfunction removeSource(sourceId, commands, sourcesRemoved) {\n    addCommand(commands, { command: 'removeSource', args: [sourceId] });\n    sourcesRemoved[sourceId] = true;\n}\nfunction updateSource(sourceId, after, commands, sourcesRemoved) {\n    removeSource(sourceId, commands, sourcesRemoved);\n    addSource(sourceId, after, commands);\n}\nfunction canUpdateGeoJSON(before, after, sourceId) {\n    let prop;\n    for (prop in before[sourceId]) {\n        if (!Object.prototype.hasOwnProperty.call(before[sourceId], prop))\n            continue;\n        if (prop !== 'data' && !deepEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    for (prop in after[sourceId]) {\n        if (!Object.prototype.hasOwnProperty.call(after[sourceId], prop))\n            continue;\n        if (prop !== 'data' && !deepEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction diffSources(before, after, commands, sourcesRemoved) {\n    before = before || {};\n    after = after || {};\n    let sourceId;\n    // look for sources to remove\n    for (sourceId in before) {\n        if (!Object.prototype.hasOwnProperty.call(before, sourceId))\n            continue;\n        if (!Object.prototype.hasOwnProperty.call(after, sourceId)) {\n            removeSource(sourceId, commands, sourcesRemoved);\n        }\n    }\n    // look for sources to add/update\n    for (sourceId in after) {\n        if (!Object.prototype.hasOwnProperty.call(after, sourceId))\n            continue;\n        if (!Object.prototype.hasOwnProperty.call(before, sourceId)) {\n            addSource(sourceId, after, commands);\n        }\n        else if (!deepEqual(before[sourceId], after[sourceId])) {\n            if (before[sourceId].type === 'geojson' && after[sourceId].type === 'geojson' && canUpdateGeoJSON(before, after, sourceId)) {\n                addCommand(commands, { command: 'setGeoJSONSourceData', args: [sourceId, after[sourceId].data] });\n            }\n            else {\n                // no update command, must remove then add\n                updateSource(sourceId, after, commands, sourcesRemoved);\n            }\n        }\n    }\n}\nfunction diffLayerPropertyChanges(before, after, commands, layerId, klass, command) {\n    before = before || {};\n    after = after || {};\n    for (const prop in before) {\n        if (!Object.prototype.hasOwnProperty.call(before, prop))\n            continue;\n        if (!deepEqual(before[prop], after[prop])) {\n            commands.push({ command, args: [layerId, prop, after[prop], klass] });\n        }\n    }\n    for (const prop in after) {\n        if (!Object.prototype.hasOwnProperty.call(after, prop) || Object.prototype.hasOwnProperty.call(before, prop))\n            continue;\n        if (!deepEqual(before[prop], after[prop])) {\n            commands.push({ command, args: [layerId, prop, after[prop], klass] });\n        }\n    }\n}\nfunction pluckId(layer) {\n    return layer.id;\n}\nfunction indexById(group, layer) {\n    group[layer.id] = layer;\n    return group;\n}\nfunction diffLayers(before, after, commands) {\n    before = before || [];\n    after = after || [];\n    // order of layers by id\n    const beforeOrder = before.map(pluckId);\n    const afterOrder = after.map(pluckId);\n    // index of layer by id\n    const beforeIndex = before.reduce(indexById, {});\n    const afterIndex = after.reduce(indexById, {});\n    // track order of layers as if they have been mutated\n    const tracker = beforeOrder.slice();\n    // layers that have been added do not need to be diffed\n    const clean = Object.create(null);\n    let layerId;\n    let beforeLayer;\n    let afterLayer;\n    let insertBeforeLayerId;\n    let prop;\n    // remove layers\n    for (let i = 0, d = 0; i < beforeOrder.length; i++) {\n        layerId = beforeOrder[i];\n        if (!Object.prototype.hasOwnProperty.call(afterIndex, layerId)) {\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            tracker.splice(tracker.indexOf(layerId, d), 1);\n        }\n        else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n    }\n    // add/reorder layers\n    for (let i = 0, d = 0; i < afterOrder.length; i++) {\n        // work backwards as insert is before an existing layer\n        layerId = afterOrder[afterOrder.length - 1 - i];\n        if (tracker[tracker.length - 1 - i] === layerId)\n            continue;\n        if (Object.prototype.hasOwnProperty.call(beforeIndex, layerId)) {\n            // remove the layer before we insert at the correct position\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            tracker.splice(tracker.lastIndexOf(layerId, tracker.length - d), 1);\n        }\n        else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n        // add layer at correct position\n        insertBeforeLayerId = tracker[tracker.length - i];\n        addCommand(commands, { command: 'addLayer', args: [afterIndex[layerId], insertBeforeLayerId] });\n        tracker.splice(tracker.length - i, 0, layerId);\n        clean[layerId] = true;\n    }\n    // update layers\n    for (let i = 0; i < afterOrder.length; i++) {\n        layerId = afterOrder[i];\n        beforeLayer = beforeIndex[layerId];\n        afterLayer = afterIndex[layerId];\n        // no need to update if previously added (new or moved)\n        if (clean[layerId] || deepEqual(beforeLayer, afterLayer))\n            continue;\n        // If source, source-layer, or type have changes, then remove the layer\n        // and add it back 'from scratch'.\n        if (!deepEqual(beforeLayer.source, afterLayer.source) || !deepEqual(beforeLayer['source-layer'], afterLayer['source-layer']) || !deepEqual(beforeLayer.type, afterLayer.type)) {\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            // we add the layer back at the same position it was already in, so\n            // there's no need to update the `tracker`\n            insertBeforeLayerId = tracker[tracker.lastIndexOf(layerId) + 1];\n            addCommand(commands, { command: 'addLayer', args: [afterLayer, insertBeforeLayerId] });\n            continue;\n        }\n        // layout, paint, filter, minzoom, maxzoom\n        diffLayerPropertyChanges(beforeLayer.layout, afterLayer.layout, commands, layerId, null, 'setLayoutProperty');\n        diffLayerPropertyChanges(beforeLayer.paint, afterLayer.paint, commands, layerId, null, 'setPaintProperty');\n        if (!deepEqual(beforeLayer.filter, afterLayer.filter)) {\n            addCommand(commands, { command: 'setFilter', args: [layerId, afterLayer.filter] });\n        }\n        if (!deepEqual(beforeLayer.minzoom, afterLayer.minzoom) || !deepEqual(beforeLayer.maxzoom, afterLayer.maxzoom)) {\n            addCommand(commands, { command: 'setLayerZoomRange', args: [layerId, afterLayer.minzoom, afterLayer.maxzoom] });\n        }\n        // handle all other layer props, including paint.*\n        for (prop in beforeLayer) {\n            if (!Object.prototype.hasOwnProperty.call(beforeLayer, prop))\n                continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom')\n                continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), 'setPaintProperty');\n            }\n            else if (!deepEqual(beforeLayer[prop], afterLayer[prop])) {\n                addCommand(commands, { command: 'setLayerProperty', args: [layerId, prop, afterLayer[prop]] });\n            }\n        }\n        for (prop in afterLayer) {\n            if (!Object.prototype.hasOwnProperty.call(afterLayer, prop) || Object.prototype.hasOwnProperty.call(beforeLayer, prop))\n                continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom')\n                continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), 'setPaintProperty');\n            }\n            else if (!deepEqual(beforeLayer[prop], afterLayer[prop])) {\n                addCommand(commands, { command: 'setLayerProperty', args: [layerId, prop, afterLayer[prop]] });\n            }\n        }\n    }\n}\n/**\n * Diff two stylesheet\n *\n * Creates semanticly aware diffs that can easily be applied at runtime.\n * Operations produced by the diff closely resemble the maplibre-gl-js API. Any\n * error creating the diff will fall back to the 'setStyle' operation.\n *\n * Example diff:\n * [\n *     { command: 'setConstant', args: ['@water', '#0000FF'] },\n *     { command: 'setPaintProperty', args: ['background', 'background-color', 'black'] }\n * ]\n *\n * @private\n * @param {*} [before] stylesheet to compare from\n * @param {*} after stylesheet to compare to\n * @returns Array list of changes\n */\nfunction diff(before, after) {\n    if (!before)\n        return [{ command: 'setStyle', args: [after] }];\n    let commands = [];\n    try {\n        // Handle changes to top-level properties\n        if (!deepEqual(before.version, after.version)) {\n            return [{ command: 'setStyle', args: [after] }];\n        }\n        if (!deepEqual(before.center, after.center)) {\n            commands.push({ command: 'setCenter', args: [after.center] });\n        }\n        if (!deepEqual(before.centerAltitude, after.centerAltitude)) {\n            commands.push({ command: 'setCenterAltitude', args: [after.centerAltitude] });\n        }\n        if (!deepEqual(before.zoom, after.zoom)) {\n            commands.push({ command: 'setZoom', args: [after.zoom] });\n        }\n        if (!deepEqual(before.bearing, after.bearing)) {\n            commands.push({ command: 'setBearing', args: [after.bearing] });\n        }\n        if (!deepEqual(before.pitch, after.pitch)) {\n            commands.push({ command: 'setPitch', args: [after.pitch] });\n        }\n        if (!deepEqual(before.roll, after.roll)) {\n            commands.push({ command: 'setRoll', args: [after.roll] });\n        }\n        if (!deepEqual(before.sprite, after.sprite)) {\n            commands.push({ command: 'setSprite', args: [after.sprite] });\n        }\n        if (!deepEqual(before.glyphs, after.glyphs)) {\n            commands.push({ command: 'setGlyphs', args: [after.glyphs] });\n        }\n        if (!deepEqual(before.transition, after.transition)) {\n            commands.push({ command: 'setTransition', args: [after.transition] });\n        }\n        if (!deepEqual(before.light, after.light)) {\n            commands.push({ command: 'setLight', args: [after.light] });\n        }\n        if (!deepEqual(before.terrain, after.terrain)) {\n            commands.push({ command: 'setTerrain', args: [after.terrain] });\n        }\n        if (!deepEqual(before.sky, after.sky)) {\n            commands.push({ command: 'setSky', args: [after.sky] });\n        }\n        if (!deepEqual(before.projection, after.projection)) {\n            commands.push({ command: 'setProjection', args: [after.projection] });\n        }\n        // Handle changes to `sources`\n        // If a source is to be removed, we also--before the removeSource\n        // command--need to remove all the style layers that depend on it.\n        const sourcesRemoved = {};\n        // First collect the {add,remove}Source commands\n        const removeOrAddSourceCommands = [];\n        diffSources(before.sources, after.sources, removeOrAddSourceCommands, sourcesRemoved);\n        // Push a removeLayer command for each style layer that depends on a\n        // source that's being removed.\n        // Also, exclude any such layers them from the input to `diffLayers`\n        // below, so that diffLayers produces the appropriate `addLayers`\n        // command\n        const beforeLayers = [];\n        if (before.layers) {\n            before.layers.forEach((layer) => {\n                if ('source' in layer && sourcesRemoved[layer.source]) {\n                    commands.push({ command: 'removeLayer', args: [layer.id] });\n                }\n                else {\n                    beforeLayers.push(layer);\n                }\n            });\n        }\n        commands = commands.concat(removeOrAddSourceCommands);\n        // Handle changes to `layers`\n        diffLayers(beforeLayers, after.layers, commands);\n    }\n    catch (e) {\n        // fall back to setStyle\n        console.warn('Unable to compute style diff:', e);\n        commands = [{ command: 'setStyle', args: [after] }];\n    }\n    return commands;\n}\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\nclass ValidationError {\n    constructor(key, value, message, identifier) {\n        this.message = (key ? `${key}: ` : '') + message;\n        if (identifier)\n            this.identifier = identifier;\n        if (value !== null && value !== undefined && value.__line__) {\n            this.line = value.__line__;\n        }\n    }\n}\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\nclass ParsingError {\n    constructor(error) {\n        this.error = error;\n        this.message = error.message;\n        const match = error.message.match(/line (\\d+)/);\n        this.line = match ? parseInt(match[1], 10) : 0;\n    }\n}\n\nfunction extendBy(output, ...inputs) {\n    for (const input of inputs) {\n        for (const k in input) {\n            output[k] = input[k];\n        }\n    }\n    return output;\n}\n\nclass ExpressionParsingError extends Error {\n    constructor(key, message) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    constructor(parent, bindings = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n    concat(bindings) {\n        return new Scope(this, bindings);\n    }\n    get(name) {\n        if (this.bindings[name]) {\n            return this.bindings[name];\n        }\n        if (this.parent) {\n            return this.parent.get(name);\n        }\n        throw new Error(`${name} not found in scope.`);\n    }\n    has(name) {\n        if (this.bindings[name])\n            return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nconst NullType = { kind: 'null' };\nconst NumberType = { kind: 'number' };\nconst StringType = { kind: 'string' };\nconst BooleanType = { kind: 'boolean' };\nconst ColorType = { kind: 'color' };\nconst ProjectionDefinitionType = { kind: 'projectionDefinition' };\nconst ObjectType = { kind: 'object' };\nconst ValueType = { kind: 'value' };\nconst ErrorType = { kind: 'error' };\nconst CollatorType = { kind: 'collator' };\nconst FormattedType = { kind: 'formatted' };\nconst PaddingType = { kind: 'padding' };\nconst ResolvedImageType = { kind: 'resolvedImage' };\nconst VariableAnchorOffsetCollectionType = { kind: 'variableAnchorOffsetCollection' };\nfunction array(itemType, N) {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\nfunction typeToString(type) {\n    if (type.kind === 'array') {\n        const itemType = typeToString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    }\n    else {\n        return type.kind;\n    }\n}\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ProjectionDefinitionType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    PaddingType,\n    ResolvedImageType,\n    VariableAnchorOffsetCollectionType\n];\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nfunction checkSubtype(expected, t) {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    }\n    else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    }\n    else if (expected.kind === t.kind) {\n        return null;\n    }\n    else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n    return `Expected ${typeToString(expected)} but found ${typeToString(t)} instead.`;\n}\nfunction isValidType(provided, allowedTypes) {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\nfunction isValidNativeType(provided, allowedTypes) {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        }\n        else if (t === 'array') {\n            return Array.isArray(provided);\n        }\n        else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        }\n        else {\n            return t === typeof provided;\n        }\n    });\n}\n/**\n * Verify whether the specified type is of the same type as the specified sample.\n *\n * @param provided Type to verify\n * @param sample Sample type to reference\n * @returns `true` if both objects are of the same type, `false` otherwise\n * @example basic types\n * if (verifyType(outputType, ValueType)) {\n *     // type narrowed to:\n *     outputType.kind; // 'value'\n * }\n * @example array types\n * if (verifyType(outputType, array(NumberType))) {\n *     // type narrowed to:\n *     outputType.kind; // 'array'\n *     outputType.itemType; // NumberTypeT\n *     outputType.itemType.kind; // 'number'\n * }\n */\nfunction verifyType(provided, sample) {\n    if (provided.kind === 'array' && sample.kind === 'array') {\n        return provided.itemType.kind === sample.itemType.kind && typeof provided.N === 'number';\n    }\n    return provided.kind === sample.kind;\n}\n\n// See https://observablehq.com/@mbostock/lab-and-rgb\nconst Xn = 0.96422, Yn = 1, Zn = 0.82521, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1, deg2rad = Math.PI / 180, rad2deg = 180 / Math.PI;\nfunction constrainAngle(angle) {\n    angle = angle % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nfunction rgbToLab([r, g, b, alpha]) {\n    r = rgb2xyz(r);\n    g = rgb2xyz(g);\n    b = rgb2xyz(b);\n    let x, z;\n    const y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn);\n    if (r === g && g === b) {\n        x = z = y;\n    }\n    else {\n        x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n        z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n    }\n    const l = 116 * y - 16;\n    return [(l < 0) ? 0 : l, 500 * (x - y), 200 * (y - z), alpha];\n}\nfunction rgb2xyz(x) {\n    return (x <= 0.04045) ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\nfunction xyz2lab(t) {\n    return (t > t3) ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\nfunction labToRgb([l, a, b, alpha]) {\n    let y = (l + 16) / 116, x = isNaN(a) ? y : y + a / 500, z = isNaN(b) ? y : y - b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return [\n        xyz2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), // D50 -> sRGB\n        xyz2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n        xyz2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n        alpha,\n    ];\n}\nfunction xyz2rgb(x) {\n    x = (x <= 0.00304) ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055;\n    return (x < 0) ? 0 : (x > 1) ? 1 : x; // clip to 0..1 range\n}\nfunction lab2xyz(t) {\n    return (t > t1) ? t * t * t : t2 * (t - t0);\n}\nfunction rgbToHcl(rgbColor) {\n    const [l, a, b, alpha] = rgbToLab(rgbColor);\n    const c = Math.sqrt(a * a + b * b);\n    const h = Math.round(c * 10000) ? constrainAngle(Math.atan2(b, a) * rad2deg) : NaN;\n    return [h, c, l, alpha];\n}\nfunction hclToRgb([h, c, l, alpha]) {\n    h = isNaN(h) ? 0 : h * deg2rad;\n    return labToRgb([l, Math.cos(h) * c, Math.sin(h) * c, alpha]);\n}\n// https://drafts.csswg.org/css-color-4/#hsl-to-rgb\nfunction hslToRgb([h, s, l, alpha]) {\n    h = constrainAngle(h);\n    s /= 100;\n    l /= 100;\n    function f(n) {\n        const k = (n + h / 30) % 12;\n        const a = s * Math.min(l, 1 - l);\n        return l - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\n    }\n    return [f(0), f(8), f(4), alpha];\n}\n\n/**\n * CSS color parser compliant with CSS Color 4 Specification.\n * Supports: named colors, `transparent` keyword, all rgb hex notations,\n * rgb(), rgba(), hsl() and hsla() functions.\n * Does not round the parsed values to integers from the range 0..255.\n *\n * Syntax:\n *\n * <alpha-value> = <number> | <percentage>\n *         <hue> = <number> | <angle>\n *\n *         rgb() = rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? )\n *         rgb() = rgb( <percentage>#{3} , <alpha-value>? )    | rgb( <number>#{3} , <alpha-value>? )\n *\n *         hsl() = hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? )\n *         hsl() = hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )\n *\n * Caveats:\n *   - <angle> - <number> with optional `deg` suffix; `grad`, `rad`, `turn` are not supported\n *   - `none` keyword is not supported\n *   - comments inside rgb()/hsl() are not supported\n *   - legacy color syntax rgba() is supported with an identical grammar and behavior to rgb()\n *   - legacy color syntax hsla() is supported with an identical grammar and behavior to hsl()\n *\n * @param input CSS color string to parse.\n * @returns Color in sRGB color space, with `red`, `green`, `blue`\n * and `alpha` channels normalized to the range 0..1,\n * or `undefined` if the input is not a valid color string.\n */\nfunction parseCssColor(input) {\n    input = input.toLowerCase().trim();\n    if (input === 'transparent') {\n        return [0, 0, 0, 0];\n    }\n    // 'white', 'black', 'blue'\n    const namedColorsMatch = namedColors[input];\n    if (namedColorsMatch) {\n        const [r, g, b] = namedColorsMatch;\n        return [r / 255, g / 255, b / 255, 1];\n    }\n    // #f0c, #f0cf, #ff00cc, #ff00ccff\n    if (input.startsWith('#')) {\n        const hexRegexp = /^#(?:[0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})$/;\n        if (hexRegexp.test(input)) {\n            const step = input.length < 6 ? 1 : 2;\n            let i = 1;\n            return [\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i + step) || 'ff'),\n            ];\n        }\n    }\n    // rgb(128 0 0), rgb(50% 0% 0%), rgba(255,0,255,0.6), rgb(255 0 255 / 60%), rgb(100% 0% 100% /.6)\n    if (input.startsWith('rgb')) {\n        const rgbRegExp = /^rgba?\\(\\s*([\\de.+-]+)(%)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)(%)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)(%)?(?:\\s*([,\\/])\\s*([\\de.+-]+)(%)?)?\\s*\\)$/;\n        const rgbMatch = input.match(rgbRegExp);\n        if (rgbMatch) {\n            const [_, // eslint-disable-line @typescript-eslint/no-unused-vars\n            r, // <numeric>\n            rp, // %         (optional)\n            f1, // ,         (optional)\n            g, // <numeric>\n            gp, // %         (optional)\n            f2, // ,         (optional)\n            b, // <numeric>\n            bp, // %         (optional)\n            f3, // ,|/       (optional)\n            a, // <numeric> (optional)\n            ap, // %         (optional)\n            ] = rgbMatch;\n            const argFormat = [f1 || ' ', f2 || ' ', f3].join('');\n            if (argFormat === '  ' ||\n                argFormat === '  /' ||\n                argFormat === ',,' ||\n                argFormat === ',,,') {\n                const valFormat = [rp, gp, bp].join('');\n                const maxValue = (valFormat === '%%%') ? 100 :\n                    (valFormat === '') ? 255 : 0;\n                if (maxValue) {\n                    const rgba = [\n                        clamp(+r / maxValue, 0, 1),\n                        clamp(+g / maxValue, 0, 1),\n                        clamp(+b / maxValue, 0, 1),\n                        a ? parseAlpha(+a, ap) : 1,\n                    ];\n                    if (validateNumbers(rgba)) {\n                        return rgba;\n                    }\n                    // invalid numbers\n                }\n                // values must be all numbers or all percentages\n            }\n            return; // comma optional syntax requires no commas at all\n        }\n    }\n    // hsl(120 50% 80%), hsla(120deg,50%,80%,.9), hsl(12e1 50% 80% / 90%)\n    const hslRegExp = /^hsla?\\(\\s*([\\de.+-]+)(?:deg)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)%(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)%(?:\\s*([,\\/])\\s*([\\de.+-]+)(%)?)?\\s*\\)$/;\n    const hslMatch = input.match(hslRegExp);\n    if (hslMatch) {\n        const [_, // eslint-disable-line @typescript-eslint/no-unused-vars\n        h, // <numeric>\n        f1, // ,         (optional)\n        s, // <numeric>\n        f2, // ,         (optional)\n        l, // <numeric>\n        f3, // ,|/       (optional)\n        a, // <numeric> (optional)\n        ap, // %         (optional)\n        ] = hslMatch;\n        const argFormat = [f1 || ' ', f2 || ' ', f3].join('');\n        if (argFormat === '  ' ||\n            argFormat === '  /' ||\n            argFormat === ',,' ||\n            argFormat === ',,,') {\n            const hsla = [\n                +h,\n                clamp(+s, 0, 100),\n                clamp(+l, 0, 100),\n                a ? parseAlpha(+a, ap) : 1,\n            ];\n            if (validateNumbers(hsla)) {\n                return hslToRgb(hsla);\n            }\n            // invalid numbers\n        }\n        // comma optional syntax requires no commas at all\n    }\n}\nfunction parseHex(hex) {\n    return parseInt(hex.padEnd(2, hex), 16) / 255;\n}\nfunction parseAlpha(a, asPercentage) {\n    return clamp(asPercentage ? (a / 100) : a, 0, 1);\n}\nfunction clamp(n, min, max) {\n    return Math.min(Math.max(min, n), max);\n}\n/**\n * The regular expression for numeric values is not super specific, and it may\n * happen that it will accept a value that is not a valid number. In order to\n * detect and eliminate such values this function exists.\n *\n * @param array Array of uncertain numbers.\n * @returns `true` if the specified array contains only valid numbers, `false` otherwise.\n */\nfunction validateNumbers(array) {\n    return !array.some(Number.isNaN);\n}\n/**\n * To generate:\n * - visit {@link https://www.w3.org/TR/css-color-4/#named-colors}\n * - run in the console:\n * @example\n * copy(`{\\n${[...document.querySelector('.named-color-table tbody').children].map((tr) => `${tr.cells[2].textContent.trim()}: [${tr.cells[4].textContent.trim().split(/\\s+/).join(', ')}],`).join('\\n')}\\n}`);\n */\nconst namedColors = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50],\n};\n\nfunction interpolateNumber(from, to, t) {\n    return from + t * (to - from);\n}\nfunction interpolateArray(from, to, t) {\n    return from.map((d, i) => {\n        return interpolateNumber(d, to[i], t);\n    });\n}\n\n/**\n * Checks whether the specified color space is one of the supported interpolation color spaces.\n *\n * @param colorSpace Color space key to verify.\n * @returns `true` if the specified color space is one of the supported\n * interpolation color spaces, `false` otherwise\n */\nfunction isSupportedInterpolationColorSpace(colorSpace) {\n    return colorSpace === 'rgb' || colorSpace === 'hcl' || colorSpace === 'lab';\n}\n/**\n * Color representation used by WebGL.\n * Defined in sRGB color space and pre-blended with alpha.\n * @private\n */\nclass Color {\n    /**\n     * @param r Red component premultiplied by `alpha` 0..1\n     * @param g Green component premultiplied by `alpha` 0..1\n     * @param b Blue component premultiplied by `alpha` 0..1\n     * @param [alpha=1] Alpha component 0..1\n     * @param [premultiplied=true] Whether the `r`, `g` and `b` values have already\n     * been multiplied by alpha. If `true` nothing happens if `false` then they will\n     * be multiplied automatically.\n     */\n    constructor(r, g, b, alpha = 1, premultiplied = true) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = alpha;\n        if (!premultiplied) {\n            this.r *= alpha;\n            this.g *= alpha;\n            this.b *= alpha;\n            if (!alpha) {\n                // alpha = 0 erases completely rgb channels. This behavior is not desirable\n                // if this particular color is later used in color interpolation.\n                // Because of that, a reference to original color is saved.\n                this.overwriteGetter('rgb', [r, g, b, alpha]);\n            }\n        }\n    }\n    /**\n     * Parses CSS color strings and converts colors to sRGB color space if needed.\n     * Officially supported color formats:\n     * - keyword, e.g. 'aquamarine' or 'steelblue'\n     * - hex (with 3, 4, 6 or 8 digits), e.g. '#f0f' or '#e9bebea9'\n     * - rgb and rgba, e.g. 'rgb(0,240,120)' or 'rgba(0%,94%,47%,0.1)' or 'rgb(0 240 120 / .3)'\n     * - hsl and hsla, e.g. 'hsl(0,0%,83%)' or 'hsla(0,0%,83%,.5)' or 'hsl(0 0% 83% / 20%)'\n     *\n     * @param input CSS color string to parse.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input) {\n        // in zoom-and-property function input could be an instance of Color class\n        if (input instanceof Color) {\n            return input;\n        }\n        if (typeof input !== 'string') {\n            return;\n        }\n        const rgba = parseCssColor(input);\n        if (rgba) {\n            return new Color(...rgba, false);\n        }\n    }\n    /**\n     * Used in color interpolation and by 'to-rgba' expression.\n     *\n     * @returns Gien color, with reversed alpha blending, in sRGB color space.\n     */\n    get rgb() {\n        const { r, g, b, a } = this;\n        const f = a || Infinity; // reverse alpha blending factor\n        return this.overwriteGetter('rgb', [r / f, g / f, b / f, a]);\n    }\n    /**\n     * Used in color interpolation.\n     *\n     * @returns Gien color, with reversed alpha blending, in HCL color space.\n     */\n    get hcl() {\n        return this.overwriteGetter('hcl', rgbToHcl(this.rgb));\n    }\n    /**\n     * Used in color interpolation.\n     *\n     * @returns Gien color, with reversed alpha blending, in LAB color space.\n     */\n    get lab() {\n        return this.overwriteGetter('lab', rgbToLab(this.rgb));\n    }\n    /**\n     * Lazy getter pattern. When getter is called for the first time lazy value\n     * is calculated and then overwrites getter function in given object instance.\n     *\n     * @example:\n     * const redColor = Color.parse('red');\n     * let x = redColor.hcl; // this will invoke `get hcl()`, which will calculate\n     * // the value of red in HCL space and invoke this `overwriteGetter` function\n     * // which in turn will set a field with a key 'hcl' in the `redColor` object.\n     * // In other words it will override `get hcl()` from its `Color` prototype\n     * // with its own property: hcl = [calculated red value in hcl].\n     * let y = redColor.hcl; // next call will no longer invoke getter but simply\n     * // return the previously calculated value\n     * x === y; // true - `x` is exactly the same object as `y`\n     *\n     * @param getterKey Getter key\n     * @param lazyValue Lazily calculated value to be memoized by current instance\n     * @private\n     */\n    overwriteGetter(getterKey, lazyValue) {\n        Object.defineProperty(this, getterKey, { value: lazyValue });\n        return lazyValue;\n    }\n    /**\n     * Used by 'to-string' expression.\n     *\n     * @returns Serialized color in format `rgba(r,g,b,a)`\n     * where r,g,b are numbers within 0..255 and alpha is number within 1..0\n     *\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString() {\n        const [r, g, b, a] = this.rgb;\n        return `rgba(${[r, g, b].map(n => Math.round(n * 255)).join(',')},${a})`;\n    }\n    static interpolate(from, to, t, spaceKey = 'rgb') {\n        switch (spaceKey) {\n            case 'rgb': {\n                const [r, g, b, alpha] = interpolateArray(from.rgb, to.rgb, t);\n                return new Color(r, g, b, alpha, false);\n            }\n            case 'hcl': {\n                const [hue0, chroma0, light0, alphaF] = from.hcl;\n                const [hue1, chroma1, light1, alphaT] = to.hcl;\n                // https://github.com/gka/chroma.js/blob/cd1b3c0926c7a85cbdc3b1453b3a94006de91a92/src/interpolator/_hsx.js\n                let hue, chroma;\n                if (!isNaN(hue0) && !isNaN(hue1)) {\n                    let dh = hue1 - hue0;\n                    if (hue1 > hue0 && dh > 180) {\n                        dh -= 360;\n                    }\n                    else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                        dh += 360;\n                    }\n                    hue = hue0 + t * dh;\n                }\n                else if (!isNaN(hue0)) {\n                    hue = hue0;\n                    if (light1 === 1 || light1 === 0)\n                        chroma = chroma0;\n                }\n                else if (!isNaN(hue1)) {\n                    hue = hue1;\n                    if (light0 === 1 || light0 === 0)\n                        chroma = chroma1;\n                }\n                else {\n                    hue = NaN;\n                }\n                const [r, g, b, alpha] = hclToRgb([\n                    hue,\n                    chroma !== null && chroma !== undefined ? chroma : interpolateNumber(chroma0, chroma1, t),\n                    interpolateNumber(light0, light1, t),\n                    interpolateNumber(alphaF, alphaT, t),\n                ]);\n                return new Color(r, g, b, alpha, false);\n            }\n            case 'lab': {\n                const [r, g, b, alpha] = labToRgb(interpolateArray(from.lab, to.lab, t));\n                return new Color(r, g, b, alpha, false);\n            }\n        }\n    }\n}\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\nclass Collator {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [], { sensitivity: this.sensitivity, usage: 'search' });\n    }\n    compare(lhs, rhs) {\n        return this.collator.compare(lhs, rhs);\n    }\n    resolvedLocale() {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n\nconst VERTICAL_ALIGN_OPTIONS = ['bottom', 'center', 'top'];\nclass FormattedSection {\n    constructor(text, image, scale, fontStack, textColor, verticalAlign) {\n        this.text = text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n        this.verticalAlign = verticalAlign;\n    }\n}\nclass Formatted {\n    constructor(sections) {\n        this.sections = sections;\n    }\n    static fromString(unformatted) {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null, null)]);\n    }\n    isEmpty() {\n        if (this.sections.length === 0)\n            return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n            (section.image && section.image.name.length !== 0));\n    }\n    static factory(text) {\n        if (text instanceof Formatted) {\n            return text;\n        }\n        else {\n            return Formatted.fromString(text);\n        }\n    }\n    toString() {\n        if (this.sections.length === 0)\n            return '';\n        return this.sections.map(section => section.text).join('');\n    }\n}\n\n/**\n * A set of four numbers representing padding around a box. Create instances from\n * bare arrays or numeric values using the static method `Padding.parse`.\n * @private\n */\nclass Padding {\n    constructor(values) {\n        this.values = values.slice();\n    }\n    /**\n     * Numeric padding values\n     * @param input A padding value\n     * @returns A `Padding` instance, or `undefined` if the input is not a valid padding value.\n     */\n    static parse(input) {\n        if (input instanceof Padding) {\n            return input;\n        }\n        // Backwards compatibility: bare number is treated the same as array with single value.\n        // Padding applies to all four sides.\n        if (typeof input === 'number') {\n            return new Padding([input, input, input, input]);\n        }\n        if (!Array.isArray(input)) {\n            return undefined;\n        }\n        if (input.length < 1 || input.length > 4) {\n            return undefined;\n        }\n        for (const val of input) {\n            if (typeof val !== 'number') {\n                return undefined;\n            }\n        }\n        // Expand shortcut properties into explicit 4-sided values\n        switch (input.length) {\n            case 1:\n                input = [input[0], input[0], input[0], input[0]];\n                break;\n            case 2:\n                input = [input[0], input[1], input[0], input[1]];\n                break;\n            case 3:\n                input = [input[0], input[1], input[2], input[1]];\n                break;\n        }\n        return new Padding(input);\n    }\n    toString() {\n        return JSON.stringify(this.values);\n    }\n    static interpolate(from, to, t) {\n        return new Padding(interpolateArray(from.values, to.values, t));\n    }\n}\n\nclass RuntimeError {\n    constructor(message) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n    toJSON() {\n        return this.message;\n    }\n}\n\n/** Set of valid anchor positions, as a set for validation */\nconst anchors = new Set(['center', 'left', 'right', 'top', 'bottom', 'top-left', 'top-right', 'bottom-left', 'bottom-right']);\n/**\n * Utility class to assist managing values for text-variable-anchor-offset property. Create instances from\n * bare arrays using the static method `VariableAnchorOffsetCollection.parse`.\n * @private\n */\nclass VariableAnchorOffsetCollection {\n    constructor(values) {\n        this.values = values.slice();\n    }\n    static parse(input) {\n        if (input instanceof VariableAnchorOffsetCollection) {\n            return input;\n        }\n        if (!Array.isArray(input) ||\n            input.length < 1 ||\n            input.length % 2 !== 0) {\n            return undefined;\n        }\n        for (let i = 0; i < input.length; i += 2) {\n            // Elements in even positions should be anchor positions; Elements in odd positions should be offset values\n            const anchorValue = input[i];\n            const offsetValue = input[i + 1];\n            if (typeof anchorValue !== 'string' || !anchors.has(anchorValue)) {\n                return undefined;\n            }\n            if (!Array.isArray(offsetValue) || offsetValue.length !== 2 || typeof offsetValue[0] !== 'number' || typeof offsetValue[1] !== 'number') {\n                return undefined;\n            }\n        }\n        return new VariableAnchorOffsetCollection(input);\n    }\n    toString() {\n        return JSON.stringify(this.values);\n    }\n    static interpolate(from, to, t) {\n        const fromValues = from.values;\n        const toValues = to.values;\n        if (fromValues.length !== toValues.length) {\n            throw new RuntimeError(`Cannot interpolate values of different length. from: ${from.toString()}, to: ${to.toString()}`);\n        }\n        const output = [];\n        for (let i = 0; i < fromValues.length; i += 2) {\n            // Anchor entries must match\n            if (fromValues[i] !== toValues[i]) {\n                throw new RuntimeError(`Cannot interpolate values containing mismatched anchors. from[${i}]: ${fromValues[i]}, to[${i}]: ${toValues[i]}`);\n            }\n            output.push(fromValues[i]);\n            // Interpolate the offset values for each anchor\n            const [fx, fy] = fromValues[i + 1];\n            const [tx, ty] = toValues[i + 1];\n            output.push([interpolateNumber(fx, tx, t), interpolateNumber(fy, ty, t)]);\n        }\n        return new VariableAnchorOffsetCollection(output);\n    }\n}\n\nclass ResolvedImage {\n    constructor(options) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n    toString() {\n        return this.name;\n    }\n    static fromString(name) {\n        if (!name)\n            return null; // treat empty values as no image\n        return new ResolvedImage({ name, available: false });\n    }\n}\n\nclass ProjectionDefinition {\n    constructor(from, to, transition) {\n        this.from = from;\n        this.to = to;\n        this.transition = transition;\n    }\n    static interpolate(from, to, t) {\n        return new ProjectionDefinition(from, to, t);\n    }\n    static parse(input) {\n        if (input instanceof ProjectionDefinition) {\n            return input;\n        }\n        if (Array.isArray(input) && input.length === 3 && typeof input[0] === 'string' && typeof input[1] === 'string' && typeof input[2] === 'number') {\n            return new ProjectionDefinition(input[0], input[1], input[2]);\n        }\n        if (typeof input === 'object' && typeof input.from === 'string' && typeof input.to === 'string' && typeof input.transition === 'number') {\n            return new ProjectionDefinition(input.from, input.to, input.transition);\n        }\n        if (typeof input === 'string') {\n            return new ProjectionDefinition(input, input, 1);\n        }\n        return undefined;\n    }\n}\n\nfunction validateRGBA(r, g, b, a) {\n    if (!(typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255)) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n    if (!(typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1))) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n    return null;\n}\nfunction isValue(mixed) {\n    if (mixed === null ||\n        typeof mixed === 'string' ||\n        typeof mixed === 'boolean' ||\n        typeof mixed === 'number' ||\n        mixed instanceof ProjectionDefinition ||\n        mixed instanceof Color ||\n        mixed instanceof Collator ||\n        mixed instanceof Formatted ||\n        mixed instanceof Padding ||\n        mixed instanceof VariableAnchorOffsetCollection ||\n        mixed instanceof ResolvedImage) {\n        return true;\n    }\n    else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction typeOf(value) {\n    if (value === null) {\n        return NullType;\n    }\n    else if (typeof value === 'string') {\n        return StringType;\n    }\n    else if (typeof value === 'boolean') {\n        return BooleanType;\n    }\n    else if (typeof value === 'number') {\n        return NumberType;\n    }\n    else if (value instanceof Color) {\n        return ColorType;\n    }\n    else if (value instanceof ProjectionDefinition) {\n        return ProjectionDefinitionType;\n    }\n    else if (value instanceof Collator) {\n        return CollatorType;\n    }\n    else if (value instanceof Formatted) {\n        return FormattedType;\n    }\n    else if (value instanceof Padding) {\n        return PaddingType;\n    }\n    else if (value instanceof VariableAnchorOffsetCollection) {\n        return VariableAnchorOffsetCollectionType;\n    }\n    else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    }\n    else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType;\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            }\n            else if (itemType === t) {\n                continue;\n            }\n            else {\n                itemType = ValueType;\n                break;\n            }\n        }\n        return array(itemType || ValueType, length);\n    }\n    else {\n        return ObjectType;\n    }\n}\nfunction valueToString(value) {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    }\n    else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    }\n    else if (value instanceof Color || value instanceof ProjectionDefinition || value instanceof Formatted || value instanceof Padding || value instanceof VariableAnchorOffsetCollection || value instanceof ResolvedImage) {\n        return value.toString();\n    }\n    else {\n        return JSON.stringify(value);\n    }\n}\n\nclass Literal {\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (!isValue(args[1]))\n            return context.error('invalid value');\n        const value = args[1];\n        let type = typeOf(value);\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)) {\n            type = expected;\n        }\n        return new Literal(type, value);\n    }\n    evaluate() {\n        return this.value;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nconst types$1 = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\nclass Assertion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error('Expected at least one argument.');\n        let i = 1;\n        let type;\n        const name = args[0];\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types$1) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types$1[type];\n                i++;\n            }\n            else {\n                itemType = ValueType;\n            }\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n            type = array(itemType, N);\n        }\n        else {\n            if (!types$1[name])\n                throw new Error(`Types doesn't contain name = ${name}`);\n            type = types$1[name];\n        }\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Assertion(type, parsed);\n    }\n    evaluate(ctx) {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            }\n            else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${typeToString(this.type)}, but found ${typeToString(typeOf(value))} instead.`);\n            }\n        }\n        throw new Error();\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error('Expected at least one argument.');\n        const name = args[0];\n        if (!types[name])\n            throw new Error(`Can't parse ${name} as it is not part of the known types`);\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error('Expected one argument.');\n        const type = types[name];\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Coercion(type, parsed);\n    }\n    evaluate(ctx) {\n        switch (this.type.kind) {\n            case 'boolean':\n                return Boolean(this.args[0].evaluate(ctx));\n            case 'color': {\n                let input;\n                let error;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    error = null;\n                    if (input instanceof Color) {\n                        return input;\n                    }\n                    else if (typeof input === 'string') {\n                        const c = ctx.parseColor(input);\n                        if (c)\n                            return c;\n                    }\n                    else if (Array.isArray(input)) {\n                        if (input.length < 3 || input.length > 4) {\n                            error = `Invalid rgba value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                        }\n                        else {\n                            error = validateRGBA(input[0], input[1], input[2], input[3]);\n                        }\n                        if (!error) {\n                            return new Color(input[0] / 255, input[1] / 255, input[2] / 255, input[3]);\n                        }\n                    }\n                }\n                throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'padding': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    const pad = Padding.parse(input);\n                    if (pad) {\n                        return pad;\n                    }\n                }\n                throw new RuntimeError(`Could not parse padding from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'variableAnchorOffsetCollection': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    const coll = VariableAnchorOffsetCollection.parse(input);\n                    if (coll) {\n                        return coll;\n                    }\n                }\n                throw new RuntimeError(`Could not parse variableAnchorOffsetCollection from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'number': {\n                let value = null;\n                for (const arg of this.args) {\n                    value = arg.evaluate(ctx);\n                    if (value === null)\n                        return 0;\n                    const num = Number(value);\n                    if (isNaN(num))\n                        continue;\n                    return num;\n                }\n                throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n            }\n            case 'formatted':\n                // There is no explicit 'to-formatted' but this coercion can be implicitly\n                // created by properties that expect the 'formatted' type.\n                return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n            case 'resolvedImage':\n                return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n            case 'projectionDefinition':\n                return this.args[0].evaluate(ctx);\n            default:\n                return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\nclass EvaluationContext {\n    constructor() {\n        this.globals = null;\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n    }\n    id() {\n        return this.feature && 'id' in this.feature ? this.feature.id : null;\n    }\n    geometryType() {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n    geometry() {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n    canonicalID() {\n        return this.canonical;\n    }\n    properties() {\n        return this.feature && this.feature.properties || {};\n    }\n    parseColor(input) {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    constructor(registry, isConstantFunc, path = [], expectedType, scope = new Scope(), errors = []) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n        this._isConstant = isConstantFunc;\n    }\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(expr, index, expectedType, bindings, options = {}) {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n    _parse(expr, options) {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n        function annotate(parsed, type, typeAnnotation) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            }\n            else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            }\n            else {\n                return parsed;\n            }\n        }\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error('Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].');\n            }\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed)\n                    return null;\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    }\n                    else if ((expected.kind === 'projectionDefinition') && (actual.kind === 'string' || actual.kind === 'array')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if (expected.kind === 'padding' && (actual.kind === 'value' || actual.kind === 'number' || actual.kind === 'array')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if (expected.kind === 'variableAnchorOffsetCollection' && (actual.kind === 'value' || actual.kind === 'array')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && this._isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    }\n                    catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n                return parsed;\n            }\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        else if (typeof expr === 'undefined') {\n            return this.error('\\'undefined\\' value invalid. Use null instead.');\n        }\n        else if (typeof expr === 'object') {\n            return this.error('Bare objects invalid. Use [\"literal\", {...}] instead.');\n        }\n        else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index, expectedType, bindings) {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(this.registry, this._isConstant, path, expectedType || null, scope, this.errors);\n    }\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error, ...keys) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ExpressionParsingError(key, error));\n    }\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     * @param expected The expected type\n     * @param t The actual type\n     * @returns null if `t` is a subtype of `expected`; otherwise returns an error message\n     */\n    checkSubtype(expected, t) {\n        const error = checkSubtype(expected, t);\n        if (error)\n            this.error(error);\n        return error;\n    }\n}\n\nclass Let {\n    constructor(bindings, result) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n    evaluate(ctx) {\n        return this.result.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n        const bindings = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error('Variable names must contain only alphanumeric characters or \\'_\\'.', i);\n            }\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value)\n                return null;\n            bindings.push([name, value]);\n        }\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result)\n            return null;\n        return new Let(bindings, result);\n    }\n    outputDefined() {\n        return this.result.outputDefined();\n    }\n}\n\nclass Var {\n    constructor(name, boundExpression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n    static parse(args, context) {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error('\\'var\\' expression requires exactly one string literal argument.');\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n        return new Var(name, context.scope.get(name));\n    }\n    evaluate(ctx) {\n        return this.boundExpression.evaluate(ctx);\n    }\n    eachChild() { }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass At {\n    constructor(type, index, input) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n        if (!index || !input)\n            return null;\n        const t = input.type;\n        return new At(t.itemType, index, input);\n    }\n    evaluate(ctx) {\n        const index = this.index.evaluate(ctx);\n        const array = this.input.evaluate(ctx);\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n        return array[index];\n    }\n    eachChild(fn) {\n        fn(this.index);\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass In {\n    constructor(needle, haystack) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n    static parse(args, context) {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(needle.type)} instead`);\n        }\n        return new In(needle, haystack);\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!haystack)\n            return false;\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(typeOf(needle))} instead.`);\n        }\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${typeToString(typeOf(haystack))} instead.`);\n        }\n        return haystack.indexOf(needle) >= 0;\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n    outputDefined() {\n        return true;\n    }\n}\n\nclass IndexOf {\n    constructor(needle, haystack, fromIndex) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(needle.type)} instead`);\n        }\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex)\n                return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        }\n        else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(typeOf(needle))} instead.`);\n        }\n        let fromIndex;\n        if (this.fromIndex) {\n            fromIndex = this.fromIndex.evaluate(ctx);\n        }\n        if (isValidNativeType(haystack, ['string'])) {\n            const rawIndex = haystack.indexOf(needle, fromIndex);\n            if (rawIndex === -1) {\n                return -1;\n            }\n            else {\n                // The index may be affected by surrogate pairs, so get the length of the preceding substring.\n                return [...haystack.slice(0, rawIndex)].length;\n            }\n        }\n        else if (isValidNativeType(haystack, ['array'])) {\n            return haystack.indexOf(needle, fromIndex);\n        }\n        else {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${typeToString(typeOf(haystack))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass Match {\n    constructor(inputType, outputType, input, cases, outputs, otherwise) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error('Expected an even number of arguments.');\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error('Branch labels must be numbers or strings.');\n                }\n                else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n                }\n                else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error('Numeric branch labels must be integer values.');\n                }\n                else if (!inputType) {\n                    inputType = typeOf(label);\n                }\n                else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n                cases[String(label)] = outputs.length;\n            }\n            const result = context.parse(value, i, outputType);\n            if (!result)\n                return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input)\n            return null;\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype(inputType, input.type)) {\n            return null;\n        }\n        return new Match(inputType, outputType, input, cases, outputs, otherwise);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n}\n\nclass Case {\n    constructor(type, branches, otherwise) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error('Expected an odd number of arguments.');\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test)\n                return null;\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result)\n                return null;\n            branches.push([test, result]);\n            outputType = outputType || result.type;\n        }\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (!outputType)\n            throw new Error('Can\\'t infer output type');\n        return new Case(outputType, branches, otherwise);\n    }\n    evaluate(ctx) {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n}\n\nclass Slice {\n    constructor(type, input, beginIndex, endIndex) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n        if (!input || !beginIndex)\n            return null;\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${typeToString(input.type)} instead`);\n        }\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex)\n                return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        }\n        else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const beginIndex = this.beginIndex.evaluate(ctx);\n        let endIndex;\n        if (this.endIndex) {\n            endIndex = this.endIndex.evaluate(ctx);\n        }\n        if (isValidNativeType(input, ['string'])) {\n            // Indices may be affected by surrogate pairs.\n            return [...input].slice(beginIndex, endIndex).join('');\n        }\n        else if (isValidNativeType(input, ['array'])) {\n            return input.slice(beginIndex, endIndex);\n        }\n        else {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${typeToString(typeOf(input))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nfunction findStopLessThanOrEqualTo(stops, input) {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n            lowerIndex = currentIndex + 1;\n        }\n        else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        }\n        else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n    return 0;\n}\n\nclass Step {\n    constructor(type, input, stops) {\n        this.type = type;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static parse(args, context) {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error('Expected an even number of arguments.');\n        }\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n            const labelKey = i;\n            const valueKey = i + 1;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n        return new Step(outputType, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar unitbezier;\nvar hasRequiredUnitbezier;\n\nfunction requireUnitbezier () {\n\tif (hasRequiredUnitbezier) return unitbezier;\n\thasRequiredUnitbezier = 1;\n\n\tunitbezier = UnitBezier;\n\n\tfunction UnitBezier(p1x, p1y, p2x, p2y) {\n\t    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n\t    this.cx = 3.0 * p1x;\n\t    this.bx = 3.0 * (p2x - p1x) - this.cx;\n\t    this.ax = 1.0 - this.cx - this.bx;\n\n\t    this.cy = 3.0 * p1y;\n\t    this.by = 3.0 * (p2y - p1y) - this.cy;\n\t    this.ay = 1.0 - this.cy - this.by;\n\n\t    this.p1x = p1x;\n\t    this.p1y = p1y;\n\t    this.p2x = p2x;\n\t    this.p2y = p2y;\n\t}\n\n\tUnitBezier.prototype = {\n\t    sampleCurveX: function (t) {\n\t        // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n\t        return ((this.ax * t + this.bx) * t + this.cx) * t;\n\t    },\n\n\t    sampleCurveY: function (t) {\n\t        return ((this.ay * t + this.by) * t + this.cy) * t;\n\t    },\n\n\t    sampleCurveDerivativeX: function (t) {\n\t        return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n\t    },\n\n\t    solveCurveX: function (x, epsilon) {\n\t        if (epsilon === undefined) epsilon = 1e-6;\n\n\t        if (x < 0.0) return 0.0;\n\t        if (x > 1.0) return 1.0;\n\n\t        var t = x;\n\n\t        // First try a few iterations of Newton's method - normally very fast.\n\t        for (var i = 0; i < 8; i++) {\n\t            var x2 = this.sampleCurveX(t) - x;\n\t            if (Math.abs(x2) < epsilon) return t;\n\n\t            var d2 = this.sampleCurveDerivativeX(t);\n\t            if (Math.abs(d2) < 1e-6) break;\n\n\t            t = t - x2 / d2;\n\t        }\n\n\t        // Fall back to the bisection method for reliability.\n\t        var t0 = 0.0;\n\t        var t1 = 1.0;\n\t        t = x;\n\n\t        for (i = 0; i < 20; i++) {\n\t            x2 = this.sampleCurveX(t);\n\t            if (Math.abs(x2 - x) < epsilon) break;\n\n\t            if (x > x2) {\n\t                t0 = t;\n\t            } else {\n\t                t1 = t;\n\t            }\n\n\t            t = (t1 - t0) * 0.5 + t0;\n\t        }\n\n\t        return t;\n\t    },\n\n\t    solve: function (x, epsilon) {\n\t        return this.sampleCurveY(this.solveCurveX(x, epsilon));\n\t    }\n\t};\n\treturn unitbezier;\n}\n\nvar unitbezierExports = requireUnitbezier();\nvar UnitBezier = /*@__PURE__*/getDefaultExportFromCjs(unitbezierExports);\n\nclass Interpolate {\n    constructor(type, operator, interpolation, input, stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static interpolationFactor(interpolation, input, lower, upper) {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        }\n        else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        }\n        else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n    static parse(args, context) {\n        let [operator, interpolation, input, ...rest] = args;\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error('Expected an interpolation type expression.', 1);\n        }\n        if (interpolation[0] === 'linear') {\n            interpolation = { name: 'linear' };\n        }\n        else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error('Exponential interpolation requires a numeric base.', 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        }\n        else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: controlPoints\n            };\n        }\n        else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error('Expected an even number of arguments.');\n        }\n        input = context.parse(input, 2, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        }\n        else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n        if (!verifyType(outputType, NumberType) &&\n            !verifyType(outputType, ProjectionDefinitionType) &&\n            !verifyType(outputType, ColorType) &&\n            !verifyType(outputType, PaddingType) &&\n            !verifyType(outputType, VariableAnchorOffsetCollectionType) &&\n            !verifyType(outputType, array(NumberType))) {\n            return context.error(`Type ${typeToString(outputType)} is not interpolatable.`);\n        }\n        return new Interpolate(outputType, operator, interpolation, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n        switch (this.operator) {\n            case 'interpolate':\n                switch (this.type.kind) {\n                    case 'number':\n                        return interpolateNumber(outputLower, outputUpper, t);\n                    case 'color':\n                        return Color.interpolate(outputLower, outputUpper, t);\n                    case 'padding':\n                        return Padding.interpolate(outputLower, outputUpper, t);\n                    case 'variableAnchorOffsetCollection':\n                        return VariableAnchorOffsetCollection.interpolate(outputLower, outputUpper, t);\n                    case 'array':\n                        return interpolateArray(outputLower, outputUpper, t);\n                    case 'projectionDefinition':\n                        return ProjectionDefinition.interpolate(outputLower, outputUpper, t);\n                }\n            case 'interpolate-hcl':\n                return Color.interpolate(outputLower, outputUpper, t, 'hcl');\n            case 'interpolate-lab':\n                return Color.interpolate(outputLower, outputUpper, t, 'lab');\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    }\n    else if (base === 1) {\n        return progress / difference;\n    }\n    else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\nconst interpolateFactory = {\n    color: Color.interpolate,\n    number: interpolateNumber,\n    padding: Padding.interpolate,\n    variableAnchorOffsetCollection: VariableAnchorOffsetCollection.interpolate,\n    array: interpolateArray\n};\n\nclass Coalesce {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expected at least one argument.');\n        }\n        let outputType = null;\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, { typeAnnotation: 'omit' });\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        if (!outputType)\n            throw new Error('No output type');\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce(outputType, parsedArgs);\n    }\n    evaluate(ctx) {\n        let result = null;\n        let argCount = 0;\n        let requestedImageName;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image name so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                if (!requestedImageName) {\n                    requestedImageName = result.name;\n                }\n                result = null;\n                if (argCount === this.args.length) {\n                    result = requestedImageName;\n                }\n            }\n            if (result !== null)\n                break;\n        }\n        return result;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nfunction isComparableType(op, type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    }\n    else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\nfunction eq(ctx, a, b) { return a === b; }\nfunction neq(ctx, a, b) { return a !== b; }\nfunction lt(ctx, a, b) { return a < b; }\nfunction gt(ctx, a, b) { return a > b; }\nfunction lteq(ctx, a, b) { return a <= b; }\nfunction gteq(ctx, a, b) { return a >= b; }\nfunction eqCollate(ctx, a, b, c) { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx, a, b, c) { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx, a, b, c) { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx, a, b, c) { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx, a, b, c) { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx, a, b, c) { return c.compare(a, b) >= 0; }\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op, compareBasic, compareWithCollator) {\n    const isOrderComparison = op !== '==' && op !== '!=';\n    return class Comparison {\n        constructor(lhs, rhs, collator) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n        static parse(args, context) {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error('Expected two or three arguments.');\n            const op = args[0];\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs)\n                return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${typeToString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs)\n                return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${typeToString(rhs.type)}'.`);\n            }\n            if (lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value') {\n                return context.error(`Cannot compare types '${typeToString(lhs.type)}' and '${typeToString(rhs.type)}'.`);\n            }\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                }\n                else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n            let collator = null;\n            if (args.length === 4) {\n                if (lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value') {\n                    return context.error('Cannot use collator to compare non-string types.');\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator)\n                    return null;\n            }\n            return new Comparison(lhs, rhs, collator);\n        }\n        evaluate(ctx) {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n        eachChild(fn) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n        outputDefined() {\n            return true;\n        }\n    };\n}\nconst Equals = makeComparison('==', eq, eqCollate);\nconst NotEquals = makeComparison('!=', neq, neqCollate);\nconst LessThan = makeComparison('<', lt, ltCollate);\nconst GreaterThan = makeComparison('>', gt, gtCollate);\nconst LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nconst GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n\nclass CollatorExpression {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error('Expected one argument.');\n        const options = args[1];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error('Collator options argument must be an object.');\n        const caseSensitive = context.parse(options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive)\n            return null;\n        const diacriticSensitive = context.parse(options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive)\n            return null;\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n    evaluate(ctx) {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n    eachChild(fn) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n    outputDefined() {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n}\n\nclass NumberFormat {\n    constructor(number, locale, currency, minFractionDigits, maxFractionDigits) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error('Expected two arguments.');\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number)\n            return null;\n        const options = args[2];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error('NumberFormat options argument must be an object.');\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency)\n                return null;\n        }\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits)\n                return null;\n        }\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits)\n                return null;\n        }\n        return new NumberFormat(number, locale, currency, minFractionDigits, maxFractionDigits);\n    }\n    evaluate(ctx) {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [], {\n            style: this.currency ? 'currency' : 'decimal',\n            currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n            minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n            maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n        }).format(this.number.evaluate(ctx));\n    }\n    eachChild(fn) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass FormatExpression {\n    constructor(sections) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expected at least one argument.');\n        }\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object') {\n            return context.error('First argument must be an image or text section.');\n        }\n        const sections = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = args[i];\n            if (nextTokenMayBeObject && typeof arg === 'object' && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale)\n                        return null;\n                }\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font)\n                        return null;\n                }\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor)\n                        return null;\n                }\n                let verticalAlign = null;\n                if (arg['vertical-align']) {\n                    if (typeof arg['vertical-align'] === 'string' && !VERTICAL_ALIGN_OPTIONS.includes(arg['vertical-align'])) {\n                        return context.error(`'vertical-align' must be one of: 'bottom', 'center', 'top' but found '${arg['vertical-align']}' instead.`);\n                    }\n                    verticalAlign = context.parse(arg['vertical-align'], 1, StringType);\n                    if (!verticalAlign)\n                        return null;\n                }\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n                lastExpression.verticalAlign = verticalAlign;\n            }\n            else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content)\n                    return null;\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error('Formatted text type must be \\'string\\', \\'value\\', \\'image\\' or \\'null\\'.');\n                nextTokenMayBeObject = true;\n                sections.push({ content, scale: null, font: null, textColor: null, verticalAlign: null });\n            }\n        }\n        return new FormatExpression(sections);\n    }\n    evaluate(ctx) {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null, section.verticalAlign ? section.verticalAlign.evaluate(ctx) : null);\n            }\n            return new FormattedSection(valueToString(evaluatedContent), null, section.scale ? section.scale.evaluate(ctx) : null, section.font ? section.font.evaluate(ctx).join(',') : null, section.textColor ? section.textColor.evaluate(ctx) : null, section.verticalAlign ? section.verticalAlign.evaluate(ctx) : null);\n        };\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n    eachChild(fn) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n            if (section.verticalAlign) {\n                fn(section.verticalAlign);\n            }\n        }\n    }\n    outputDefined() {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n}\n\nclass ImageExpression {\n    constructor(input) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2) {\n            return context.error('Expected two arguments.');\n        }\n        const name = context.parse(args[1], 1, StringType);\n        if (!name)\n            return context.error('No image name provided.');\n        return new ImageExpression(name);\n    }\n    evaluate(ctx) {\n        const evaluatedImageName = this.input.evaluate(ctx);\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages)\n            value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n        return value;\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n}\n\nclass Length {\n    constructor(input) {\n        this.type = NumberType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n        const input = context.parse(args[1], 1);\n        if (!input)\n            return null;\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${typeToString(input.type)} instead.`);\n        return new Length(input);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            // The length may be affected by surrogate pairs.\n            return [...input].length;\n        }\n        else if (Array.isArray(input)) {\n            return input.length;\n        }\n        else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${typeToString(typeOf(input))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nconst EXTENT = 8192;\nfunction getTileCoordinates(p, canonical) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\nfunction getLngLatFromTileCoord(coord, canonical) {\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    const x = (coord[0] / EXTENT + canonical.x) / tilesAtZoom;\n    const y = (coord[1] / EXTENT + canonical.y) / tilesAtZoom;\n    return [lngFromMercatorXfromLng(x), latFromMercatorY(y)];\n}\nfunction mercatorXfromLng(lng) {\n    return (180 + lng) / 360;\n}\nfunction lngFromMercatorXfromLng(mercatorX) {\n    return mercatorX * 360 - 180;\n}\nfunction mercatorYfromLat(lat) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\nfunction latFromMercatorY(mercatorY) {\n    return 360 / Math.PI * Math.atan(Math.exp((180 - mercatorY * 360) * Math.PI / 180)) - 90;\n}\nfunction updateBBox(bbox, coord) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\nfunction boxWithinBox(bbox1, bbox2) {\n    if (bbox1[0] <= bbox2[0])\n        return false;\n    if (bbox1[2] >= bbox2[2])\n        return false;\n    if (bbox1[1] <= bbox2[1])\n        return false;\n    if (bbox1[3] >= bbox2[3])\n        return false;\n    return true;\n}\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\nfunction pointOnBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction segmentIntersectSegment(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0)\n        return false;\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b))\n        return true;\n    return false;\n}\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (segmentIntersectSegment(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings, trueIfOnBoundary = false) {\n    let inside = false;\n    for (const ring of rings) {\n        for (let j = 0; j < ring.length - 1; j++) {\n            if (pointOnBoundary(point, ring[j], ring[j + 1]))\n                return trueIfOnBoundary;\n            if (rayIntersect(point, ring[j], ring[j + 1]))\n                inside = !inside;\n        }\n    }\n    return inside;\n}\nfunction pointWithinPolygons(point, polygons) {\n    for (const polygon of polygons) {\n        if (pointWithinPolygon(point, polygon))\n            return true;\n    }\n    return false;\n}\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (const point of line) {\n        if (!pointWithinPolygon(point, polygon)) {\n            return false;\n        }\n    }\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction lineStringWithinPolygons(line, polygons) {\n    for (const polygon of polygons) {\n        if (lineStringWithinPolygon(line, polygon))\n            return true;\n    }\n    return false;\n}\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 = (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0))\n        return true;\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox, canonical) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\nfunction getTilePolygons(coordinates, bbox, canonical) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\nfunction pointsWithinPolygons(ctx, polygonGeometry) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const canonical = ctx.canonicalID();\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nfunction linesWithinPolygons(ctx, polygonGeometry) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const canonical = ctx.canonicalID();\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nclass Within {\n    constructor(geojson, geometries) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                const polygonsCoords = [];\n                for (const polygon of geojson.features) {\n                    const { type, coordinates } = polygon.geometry;\n                    if (type === 'Polygon') {\n                        polygonsCoords.push(coordinates);\n                    }\n                    if (type === 'MultiPolygon') {\n                        polygonsCoords.push(...coordinates);\n                    }\n                }\n                if (polygonsCoords.length) {\n                    const multipolygonWrapper = {\n                        type: 'MultiPolygon',\n                        coordinates: polygonsCoords\n                    };\n                    return new Within(geojson, multipolygonWrapper);\n                }\n            }\n            else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            }\n            else if (geojson.type === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error('\\'within\\' expression requires valid geojson object that contains polygon geometry type.');\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nclass TinyQueue {\n    constructor(data = [], compare = (a, b) => (a < b ? -1 : a > b ? 1 : 0)) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this._up(this.length++);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n\n        if (--this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let bestChild = (pos << 1) + 1; // initially it is the left child\n            const right = bestChild + 1;\n\n            if (right < this.length && compare(data[right], data[bestChild]) < 0) {\n                bestChild = right;\n            }\n            if (compare(data[bestChild], item) >= 0) break;\n\n            data[pos] = data[bestChild];\n            pos = bestChild;\n        }\n\n        data[pos] = item;\n    }\n}\n\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nfunction quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * Classifies an array of rings into polygons with outer rings and holes\n * @param rings - the rings to classify\n * @param maxRings - the maximum number of rings to include in a polygon, use 0 to include all rings\n * @returns an array of polygons with internal rings as holes\n */\nfunction classifyRings(rings, maxRings) {\n    const len = rings.length;\n    if (len <= 1)\n        return [rings];\n    const polygons = [];\n    let polygon;\n    let ccw;\n    for (const ring of rings) {\n        const area = calculateSignedArea(ring);\n        if (area === 0)\n            continue;\n        ring.area = Math.abs(area);\n        if (ccw === undefined)\n            ccw = area < 0;\n        if (ccw === area < 0) {\n            if (polygon)\n                polygons.push(polygon);\n            polygon = [ring];\n        }\n        else {\n            polygon.push(ring);\n        }\n    }\n    if (polygon)\n        polygons.push(polygon);\n    // Earcut performance degrades with the # of rings in a polygon. For this\n    // reason, we limit strip out all but the `maxRings` largest rings.\n    if (maxRings > 1) {\n        for (let j = 0; j < polygons.length; j++) {\n            if (polygons[j].length <= maxRings)\n                continue;\n            quickselect(polygons[j], maxRings, 1, polygons[j].length - 1, compareAreas);\n            polygons[j] = polygons[j].slice(0, maxRings);\n        }\n    }\n    return polygons;\n}\nfunction compareAreas(a, b) {\n    return b.area - a.area;\n}\n/**\n * Returns the signed area for the polygon ring.  Positive areas are exterior rings and\n * have a clockwise winding.  Negative areas are interior rings and have a counter clockwise\n * ordering.\n *\n * @param ring - Exterior or interior ring\n * @returns Signed area\n */\nfunction calculateSignedArea(ring) {\n    let sum = 0;\n    for (let i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n\n// This is taken from https://github.com/mapbox/cheap-ruler/ in order to take only the relevant parts\n// Values that define WGS84 ellipsoid model of the Earth\nconst RE = 6378.137; // equatorial radius\nconst FE = 1 / 298.257223563; // flattening\nconst E2 = FE * (2 - FE);\nconst RAD = Math.PI / 180;\nclass CheapRuler {\n    constructor(lat) {\n        // Curvature formulas from https://en.wikipedia.org/wiki/Earth_radius#Meridional\n        const m = RAD * RE * 1000;\n        const coslat = Math.cos(lat * RAD);\n        const w2 = 1 / (1 - E2 * (1 - coslat * coslat));\n        const w = Math.sqrt(w2);\n        // multipliers for converting longitude and latitude degrees into distance\n        this.kx = m * w * coslat; // based on normal radius of curvature\n        this.ky = m * w * w2 * (1 - E2); // based on meridional radius of curvature\n    }\n    /**\n     * Given two points of the form [longitude, latitude], returns the distance.\n     *\n     * @param a - point [longitude, latitude]\n     * @param b - point [longitude, latitude]\n     * @returns distance\n     * @example\n     * const distance = ruler.distance([30.5, 50.5], [30.51, 50.49]);\n     * //=distance\n     */\n    distance(a, b) {\n        const dx = this.wrap(a[0] - b[0]) * this.kx;\n        const dy = (a[1] - b[1]) * this.ky;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n    /**\n     * Returns an object of the form {point, index, t}, where point is closest point on the line\n     * from the given point, index is the start index of the segment with the closest point,\n     * and t is a parameter from 0 to 1 that indicates where the closest point is on that segment.\n     *\n     * @param line - an array of points that form the line\n     * @param p - point [longitude, latitude]\n     * @returns the nearest point, its index in the array and the proportion along the line\n     * @example\n     * const point = ruler.pointOnLine(line, [-67.04, 50.5]).point;\n     * //=point\n     */\n    pointOnLine(line, p) {\n        let minDist = Infinity;\n        let minX, minY, minI, minT;\n        for (let i = 0; i < line.length - 1; i++) {\n            let x = line[i][0];\n            let y = line[i][1];\n            let dx = this.wrap(line[i + 1][0] - x) * this.kx;\n            let dy = (line[i + 1][1] - y) * this.ky;\n            let t = 0;\n            if (dx !== 0 || dy !== 0) {\n                t = (this.wrap(p[0] - x) * this.kx * dx + (p[1] - y) * this.ky * dy) / (dx * dx + dy * dy);\n                if (t > 1) {\n                    x = line[i + 1][0];\n                    y = line[i + 1][1];\n                }\n                else if (t > 0) {\n                    x += (dx / this.kx) * t;\n                    y += (dy / this.ky) * t;\n                }\n            }\n            dx = this.wrap(p[0] - x) * this.kx;\n            dy = (p[1] - y) * this.ky;\n            const sqDist = dx * dx + dy * dy;\n            if (sqDist < minDist) {\n                minDist = sqDist;\n                minX = x;\n                minY = y;\n                minI = i;\n                minT = t;\n            }\n        }\n        return {\n            point: [minX, minY],\n            index: minI,\n            t: Math.max(0, Math.min(1, minT))\n        };\n    }\n    wrap(deg) {\n        while (deg < -180)\n            deg += 360;\n        while (deg > 180)\n            deg -= 360;\n        return deg;\n    }\n}\n\nconst MinPointsSize = 100;\nconst MinLinePointsSize = 50;\nfunction compareDistPair(a, b) {\n    return b[0] - a[0];\n}\nfunction getRangeSize(range) {\n    return range[1] - range[0] + 1;\n}\nfunction isRangeSafe(range, threshold) {\n    return range[1] >= range[0] && range[1] < threshold;\n}\nfunction splitRange(range, isLine) {\n    if (range[0] > range[1]) {\n        return [null, null];\n    }\n    const size = getRangeSize(range);\n    if (isLine) {\n        if (size === 2) {\n            return [range, null];\n        }\n        const size1 = Math.floor(size / 2);\n        return [[range[0], range[0] + size1],\n            [range[0] + size1, range[1]]];\n    }\n    if (size === 1) {\n        return [range, null];\n    }\n    const size1 = Math.floor(size / 2) - 1;\n    return [[range[0], range[0] + size1],\n        [range[0] + size1 + 1, range[1]]];\n}\nfunction getBBox(coords, range) {\n    if (!isRangeSafe(range, coords.length)) {\n        return [Infinity, Infinity, -Infinity, -Infinity];\n    }\n    const bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    for (let i = range[0]; i <= range[1]; ++i) {\n        updateBBox(bbox, coords[i]);\n    }\n    return bbox;\n}\nfunction getPolygonBBox(polygon) {\n    const bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    for (const ring of polygon) {\n        for (const coord of ring) {\n            updateBBox(bbox, coord);\n        }\n    }\n    return bbox;\n}\nfunction isValidBBox(bbox) {\n    return bbox[0] !== -Infinity && bbox[1] !== -Infinity && bbox[2] !== Infinity && bbox[3] !== Infinity;\n}\n// Calculate the distance between two bounding boxes.\n// Calculate the delta in x and y direction, and use two fake points {0.0, 0.0}\n// and {dx, dy} to calculate the distance. Distance will be 0.0 if bounding box are overlapping.\nfunction bboxToBBoxDistance(bbox1, bbox2, ruler) {\n    if (!isValidBBox(bbox1) || !isValidBBox(bbox2)) {\n        return NaN;\n    }\n    let dx = 0.0;\n    let dy = 0.0;\n    // bbox1 in left side\n    if (bbox1[2] < bbox2[0]) {\n        dx = bbox2[0] - bbox1[2];\n    }\n    // bbox1 in right side\n    if (bbox1[0] > bbox2[2]) {\n        dx = bbox1[0] - bbox2[2];\n    }\n    // bbox1 in above side\n    if (bbox1[1] > bbox2[3]) {\n        dy = bbox1[1] - bbox2[3];\n    }\n    // bbox1 in down side\n    if (bbox1[3] < bbox2[1]) {\n        dy = bbox2[1] - bbox1[3];\n    }\n    return ruler.distance([0.0, 0.0], [dx, dy]);\n}\nfunction pointToLineDistance(point, line, ruler) {\n    const nearestPoint = ruler.pointOnLine(line, point);\n    return ruler.distance(point, nearestPoint.point);\n}\nfunction segmentToSegmentDistance(p1, p2, q1, q2, ruler) {\n    const dist1 = Math.min(pointToLineDistance(p1, [q1, q2], ruler), pointToLineDistance(p2, [q1, q2], ruler));\n    const dist2 = Math.min(pointToLineDistance(q1, [p1, p2], ruler), pointToLineDistance(q2, [p1, p2], ruler));\n    return Math.min(dist1, dist2);\n}\nfunction lineToLineDistance(line1, range1, line2, range2, ruler) {\n    const rangeSafe = isRangeSafe(range1, line1.length) && isRangeSafe(range2, line2.length);\n    if (!rangeSafe) {\n        return Infinity;\n    }\n    let dist = Infinity;\n    for (let i = range1[0]; i < range1[1]; ++i) {\n        const p1 = line1[i];\n        const p2 = line1[i + 1];\n        for (let j = range2[0]; j < range2[1]; ++j) {\n            const q1 = line2[j];\n            const q2 = line2[j + 1];\n            if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                return 0.0;\n            }\n            dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n        }\n    }\n    return dist;\n}\nfunction pointsToPointsDistance(points1, range1, points2, range2, ruler) {\n    const rangeSafe = isRangeSafe(range1, points1.length) && isRangeSafe(range2, points2.length);\n    if (!rangeSafe) {\n        return NaN;\n    }\n    let dist = Infinity;\n    for (let i = range1[0]; i <= range1[1]; ++i) {\n        for (let j = range2[0]; j <= range2[1]; ++j) {\n            dist = Math.min(dist, ruler.distance(points1[i], points2[j]));\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n    }\n    return dist;\n}\nfunction pointToPolygonDistance(point, polygon, ruler) {\n    if (pointWithinPolygon(point, polygon, true)) {\n        return 0.0;\n    }\n    let dist = Infinity;\n    for (const ring of polygon) {\n        const front = ring[0];\n        const back = ring[ring.length - 1];\n        if (front !== back) {\n            dist = Math.min(dist, pointToLineDistance(point, [back, front], ruler));\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n        const nearestPoint = ruler.pointOnLine(ring, point);\n        dist = Math.min(dist, ruler.distance(point, nearestPoint.point));\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction lineToPolygonDistance(line, range, polygon, ruler) {\n    if (!isRangeSafe(range, line.length)) {\n        return NaN;\n    }\n    for (let i = range[0]; i <= range[1]; ++i) {\n        if (pointWithinPolygon(line[i], polygon, true)) {\n            return 0.0;\n        }\n    }\n    let dist = Infinity;\n    for (let i = range[0]; i < range[1]; ++i) {\n        const p1 = line[i];\n        const p2 = line[i + 1];\n        for (const ring of polygon) {\n            for (let j = 0, len = ring.length, k = len - 1; j < len; k = j++) {\n                const q1 = ring[k];\n                const q2 = ring[j];\n                if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                    return 0.0;\n                }\n                dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n            }\n        }\n    }\n    return dist;\n}\nfunction polygonIntersect(poly1, poly2) {\n    for (const ring of poly1) {\n        for (const point of ring) {\n            if (pointWithinPolygon(point, poly2, true)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction polygonToPolygonDistance(polygon1, polygon2, ruler, currentMiniDist = Infinity) {\n    const bbox1 = getPolygonBBox(polygon1);\n    const bbox2 = getPolygonBBox(polygon2);\n    if (currentMiniDist !== Infinity && bboxToBBoxDistance(bbox1, bbox2, ruler) >= currentMiniDist) {\n        return currentMiniDist;\n    }\n    if (boxWithinBox(bbox1, bbox2)) {\n        if (polygonIntersect(polygon1, polygon2)) {\n            return 0.0;\n        }\n    }\n    else if (polygonIntersect(polygon2, polygon1)) {\n        return 0.0;\n    }\n    let dist = Infinity;\n    for (const ring1 of polygon1) {\n        for (let i = 0, len1 = ring1.length, l = len1 - 1; i < len1; l = i++) {\n            const p1 = ring1[l];\n            const p2 = ring1[i];\n            for (const ring2 of polygon2) {\n                for (let j = 0, len2 = ring2.length, k = len2 - 1; j < len2; k = j++) {\n                    const q1 = ring2[k];\n                    const q2 = ring2[j];\n                    if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                        return 0.0;\n                    }\n                    dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n                }\n            }\n        }\n    }\n    return dist;\n}\nfunction updateQueue(distQueue, miniDist, ruler, points, polyBBox, rangeA) {\n    if (!rangeA) {\n        return;\n    }\n    const tempDist = bboxToBBoxDistance(getBBox(points, rangeA), polyBBox, ruler);\n    // Insert new pair to the queue if the bbox distance is less than\n    // miniDist, The pair with biggest distance will be at the top\n    if (tempDist < miniDist) {\n        distQueue.push([tempDist, rangeA, [0, 0]]);\n    }\n}\nfunction updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, range1, range2) {\n    if (!range1 || !range2) {\n        return;\n    }\n    const tempDist = bboxToBBoxDistance(getBBox(pointSet1, range1), getBBox(pointSet2, range2), ruler);\n    // Insert new pair to the queue if the bbox distance is less than\n    // miniDist, The pair with biggest distance will be at the top\n    if (tempDist < miniDist) {\n        distQueue.push([tempDist, range1, range2]);\n    }\n}\n// Divide and conquer, the time complexity is O(n*lgn), faster than Brute force\n// O(n*n) Most of the time, use index for in-place processing.\nfunction pointsToPolygonDistance(points, isLine, polygon, ruler, currentMiniDist = Infinity) {\n    let miniDist = Math.min(ruler.distance(points[0], polygon[0][0]), currentMiniDist);\n    if (miniDist === 0.0) {\n        return miniDist;\n    }\n    const distQueue = new TinyQueue([[0, [0, points.length - 1], [0, 0]]], compareDistPair);\n    const polyBBox = getPolygonBBox(polygon);\n    while (distQueue.length > 0) {\n        const distPair = distQueue.pop();\n        if (distPair[0] >= miniDist) {\n            continue;\n        }\n        const range = distPair[1];\n        // In case the set size are relatively small, we could use brute-force directly\n        const threshold = isLine ? MinLinePointsSize : MinPointsSize;\n        if (getRangeSize(range) <= threshold) {\n            if (!isRangeSafe(range, points.length)) {\n                return NaN;\n            }\n            if (isLine) {\n                const tempDist = lineToPolygonDistance(points, range, polygon, ruler);\n                if (isNaN(tempDist) || tempDist === 0.0) {\n                    return tempDist;\n                }\n                miniDist = Math.min(miniDist, tempDist);\n            }\n            else {\n                for (let i = range[0]; i <= range[1]; ++i) {\n                    const tempDist = pointToPolygonDistance(points[i], polygon, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return 0.0;\n                    }\n                }\n            }\n        }\n        else {\n            const newRangesA = splitRange(range, isLine);\n            updateQueue(distQueue, miniDist, ruler, points, polyBBox, newRangesA[0]);\n            updateQueue(distQueue, miniDist, ruler, points, polyBBox, newRangesA[1]);\n        }\n    }\n    return miniDist;\n}\nfunction pointSetToPointSetDistance(pointSet1, isLine1, pointSet2, isLine2, ruler, currentMiniDist = Infinity) {\n    let miniDist = Math.min(currentMiniDist, ruler.distance(pointSet1[0], pointSet2[0]));\n    if (miniDist === 0.0) {\n        return miniDist;\n    }\n    const distQueue = new TinyQueue([[0, [0, pointSet1.length - 1], [0, pointSet2.length - 1]]], compareDistPair);\n    while (distQueue.length > 0) {\n        const distPair = distQueue.pop();\n        if (distPair[0] >= miniDist) {\n            continue;\n        }\n        const rangeA = distPair[1];\n        const rangeB = distPair[2];\n        const threshold1 = isLine1 ? MinLinePointsSize : MinPointsSize;\n        const threshold2 = isLine2 ? MinLinePointsSize : MinPointsSize;\n        // In case the set size are relatively small, we could use brute-force directly\n        if (getRangeSize(rangeA) <= threshold1 && getRangeSize(rangeB) <= threshold2) {\n            if (!isRangeSafe(rangeA, pointSet1.length) && isRangeSafe(rangeB, pointSet2.length)) {\n                return NaN;\n            }\n            let tempDist;\n            if (isLine1 && isLine2) {\n                tempDist = lineToLineDistance(pointSet1, rangeA, pointSet2, rangeB, ruler);\n                miniDist = Math.min(miniDist, tempDist);\n            }\n            else if (isLine1 && !isLine2) {\n                const sublibe = pointSet1.slice(rangeA[0], rangeA[1] + 1);\n                for (let i = rangeB[0]; i <= rangeB[1]; ++i) {\n                    tempDist = pointToLineDistance(pointSet2[i], sublibe, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return miniDist;\n                    }\n                }\n            }\n            else if (!isLine1 && isLine2) {\n                const sublibe = pointSet2.slice(rangeB[0], rangeB[1] + 1);\n                for (let i = rangeA[0]; i <= rangeA[1]; ++i) {\n                    tempDist = pointToLineDistance(pointSet1[i], sublibe, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return miniDist;\n                    }\n                }\n            }\n            else {\n                tempDist = pointsToPointsDistance(pointSet1, rangeA, pointSet2, rangeB, ruler);\n                miniDist = Math.min(miniDist, tempDist);\n            }\n        }\n        else {\n            const newRangesA = splitRange(rangeA, isLine1);\n            const newRangesB = splitRange(rangeB, isLine2);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[0]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[1]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[0]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[1]);\n        }\n    }\n    return miniDist;\n}\nfunction pointToGeometryDistance(ctx, geometries) {\n    const tilePoints = ctx.geometry();\n    const pointPosition = tilePoints.flat().map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n    if (tilePoints.length === 0) {\n        return NaN;\n    }\n    const ruler = new CheapRuler(pointPosition[0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        switch (geometry.type) {\n            case 'Point':\n                dist = Math.min(dist, pointSetToPointSetDistance(pointPosition, false, [geometry.coordinates], false, ruler, dist));\n                break;\n            case 'LineString':\n                dist = Math.min(dist, pointSetToPointSetDistance(pointPosition, false, geometry.coordinates, true, ruler, dist));\n                break;\n            case 'Polygon':\n                dist = Math.min(dist, pointsToPolygonDistance(pointPosition, false, geometry.coordinates, ruler, dist));\n                break;\n        }\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction lineStringToGeometryDistance(ctx, geometries) {\n    const tileLine = ctx.geometry();\n    const linePositions = tileLine.flat().map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n    if (tileLine.length === 0) {\n        return NaN;\n    }\n    const ruler = new CheapRuler(linePositions[0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        switch (geometry.type) {\n            case 'Point':\n                dist = Math.min(dist, pointSetToPointSetDistance(linePositions, true, [geometry.coordinates], false, ruler, dist));\n                break;\n            case 'LineString':\n                dist = Math.min(dist, pointSetToPointSetDistance(linePositions, true, geometry.coordinates, true, ruler, dist));\n                break;\n            case 'Polygon':\n                dist = Math.min(dist, pointsToPolygonDistance(linePositions, true, geometry.coordinates, ruler, dist));\n                break;\n        }\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction polygonToGeometryDistance(ctx, geometries) {\n    const tilePolygon = ctx.geometry();\n    if (tilePolygon.length === 0 || tilePolygon[0].length === 0) {\n        return NaN;\n    }\n    const polygons = classifyRings(tilePolygon, 0).map(polygon => {\n        return polygon.map(ring => {\n            return ring.map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n        });\n    });\n    const ruler = new CheapRuler(polygons[0][0][0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        for (const polygon of polygons) {\n            switch (geometry.type) {\n                case 'Point':\n                    dist = Math.min(dist, pointsToPolygonDistance([geometry.coordinates], false, polygon, ruler, dist));\n                    break;\n                case 'LineString':\n                    dist = Math.min(dist, pointsToPolygonDistance(geometry.coordinates, true, polygon, ruler, dist));\n                    break;\n                case 'Polygon':\n                    dist = Math.min(dist, polygonToPolygonDistance(polygon, geometry.coordinates, ruler, dist));\n                    break;\n            }\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n    }\n    return dist;\n}\nfunction toSimpleGeometry(geometry) {\n    if (geometry.type === 'MultiPolygon') {\n        return geometry.coordinates.map(polygon => {\n            return {\n                type: 'Polygon',\n                coordinates: polygon\n            };\n        });\n    }\n    if (geometry.type === 'MultiLineString') {\n        return geometry.coordinates.map(lineString => {\n            return {\n                type: 'LineString',\n                coordinates: lineString\n            };\n        });\n    }\n    if (geometry.type === 'MultiPoint') {\n        return geometry.coordinates.map(point => {\n            return {\n                type: 'Point',\n                coordinates: point\n            };\n        });\n    }\n    return [geometry];\n}\nclass Distance {\n    constructor(geojson, geometries) {\n        this.type = NumberType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'distance' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                return new Distance(geojson, geojson.features.map(feature => toSimpleGeometry(feature.geometry)).flat());\n            }\n            else if (geojson.type === 'Feature') {\n                return new Distance(geojson, toSimpleGeometry(geojson.geometry));\n            }\n            else if ('type' in geojson && 'coordinates' in geojson) {\n                return new Distance(geojson, toSimpleGeometry(geojson));\n            }\n        }\n        return context.error('\\'distance\\' expression requires valid geojson object that contains polygon geometry type.');\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointToGeometryDistance(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'LineString') {\n                return lineStringToGeometryDistance(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'Polygon') {\n                return polygonToGeometryDistance(ctx, this.geometries);\n            }\n        }\n        return NaN;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nconst expressions$1 = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within,\n    'distance': Distance\n};\n\nclass CompoundExpression {\n    constructor(name, type, evaluate, args) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n    evaluate(ctx) {\n        return this._evaluate(ctx, this.args);\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return false;\n    }\n    static parse(args, context) {\n        const op = args[0];\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n        const overloads = availableOverloads.filter(([signature]) => (!Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n        let signatureContext = null;\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, isExpressionConstant, context.path, null, context.scope);\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        }\n        else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed)\n                    return null;\n                actualTypes.push(typeToString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n        return null;\n    }\n    static register(registry, definitions) {\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error)\n        throw new RuntimeError(error);\n    return new Color(r / 255, g / 255, b / 255, alpha, false);\n}\nfunction has(key, obj) {\n    return key in obj;\n}\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\nfunction varargs(type) {\n    return { type };\n}\nCompoundExpression.register(expressions$1, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            const [r, g, b, a] = v.evaluate(ctx).rgb;\n            return [r * 255, g * 255, b * 255, a];\n        },\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[k.value] === v.value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === v.value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === v.value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => k.value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => v.value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => v.value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => v.value.indexOf(ctx.properties()[k.value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[k.value], v.value, 0, v.value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\nfunction stringifySignature(signature) {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(typeToString).join(', ')})`;\n    }\n    else {\n        return `(${typeToString(signature.type)}...)`;\n    }\n}\nfunction isExpressionConstant(expression) {\n    if (expression instanceof Var) {\n        return isExpressionConstant(expression.boundExpression);\n    }\n    else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    }\n    else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    }\n    else if (expression instanceof Within) {\n        return false;\n    }\n    else if (expression instanceof Distance) {\n        return false;\n    }\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isExpressionConstant(child);\n        }\n        else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'accumulated', 'is-supported-script']);\n}\nfunction isFeatureConstant(e) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        }\n        else if (e.name === 'feature-state') {\n            return false;\n        }\n        else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        }\n        else if (e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id') {\n            return false;\n        }\n        else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n    if (e instanceof Within) {\n        return false;\n    }\n    if (e instanceof Distance) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isStateConstant(e) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isGlobalPropertyConstant(e, properties) {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) {\n        return false;\n    }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) {\n            result = false;\n        }\n    });\n    return result;\n}\n\nfunction success(value) {\n    return { result: 'success', value };\n}\nfunction error(value) {\n    return { result: 'error', value };\n}\n\nfunction supportsPropertyExpression(spec) {\n    return spec['property-type'] === 'data-driven' || spec['property-type'] === 'cross-faded-data-driven';\n}\nfunction supportsZoomExpression(spec) {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\nfunction supportsInterpolation(spec) {\n    return !!spec.expression && spec.expression.interpolated;\n}\n\nfunction getType(val) {\n    if (val instanceof Number) {\n        return 'number';\n    }\n    else if (val instanceof String) {\n        return 'string';\n    }\n    else if (val instanceof Boolean) {\n        return 'boolean';\n    }\n    else if (Array.isArray(val)) {\n        return 'array';\n    }\n    else if (val === null) {\n        return 'null';\n    }\n    else {\n        return typeof val;\n    }\n}\n\nfunction isFunction$1(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\nfunction identityFunction(x) {\n    return x;\n}\nfunction createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n    if (isColor || propertySpec.type === 'padding') {\n        const parseFn = isColor ? Color.parse : Padding.parse;\n        parameters = extendBy({}, parameters);\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], parseFn(stop[1])];\n            });\n        }\n        if (parameters.default) {\n            parameters.default = parseFn(parameters.default);\n        }\n        else {\n            parameters.default = parseFn(propertySpec.default);\n        }\n    }\n    if (parameters.colorSpace && !isSupportedInterpolationColorSpace(parameters.colorSpace)) {\n        throw new Error(`Unknown color space: \"${parameters.colorSpace}\"`);\n    }\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    }\n    else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    }\n    else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n    }\n    else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    }\n    else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n        const interpolationType = { name: 'linear' };\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({ zoom }, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    }\n    else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            { name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1 } : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({ zoom }) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    }\n    else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce$1(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\nfunction coalesce$1(a, b, c) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n    if (c !== undefined)\n        return c;\n}\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce$1(evaluated, parameters.default, propertySpec.default);\n}\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number')\n        return coalesce$1(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1)\n        return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0])\n        return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0])\n        return parameters.stops[n - 1][1];\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    return parameters.stops[index][1];\n}\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n    // Edge cases\n    if (getType(input) !== 'number')\n        return coalesce$1(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1)\n        return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0])\n        return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0])\n        return parameters.stops[n - 1][1];\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(input, base, parameters.stops[index][0], parameters.stops[index + 1][0]);\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    const interp = interpolateFactory[propertySpec.type] || identityFunction;\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t, parameters.colorSpace);\n            }\n        };\n    }\n    return interp(outputLower, outputUpper, t, parameters.colorSpace);\n}\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    switch (propertySpec.type) {\n        case 'color':\n            input = Color.parse(input);\n            break;\n        case 'formatted':\n            input = Formatted.fromString(input.toString());\n            break;\n        case 'resolvedImage':\n            input = ResolvedImage.fromString(input.toString());\n            break;\n        case 'padding':\n            input = Padding.parse(input);\n            break;\n        default:\n            if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n                input = undefined;\n            }\n    }\n    return coalesce$1(input, parameters.default, propertySpec.default);\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    }\n    else if (base === 1) {\n        return progress / difference;\n    }\n    else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nclass StyleExpression {\n    constructor(expression, propertySpec) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        return this.expression.evaluate(this._evaluator);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        }\n        catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\nfunction isExpression(expression) {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in expressions$1;\n}\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nfunction createExpression(expression, propertySpec) {\n    const parser = new ParsingContext(expressions$1, isExpressionConstant, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined, propertySpec && propertySpec.type === 'string' ? { typeAnnotation: 'coerce' } : undefined);\n    if (!parsed) {\n        return error(parser.errors);\n    }\n    return success(new StyleExpression(parsed, propertySpec));\n}\nclass ZoomConstantExpression {\n    constructor(kind, expression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'constant' && !isStateConstant(expression.expression);\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\nclass ZoomDependentExpression {\n    constructor(kind, expression, zoomStops, interpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'camera' && !isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    interpolationFactor(input, lower, upper) {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        }\n        else {\n            return 0;\n        }\n    }\n}\nfunction isZoomExpression(expression) {\n    return expression._styleExpression !== undefined;\n}\nfunction createPropertyExpression(expressionInput, propertySpec) {\n    const expression = createExpression(expressionInput, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n    const parsed = expression.value.expression;\n    const isFeatureConstantResult = isFeatureConstant(parsed);\n    if (!isFeatureConstantResult && !supportsPropertyExpression(propertySpec)) {\n        return error([new ExpressionParsingError('', 'data expressions not supported')]);\n    }\n    const isZoomConstant = isGlobalPropertyConstant(parsed, ['zoom']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ExpressionParsingError('', 'zoom expressions not supported')]);\n    }\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ExpressionParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    }\n    else if (zoomCurve instanceof ExpressionParsingError) {\n        return error([zoomCurve]);\n    }\n    else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ExpressionParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n    if (!zoomCurve) {\n        return success(isFeatureConstantResult ?\n            new ZoomConstantExpression('constant', expression.value) :\n            new ZoomConstantExpression('source', expression.value));\n    }\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n    return success(isFeatureConstantResult ?\n        new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType) :\n        new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType));\n}\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nclass StylePropertyFunction {\n    constructor(parameters, specification) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extendBy(this, createFunction(this._parameters, this._specification));\n    }\n    static deserialize(serialized) {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n    static serialize(input) {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\nfunction normalizePropertyExpression(value, specification) {\n    if (isFunction$1(value)) {\n        return new StylePropertyFunction(value, specification);\n    }\n    else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n    }\n    else {\n        let constant = value;\n        if (specification.type === 'color' && typeof value === 'string') {\n            constant = Color.parse(value);\n        }\n        else if (specification.type === 'padding' && (typeof value === 'number' || Array.isArray(value))) {\n            constant = Padding.parse(value);\n        }\n        else if (specification.type === 'variableAnchorOffsetCollection' && Array.isArray(value)) {\n            constant = VariableAnchorOffsetCollection.parse(value);\n        }\n        else if (specification.type === 'projectionDefinition' && typeof value === 'string') {\n            constant = ProjectionDefinition.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression) {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n    }\n    else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n    }\n    else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n        result = expression;\n    }\n    if (result instanceof ExpressionParsingError) {\n        return result;\n    }\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ExpressionParsingError) {\n            result = childResult;\n        }\n        else if (!result && childResult) {\n            result = new ExpressionParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        }\n        else if (result && childResult && result !== childResult) {\n            result = new ExpressionParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n    return result;\n}\nfunction getExpectedType(spec) {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        padding: PaddingType,\n        projectionDefinition: ProjectionDefinitionType,\n        resolvedImage: ResolvedImageType,\n        variableAnchorOffsetCollection: VariableAnchorOffsetCollectionType\n    };\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n    return types[spec.type];\n}\nfunction getDefaultValue(spec) {\n    if (spec.type === 'color' && isFunction$1(spec.default)) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    }\n    else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    }\n    else if (spec.type === 'padding') {\n        return Padding.parse(spec.default) || null;\n    }\n    else if (spec.type === 'variableAnchorOffsetCollection') {\n        return VariableAnchorOffsetCollection.parse(spec.default) || null;\n    }\n    else if (spec.type === 'projectionDefinition') {\n        return ProjectionDefinition.parse(spec.default) || null;\n    }\n    else if (spec.default === undefined) {\n        return null;\n    }\n    else {\n        return spec.default;\n    }\n}\n\nfunction isExpressionFilter(filter) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n        case 'has':\n            return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n        case 'in':\n            return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n        case '!in':\n        case '!has':\n        case 'none':\n            return false;\n        case '==':\n        case '!=':\n        case '>':\n        case '>=':\n        case '<':\n        case '<=':\n            return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n        case 'any':\n        case 'all':\n            for (const f of filter.slice(1)) {\n                if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                    return false;\n                }\n            }\n            return true;\n        default:\n            return true;\n    }\n}\nconst filterSpec = {\n    'type': 'boolean',\n    'default': false,\n    'transition': false,\n    'property-type': 'data-driven',\n    'expression': {\n        'interpolated': false,\n        'parameters': ['zoom', 'feature']\n    }\n};\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter MapLibre filter\n * @returns {Function} filter-evaluating function\n */\nfunction featureFilter(filter) {\n    if (filter === null || filter === undefined) {\n        return { filter: () => true, needGeometry: false };\n    }\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter$1(filter);\n    }\n    const compiled = createExpression(filter, filterSpec);\n    if (compiled.result === 'error') {\n        throw new Error(compiled.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    }\n    else {\n        const needGeometry = geometryNeeded(filter);\n        return { filter: (globalProperties, feature, canonical) => compiled.value.evaluate(globalProperties, feature, {}, canonical),\n            needGeometry };\n    }\n}\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter))\n        return false;\n    if (filter[0] === 'within' || filter[0] === 'distance')\n        return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index]))\n            return true;\n    }\n    return false;\n}\nfunction convertFilter$1(filter) {\n    if (!filter)\n        return true;\n    const op = filter[0];\n    if (filter.length <= 1)\n        return (op !== 'any');\n    const converted = op === '==' ? convertComparisonOp$1(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp$1(filter[1], filter[2], '==')) :\n            op === '<' ||\n                op === '>' ||\n                op === '<=' ||\n                op === '>=' ? convertComparisonOp$1(filter[1], filter[2], op) :\n                op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n                    op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter$1)) :\n                        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter$1).map(convertNegation)) :\n                            op === 'in' ? convertInOp$1(filter[1], filter.slice(2)) :\n                                op === '!in' ? convertNegation(convertInOp$1(filter[1], filter.slice(2))) :\n                                    op === 'has' ? convertHasOp$1(filter[1]) :\n                                        op === '!has' ? convertNegation(convertHasOp$1(filter[1])) :\n                                            true;\n    return converted;\n}\nfunction convertComparisonOp$1(property, value, op) {\n    switch (property) {\n        case '$type':\n            return [`filter-type-${op}`, value];\n        case '$id':\n            return [`filter-id-${op}`, value];\n        default:\n            return [`filter-${op}`, property, value];\n    }\n}\nfunction convertDisjunctionOp(filters) {\n    return ['any'].concat(filters.map(convertFilter$1));\n}\nfunction convertInOp$1(property, values) {\n    if (values.length === 0) {\n        return false;\n    }\n    switch (property) {\n        case '$type':\n            return ['filter-type-in', ['literal', values]];\n        case '$id':\n            return ['filter-id-in', ['literal', values]];\n        default:\n            if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n                return ['filter-in-large', property, ['literal', values.sort(compare)]];\n            }\n            else {\n                return ['filter-in-small', property, ['literal', values]];\n            }\n    }\n}\nfunction convertHasOp$1(property) {\n    switch (property) {\n        case '$type':\n            return true;\n        case '$id':\n            return ['filter-has-id'];\n        default:\n            return ['filter-has', property];\n    }\n}\nfunction convertNegation(filter) {\n    return ['!', filter];\n}\n\n/*\n * Convert the given filter to an expression, storing the expected types for\n * any feature properties referenced in expectedTypes.\n *\n * These expected types are needed in order to construct preflight type checks\n * needed for handling 'any' filters. A preflight type check is necessary in\n * order to mimic legacy filters' semantics around expected type mismatches.\n * For example, consider the legacy filter:\n *\n *     [\"any\", [\"all\", [\">\", \"y\", 0], [\">\", \"y\", 0]], [\">\", \"x\", 0]]\n *\n * Naively, we might convert this to the expression:\n *\n *     [\"any\", [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]], [\">\", [\"get\", \"x\"], 0]]\n *\n * But if we tried to evaluate this against, say `{x: 1, y: null, z: 0}`, the\n * [\">\", [\"get\", \"y\"], 0] would cause an evaluation error, leading to the\n * entire filter returning false. Legacy filter semantics, though, ask for\n * [\">\", \"y\", 0] to simply return `false` when `y` is of the wrong type,\n * allowing the subsequent terms of the outer \"any\" expression to be evaluated\n * (resulting, in this case, in a `true` value, because x > 0).\n *\n * We account for this by inserting a preflight type-checking expression before\n * each \"any\" term, allowing us to avoid evaluating the actual converted filter\n * if any type mismatches would cause it to produce an evaluation error:\n *\n *     [\"any\",\n *       [\"case\",\n *         [\"all\", [\"==\", [\"typeof\", [\"get\", \"y\"]], \"number\"], [\"==\", [\"typeof\", [\"get\", \"z\"], \"number]],\n *         [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]],\n *         false\n *       ],\n *       [\"case\",\n *         [\"==\", [\"typeof\", [\"get\", \"x\"], \"number\"]],\n *         [\">\", [\"get\", \"x\"], 0],\n *         false\n *       ]\n *     ]\n *\n * An alternative, possibly more direct approach would be to use type checks\n * in the conversion of each comparison operator, so that the converted version\n * of each individual ==, >=, etc. would mimic the legacy filter semantics. The\n * downside of this approach is that it can lead to many more type checks than\n * would otherwise be necessary: outside the context of an \"any\" expression,\n * bailing out due to a runtime type error (expression semantics) and returning\n * false (legacy filter semantics) are equivalent: they cause the filter to\n * produce a `false` result.\n */\nfunction convertFilter(filter, expectedTypes = {}) {\n    if (isExpressionFilter(filter))\n        return filter;\n    if (!filter)\n        return true;\n    const legacyFilter = filter;\n    const legacyOp = legacyFilter[0];\n    if (filter.length <= 1)\n        return (legacyOp !== 'any');\n    switch (legacyOp) {\n        case '==':\n        case '!=':\n        case '<':\n        case '>':\n        case '<=':\n        case '>=': {\n            const [, property, value] = filter;\n            return convertComparisonOp(property, value, legacyOp, expectedTypes);\n        }\n        case 'any': {\n            const [, ...conditions] = legacyFilter;\n            const children = conditions.map((f) => {\n                const types = {};\n                const child = convertFilter(f, types);\n                const typechecks = runtimeTypeChecks(types);\n                return typechecks === true ? child : ['case', typechecks, child, false];\n            });\n            return ['any', ...children];\n        }\n        case 'all': {\n            const [, ...conditions] = legacyFilter;\n            const children = conditions.map(f => convertFilter(f, expectedTypes));\n            return children.length > 1 ? ['all', ...children] : children[0];\n        }\n        case 'none': {\n            const [, ...conditions] = legacyFilter;\n            return ['!', convertFilter(['any', ...conditions], {})];\n        }\n        case 'in': {\n            const [, property, ...values] = legacyFilter;\n            return convertInOp(property, values);\n        }\n        case '!in': {\n            const [, property, ...values] = legacyFilter;\n            return convertInOp(property, values, true);\n        }\n        case 'has':\n            return convertHasOp(legacyFilter[1]);\n        case '!has':\n            return ['!', convertHasOp(legacyFilter[1])];\n        default:\n            return true;\n    }\n}\n// Given a set of feature properties and an expected type for each one,\n// construct an boolean expression that tests whether each property has the\n// right type.\n// E.g.: for {name: 'string', population: 'number'}, return\n// [ 'all',\n//   ['==', ['typeof', ['get', 'name'], 'string']],\n//   ['==', ['typeof', ['get', 'population'], 'number]]\n// ]\nfunction runtimeTypeChecks(expectedTypes) {\n    const conditions = [];\n    for (const property in expectedTypes) {\n        const get = property === '$id' ? ['id'] : ['get', property];\n        conditions.push(['==', ['typeof', get], expectedTypes[property]]);\n    }\n    if (conditions.length === 0)\n        return true;\n    if (conditions.length === 1)\n        return conditions[0];\n    return ['all', ...conditions];\n}\nfunction convertComparisonOp(property, value, op, expectedTypes) {\n    let get;\n    if (property === '$type') {\n        return [op, ['geometry-type'], value];\n    }\n    else if (property === '$id') {\n        get = ['id'];\n    }\n    else {\n        get = ['get', property];\n    }\n    if (expectedTypes && value !== null) {\n        const type = typeof value;\n        expectedTypes[property] = type;\n    }\n    if (op === '==' && property !== '$id' && value === null) {\n        return [\n            'all',\n            ['has', property], // missing property != null for legacy filters\n            ['==', get, null]\n        ];\n    }\n    else if (op === '!=' && property !== '$id' && value === null) {\n        return [\n            'any',\n            ['!', ['has', property]], // missing property != null for legacy filters\n            ['!=', get, null]\n        ];\n    }\n    return [op, get, value];\n}\nfunction convertInOp(property, values, negate = false) {\n    if (values.length === 0)\n        return negate;\n    let get;\n    if (property === '$type') {\n        get = ['geometry-type'];\n    }\n    else if (property === '$id') {\n        get = ['id'];\n    }\n    else {\n        get = ['get', property];\n    }\n    // Determine if the list of values to be searched is homogenously typed.\n    // If so (and if the type is string or number), then we can use a\n    // [match, input, [...values], true, false] construction rather than a\n    // bunch of `==` tests.\n    let uniformTypes = true;\n    const type = typeof values[0];\n    for (const value of values) {\n        if (typeof value !== type) {\n            uniformTypes = false;\n            break;\n        }\n    }\n    if (uniformTypes && (type === 'string' || type === 'number')) {\n        // Match expressions must have unique values.\n        const uniqueValues = values.sort().filter((v, i) => i === 0 || values[i - 1] !== v);\n        return ['match', get, uniqueValues, !negate, negate];\n    }\n    if (negate) {\n        return ['all', ...values.map(v => ['!=', get, v])];\n    }\n    else {\n        return ['any', ...values.map(v => ['==', get, v])];\n    }\n}\nfunction convertHasOp(property) {\n    if (property === '$type') {\n        return true;\n    }\n    else if (property === '$id') {\n        return ['!=', ['id'], null];\n    }\n    else {\n        return ['has', property];\n    }\n}\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\nfunction convertFunction(parameters, propertySpec) {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    }\n    else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    }\n    else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\nfunction convertIdentityFunction(parameters, propertySpec) {\n    const get = ['get', parameters.property];\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    }\n    else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    }\n    else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n        case 'hcl': return 'interpolate-hcl';\n        case 'lab': return 'interpolate-lab';\n        default: return 'interpolate';\n    }\n}\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n        return expression;\n    }\n    else {\n        const expression = ['step', ['zoom']];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return expression;\n    }\n}\nfunction coalesce(a, b) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n}\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    }\n    else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    }\n    else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    }\n    else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : ['exponential', base],\n            ['number', get]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    }\n    else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    }\n    else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? ['linear'] : ['exponential', base], input];\n    }\n    else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n    fixupDegenerateStepCurve(expression);\n    return expression;\n}\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    }\n    else {\n        return propertySpec.expression.interpolated ? 'exponential' : 'interval';\n    }\n}\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nfunction convertTokenString(s) {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0)\n            result.push(literal);\n        result.push(['get', match[1]]);\n    }\n    if (result.length === 1) {\n        return s;\n    }\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    }\n    else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n    return result;\n}\n\nfunction getPropertyReference(propertyName) {\n    for (let i = 0; i < v8Spec.layout.length; i++) {\n        for (const key in v8Spec[v8Spec.layout[i]]) {\n            if (key === propertyName)\n                return v8Spec[v8Spec.layout[i]][key];\n        }\n    }\n    for (let i = 0; i < v8Spec.paint.length; i++) {\n        for (const key in v8Spec[v8Spec.paint[i]]) {\n            if (key === propertyName)\n                return v8Spec[v8Spec.paint[i]][key];\n        }\n    }\n    return null;\n}\nfunction eachSource(style, callback) {\n    for (const k in style.sources) {\n        callback(style.sources[k]);\n    }\n}\nfunction eachLayer(style, callback) {\n    for (const layer of style.layers) {\n        callback(layer);\n    }\n}\nfunction eachProperty(style, options, callback) {\n    function inner(layer, propertyType) {\n        const properties = layer[propertyType];\n        if (!properties)\n            return;\n        Object.keys(properties).forEach((key) => {\n            callback({\n                path: [layer.id, propertyType, key],\n                key,\n                value: properties[key],\n                reference: getPropertyReference(key),\n                set(x) {\n                    properties[key] = x;\n                }\n            });\n        });\n    }\n    eachLayer(style, (layer) => {\n        if (options.paint) {\n            inner(layer, 'paint');\n        }\n        if (options.layout) {\n            inner(layer, 'layout');\n        }\n    });\n}\n\nfunction stringify$1(obj) {\n    const type = typeof obj;\n    if (type === 'number' || type === 'boolean' || type === 'string' || obj === undefined || obj === null)\n        return JSON.stringify(obj);\n    if (Array.isArray(obj)) {\n        let str = '[';\n        for (const val of obj) {\n            str += `${stringify$1(val)},`;\n        }\n        return `${str}]`;\n    }\n    const keys = Object.keys(obj).sort();\n    let str = '{';\n    for (let i = 0; i < keys.length; i++) {\n        str += `${JSON.stringify(keys[i])}:${stringify$1(obj[keys[i]])},`;\n    }\n    return `${str}}`;\n}\nfunction getKey(layer) {\n    let key = '';\n    for (const k of refProperties) {\n        key += `/${stringify$1(layer[k])}`;\n    }\n    return key;\n}\n/**\n * Given an array of layers, return an array of arrays of layers where all\n * layers in each group have identical layout-affecting properties. These\n * are the properties that were formerly used by explicit `ref` mechanism\n * for layers: 'type', 'source', 'source-layer', 'minzoom', 'maxzoom',\n * 'filter', and 'layout'.\n *\n * The input is not modified. The output layers are references to the\n * input layers.\n *\n * @private\n * @param {Array<Layer>} layers\n * @param {Object} [cachedKeys] - an object to keep already calculated keys.\n * @returns {Array<Array<Layer>>}\n */\nfunction groupByLayout(layers, cachedKeys) {\n    const groups = {};\n    for (let i = 0; i < layers.length; i++) {\n        const k = (cachedKeys && cachedKeys[layers[i].id]) || getKey(layers[i]);\n        // update the cache if there is one\n        if (cachedKeys)\n            cachedKeys[layers[i].id] = k;\n        let group = groups[k];\n        if (!group) {\n            group = groups[k] = [];\n        }\n        group.push(layers[i]);\n    }\n    const result = [];\n    for (const k in groups) {\n        result.push(groups[k]);\n    }\n    return result;\n}\n\nfunction emptyStyle() {\n    const style = {};\n    const version = v8Spec['$version'];\n    for (const styleKey in v8Spec['$root']) {\n        const specification = v8Spec['$root'][styleKey];\n        if (specification.required) {\n            let value = null;\n            if (styleKey === 'version') {\n                value = version;\n            }\n            else {\n                if (specification.type === 'array') {\n                    value = [];\n                }\n                else {\n                    value = {};\n                }\n            }\n            if (value != null) {\n                style[styleKey] = value;\n            }\n        }\n    }\n    return style;\n}\n\nfunction validateConstants(options) {\n    const key = options.key;\n    const constants = options.value;\n    if (constants) {\n        return [new ValidationError(key, constants, 'constants have been deprecated as of v8')];\n    }\n    else {\n        return [];\n    }\n}\n\n// Turn jsonlint-lines-primitives objects into primitive objects\nfunction unbundle(value) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    }\n    else {\n        return value;\n    }\n}\nfunction deepUnbundle(value) {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    }\n    else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n    return unbundle(value);\n}\n\nfunction validateObject(options) {\n    const key = options.key;\n    const object = options.value;\n    const elementSpecs = options.valueSpec || {};\n    const elementValidators = options.objectElementValidators || {};\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const validateSpec = options.validateSpec;\n    let errors = [];\n    const type = getType(object);\n    if (type !== 'object') {\n        return [new ValidationError(key, object, `object expected, ${type} found`)];\n    }\n    for (const objectKey in object) {\n        const elementSpecKey = objectKey.split('.')[0]; // treat 'paint.*' as 'paint'\n        const elementSpec = elementSpecs[elementSpecKey] || elementSpecs['*'];\n        let validateElement;\n        if (elementValidators[elementSpecKey]) {\n            validateElement = elementValidators[elementSpecKey];\n        }\n        else if (elementSpecs[elementSpecKey]) {\n            validateElement = validateSpec;\n        }\n        else if (elementValidators['*']) {\n            validateElement = elementValidators['*'];\n        }\n        else if (elementSpecs['*']) {\n            validateElement = validateSpec;\n        }\n        else {\n            errors.push(new ValidationError(key, object[objectKey], `unknown property \"${objectKey}\"`));\n            continue;\n        }\n        errors = errors.concat(validateElement({\n            key: (key ? `${key}.` : key) + objectKey,\n            value: object[objectKey],\n            valueSpec: elementSpec,\n            style,\n            styleSpec,\n            object,\n            objectKey,\n            validateSpec,\n        }, object));\n    }\n    for (const elementSpecKey in elementSpecs) {\n        // Don't check `required` when there's a custom validator for that property.\n        if (elementValidators[elementSpecKey]) {\n            continue;\n        }\n        if (elementSpecs[elementSpecKey].required && elementSpecs[elementSpecKey]['default'] === undefined && object[elementSpecKey] === undefined) {\n            errors.push(new ValidationError(key, object, `missing required property \"${elementSpecKey}\"`));\n        }\n    }\n    return errors;\n}\n\nfunction validateArray(options) {\n    const array = options.value;\n    const arraySpec = options.valueSpec;\n    const validateSpec = options.validateSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const key = options.key;\n    const validateArrayElement = options.arrayElementValidator || validateSpec;\n    if (getType(array) !== 'array') {\n        return [new ValidationError(key, array, `array expected, ${getType(array)} found`)];\n    }\n    if (arraySpec.length && array.length !== arraySpec.length) {\n        return [new ValidationError(key, array, `array length ${arraySpec.length} expected, length ${array.length} found`)];\n    }\n    if (arraySpec['min-length'] && array.length < arraySpec['min-length']) {\n        return [new ValidationError(key, array, `array length at least ${arraySpec['min-length']} expected, length ${array.length} found`)];\n    }\n    let arrayElementSpec = {\n        'type': arraySpec.value,\n        'values': arraySpec.values\n    };\n    if (styleSpec.$version < 7) {\n        arrayElementSpec['function'] = arraySpec.function;\n    }\n    if (getType(arraySpec.value) === 'object') {\n        arrayElementSpec = arraySpec.value;\n    }\n    let errors = [];\n    for (let i = 0; i < array.length; i++) {\n        errors = errors.concat(validateArrayElement({\n            array,\n            arrayIndex: i,\n            value: array[i],\n            valueSpec: arrayElementSpec,\n            validateSpec: options.validateSpec,\n            style,\n            styleSpec,\n            key: `${key}[${i}]`\n        }));\n    }\n    return errors;\n}\n\nfunction validateNumber(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    let type = getType(value);\n    if (type === 'number' && value !== value) {\n        type = 'NaN';\n    }\n    if (type !== 'number') {\n        return [new ValidationError(key, value, `number expected, ${type} found`)];\n    }\n    if ('minimum' in valueSpec && value < valueSpec.minimum) {\n        return [new ValidationError(key, value, `${value} is less than the minimum value ${valueSpec.minimum}`)];\n    }\n    if ('maximum' in valueSpec && value > valueSpec.maximum) {\n        return [new ValidationError(key, value, `${value} is greater than the maximum value ${valueSpec.maximum}`)];\n    }\n    return [];\n}\n\nfunction validateFunction(options) {\n    const functionValueSpec = options.valueSpec;\n    const functionType = unbundle(options.value.type);\n    let stopKeyType;\n    let stopDomainValues = {};\n    let previousStopDomainValue;\n    let previousStopDomainZoom;\n    const isZoomFunction = functionType !== 'categorical' && options.value.property === undefined;\n    const isPropertyFunction = !isZoomFunction;\n    const isZoomAndPropertyFunction = getType(options.value.stops) === 'array' &&\n        getType(options.value.stops[0]) === 'array' &&\n        getType(options.value.stops[0][0]) === 'object';\n    const errors = validateObject({\n        key: options.key,\n        value: options.value,\n        valueSpec: options.styleSpec.function,\n        validateSpec: options.validateSpec,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            stops: validateFunctionStops,\n            default: validateFunctionDefault\n        }\n    });\n    if (functionType === 'identity' && isZoomFunction) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"property\"'));\n    }\n    if (functionType !== 'identity' && !options.value.stops) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"stops\"'));\n    }\n    if (functionType === 'exponential' && options.valueSpec.expression && !supportsInterpolation(options.valueSpec)) {\n        errors.push(new ValidationError(options.key, options.value, 'exponential functions not supported'));\n    }\n    if (options.styleSpec.$version >= 8) {\n        if (isPropertyFunction && !supportsPropertyExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'property functions not supported'));\n        }\n        else if (isZoomFunction && !supportsZoomExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'zoom functions not supported'));\n        }\n    }\n    if ((functionType === 'categorical' || isZoomAndPropertyFunction) && options.value.property === undefined) {\n        errors.push(new ValidationError(options.key, options.value, '\"property\" property is required'));\n    }\n    return errors;\n    function validateFunctionStops(options) {\n        if (functionType === 'identity') {\n            return [new ValidationError(options.key, options.value, 'identity function may not have a \"stops\" property')];\n        }\n        let errors = [];\n        const value = options.value;\n        errors = errors.concat(validateArray({\n            key: options.key,\n            value,\n            valueSpec: options.valueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec,\n            arrayElementValidator: validateFunctionStop\n        }));\n        if (getType(value) === 'array' && value.length === 0) {\n            errors.push(new ValidationError(options.key, value, 'array must have at least one stop'));\n        }\n        return errors;\n    }\n    function validateFunctionStop(options) {\n        let errors = [];\n        const value = options.value;\n        const key = options.key;\n        if (getType(value) !== 'array') {\n            return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n        }\n        if (value.length !== 2) {\n            return [new ValidationError(key, value, `array length 2 expected, length ${value.length} found`)];\n        }\n        if (isZoomAndPropertyFunction) {\n            if (getType(value[0]) !== 'object') {\n                return [new ValidationError(key, value, `object expected, ${getType(value[0])} found`)];\n            }\n            if (value[0].zoom === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have zoom')];\n            }\n            if (value[0].value === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have value')];\n            }\n            if (previousStopDomainZoom && previousStopDomainZoom > unbundle(value[0].zoom)) {\n                return [new ValidationError(key, value[0].zoom, 'stop zoom values must appear in ascending order')];\n            }\n            if (unbundle(value[0].zoom) !== previousStopDomainZoom) {\n                previousStopDomainZoom = unbundle(value[0].zoom);\n                previousStopDomainValue = undefined;\n                stopDomainValues = {};\n            }\n            errors = errors.concat(validateObject({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: { zoom: {} },\n                validateSpec: options.validateSpec,\n                style: options.style,\n                styleSpec: options.styleSpec,\n                objectElementValidators: { zoom: validateNumber, value: validateStopDomainValue }\n            }));\n        }\n        else {\n            errors = errors.concat(validateStopDomainValue({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {},\n                validateSpec: options.validateSpec,\n                style: options.style,\n                styleSpec: options.styleSpec\n            }, value));\n        }\n        if (isExpression(deepUnbundle(value[1]))) {\n            return errors.concat([new ValidationError(`${key}[1]`, value[1], 'expressions are not allowed in function stops.')]);\n        }\n        return errors.concat(options.validateSpec({\n            key: `${key}[1]`,\n            value: value[1],\n            valueSpec: functionValueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        }));\n    }\n    function validateStopDomainValue(options, stop) {\n        const type = getType(options.value);\n        const value = unbundle(options.value);\n        const reportValue = options.value !== null ? options.value : stop;\n        if (!stopKeyType) {\n            stopKeyType = type;\n        }\n        else if (type !== stopKeyType) {\n            return [new ValidationError(options.key, reportValue, `${type} stop domain type must match previous stop domain type ${stopKeyType}`)];\n        }\n        if (type !== 'number' && type !== 'string' && type !== 'boolean') {\n            return [new ValidationError(options.key, reportValue, 'stop domain value must be a number, string, or boolean')];\n        }\n        if (type !== 'number' && functionType !== 'categorical') {\n            let message = `number expected, ${type} found`;\n            if (supportsPropertyExpression(functionValueSpec) && functionType === undefined) {\n                message += '\\nIf you intended to use a categorical function, specify `\"type\": \"categorical\"`.';\n            }\n            return [new ValidationError(options.key, reportValue, message)];\n        }\n        if (functionType === 'categorical' && type === 'number' && (!isFinite(value) || Math.floor(value) !== value)) {\n            return [new ValidationError(options.key, reportValue, `integer expected, found ${value}`)];\n        }\n        if (functionType !== 'categorical' && type === 'number' && previousStopDomainValue !== undefined && value < previousStopDomainValue) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must appear in ascending order')];\n        }\n        else {\n            previousStopDomainValue = value;\n        }\n        if (functionType === 'categorical' && value in stopDomainValues) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must be unique')];\n        }\n        else {\n            stopDomainValues[value] = true;\n        }\n        return [];\n    }\n    function validateFunctionDefault(options) {\n        return options.validateSpec({\n            key: options.key,\n            value: options.value,\n            valueSpec: functionValueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        });\n    }\n}\n\nfunction validateExpression(options) {\n    const expression = (options.expressionContext === 'property' ? createPropertyExpression : createExpression)(deepUnbundle(options.value), options.valueSpec);\n    if (expression.result === 'error') {\n        return expression.value.map((error) => {\n            return new ValidationError(`${options.key}${error.key}`, options.value, error.message);\n        });\n    }\n    const expressionObj = expression.value.expression || expression.value._styleExpression.expression;\n    if (options.expressionContext === 'property' && (options.propertyKey === 'text-font') &&\n        !expressionObj.outputDefined()) {\n        return [new ValidationError(options.key, options.value, `Invalid data expression for \"${options.propertyKey}\". Output values must be contained as literals within the expression.`)];\n    }\n    if (options.expressionContext === 'property' && options.propertyType === 'layout' &&\n        (!isStateConstant(expressionObj))) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with layout properties.')];\n    }\n    if (options.expressionContext === 'filter' && !isStateConstant(expressionObj)) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with filters.')];\n    }\n    if (options.expressionContext && options.expressionContext.indexOf('cluster') === 0) {\n        if (!isGlobalPropertyConstant(expressionObj, ['zoom', 'feature-state'])) {\n            return [new ValidationError(options.key, options.value, '\"zoom\" and \"feature-state\" expressions are not supported with cluster properties.')];\n        }\n        if (options.expressionContext === 'cluster-initial' && !isFeatureConstant(expressionObj)) {\n            return [new ValidationError(options.key, options.value, 'Feature data expressions are not supported with initial expression part of cluster properties.')];\n        }\n    }\n    return [];\n}\n\nfunction validateBoolean(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n    if (type !== 'boolean') {\n        return [new ValidationError(key, value, `boolean expected, ${type} found`)];\n    }\n    return [];\n}\n\nfunction validateColor(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `color expected, ${type} found`)];\n    }\n    if (!Color.parse(String(value))) { // cast String object to string primitive\n        return [new ValidationError(key, value, `color expected, \"${value}\" found`)];\n    }\n    return [];\n}\n\nfunction validateEnum(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const errors = [];\n    if (Array.isArray(valueSpec.values)) { // <=v7\n        if (valueSpec.values.indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${valueSpec.values.join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    else { // >=v8\n        if (Object.keys(valueSpec.values).indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${Object.keys(valueSpec.values).join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    return errors;\n}\n\nfunction validateFilter(options) {\n    if (isExpressionFilter(deepUnbundle(options.value))) {\n        return validateExpression(extendBy({}, options, {\n            expressionContext: 'filter',\n            valueSpec: { value: 'boolean' }\n        }));\n    }\n    else {\n        return validateNonExpressionFilter(options);\n    }\n}\nfunction validateNonExpressionFilter(options) {\n    const value = options.value;\n    const key = options.key;\n    if (getType(value) !== 'array') {\n        return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n    }\n    const styleSpec = options.styleSpec;\n    let type;\n    let errors = [];\n    if (value.length < 1) {\n        return [new ValidationError(key, value, 'filter array must have at least 1 element')];\n    }\n    errors = errors.concat(validateEnum({\n        key: `${key}[0]`,\n        value: value[0],\n        valueSpec: styleSpec.filter_operator,\n        style: options.style,\n        styleSpec: options.styleSpec\n    }));\n    switch (unbundle(value[0])) {\n        case '<':\n        case '<=':\n        case '>':\n        case '>=':\n            if (value.length >= 2 && unbundle(value[1]) === '$type') {\n                errors.push(new ValidationError(key, value, `\"$type\" cannot be use with operator \"${value[0]}\"`));\n            }\n        /* falls through */\n        case '==':\n        case '!=':\n            if (value.length !== 3) {\n                errors.push(new ValidationError(key, value, `filter array for operator \"${value[0]}\" must have 3 elements`));\n            }\n        /* falls through */\n        case 'in':\n        case '!in':\n            if (value.length >= 2) {\n                type = getType(value[1]);\n                if (type !== 'string') {\n                    errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n                }\n            }\n            for (let i = 2; i < value.length; i++) {\n                type = getType(value[i]);\n                if (unbundle(value[1]) === '$type') {\n                    errors = errors.concat(validateEnum({\n                        key: `${key}[${i}]`,\n                        value: value[i],\n                        valueSpec: styleSpec.geometry_type,\n                        style: options.style,\n                        styleSpec: options.styleSpec\n                    }));\n                }\n                else if (type !== 'string' && type !== 'number' && type !== 'boolean') {\n                    errors.push(new ValidationError(`${key}[${i}]`, value[i], `string, number, or boolean expected, ${type} found`));\n                }\n            }\n            break;\n        case 'any':\n        case 'all':\n        case 'none':\n            for (let i = 1; i < value.length; i++) {\n                errors = errors.concat(validateNonExpressionFilter({\n                    key: `${key}[${i}]`,\n                    value: value[i],\n                    style: options.style,\n                    styleSpec: options.styleSpec\n                }));\n            }\n            break;\n        case 'has':\n        case '!has':\n            type = getType(value[1]);\n            if (value.length !== 2) {\n                errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n            }\n            else if (type !== 'string') {\n                errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n            }\n            break;\n    }\n    return errors;\n}\n\nfunction validateProperty(options, propertyType) {\n    const key = options.key;\n    const validateSpec = options.validateSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const value = options.value;\n    const propertyKey = options.objectKey;\n    const layerSpec = styleSpec[`${propertyType}_${options.layerType}`];\n    if (!layerSpec)\n        return [];\n    const transitionMatch = propertyKey.match(/^(.*)-transition$/);\n    if (propertyType === 'paint' && transitionMatch && layerSpec[transitionMatch[1]] && layerSpec[transitionMatch[1]].transition) {\n        return validateSpec({\n            key,\n            value,\n            valueSpec: styleSpec.transition,\n            style,\n            styleSpec\n        });\n    }\n    const valueSpec = options.valueSpec || layerSpec[propertyKey];\n    if (!valueSpec) {\n        return [new ValidationError(key, value, `unknown property \"${propertyKey}\"`)];\n    }\n    let tokenMatch;\n    if (getType(value) === 'string' && supportsPropertyExpression(valueSpec) && !valueSpec.tokens && (tokenMatch = /^{([^}]+)}$/.exec(value))) {\n        return [new ValidationError(key, value, `\"${propertyKey}\" does not support interpolation syntax\\n` +\n                `Use an identity property function instead: \\`{ \"type\": \"identity\", \"property\": ${JSON.stringify(tokenMatch[1])} }\\`.`)];\n    }\n    const errors = [];\n    if (options.layerType === 'symbol') {\n        if (propertyKey === 'text-field' && style && !style.glyphs) {\n            errors.push(new ValidationError(key, value, 'use of \"text-field\" requires a style \"glyphs\" property'));\n        }\n        if (propertyKey === 'text-font' && isFunction$1(deepUnbundle(value)) && unbundle(value.type) === 'identity') {\n            errors.push(new ValidationError(key, value, '\"text-font\" does not support identity functions'));\n        }\n    }\n    return errors.concat(validateSpec({\n        key: options.key,\n        value,\n        valueSpec,\n        style,\n        styleSpec,\n        expressionContext: 'property',\n        propertyType,\n        propertyKey\n    }));\n}\n\nfunction validatePaintProperty(options) {\n    return validateProperty(options, 'paint');\n}\n\nfunction validateLayoutProperty(options) {\n    return validateProperty(options, 'layout');\n}\n\nfunction validateLayer(options) {\n    let errors = [];\n    const layer = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    if (!layer.type && !layer.ref) {\n        errors.push(new ValidationError(key, layer, 'either \"type\" or \"ref\" is required'));\n    }\n    let type = unbundle(layer.type);\n    const ref = unbundle(layer.ref);\n    if (layer.id) {\n        const layerId = unbundle(layer.id);\n        for (let i = 0; i < options.arrayIndex; i++) {\n            const otherLayer = style.layers[i];\n            if (unbundle(otherLayer.id) === layerId) {\n                errors.push(new ValidationError(key, layer.id, `duplicate layer id \"${layer.id}\", previously used at line ${otherLayer.id.__line__}`));\n            }\n        }\n    }\n    if ('ref' in layer) {\n        ['type', 'source', 'source-layer', 'filter', 'layout'].forEach((p) => {\n            if (p in layer) {\n                errors.push(new ValidationError(key, layer[p], `\"${p}\" is prohibited for ref layers`));\n            }\n        });\n        let parent;\n        style.layers.forEach((layer) => {\n            if (unbundle(layer.id) === ref)\n                parent = layer;\n        });\n        if (!parent) {\n            errors.push(new ValidationError(key, layer.ref, `ref layer \"${ref}\" not found`));\n        }\n        else if (parent.ref) {\n            errors.push(new ValidationError(key, layer.ref, 'ref cannot reference another ref layer'));\n        }\n        else {\n            type = unbundle(parent.type);\n        }\n    }\n    else if (type !== 'background') {\n        if (!layer.source) {\n            errors.push(new ValidationError(key, layer, 'missing required property \"source\"'));\n        }\n        else {\n            const source = style.sources && style.sources[layer.source];\n            const sourceType = source && unbundle(source.type);\n            if (!source) {\n                errors.push(new ValidationError(key, layer.source, `source \"${layer.source}\" not found`));\n            }\n            else if (sourceType === 'vector' && type === 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster source`));\n            }\n            else if (sourceType !== 'raster-dem' && type === 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster-dem source`));\n            }\n            else if (sourceType === 'raster' && type !== 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a vector source`));\n            }\n            else if (sourceType === 'vector' && !layer['source-layer']) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" must specify a \"source-layer\"`));\n            }\n            else if (sourceType === 'raster-dem' && type !== 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, 'raster-dem source can only be used with layer type \\'hillshade\\'.'));\n            }\n            else if (type === 'line' && layer.paint && layer.paint['line-gradient'] &&\n                (sourceType !== 'geojson' || !source.lineMetrics)) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" specifies a line-gradient, which requires a GeoJSON source with \\`lineMetrics\\` enabled.`));\n            }\n        }\n    }\n    errors = errors.concat(validateObject({\n        key,\n        value: layer,\n        valueSpec: styleSpec.layer,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        validateSpec: options.validateSpec,\n        objectElementValidators: {\n            '*'() {\n                return [];\n            },\n            // We don't want to enforce the spec's `\"requires\": true` for backward compatibility with refs;\n            // the actual requirement is validated above. See https://github.com/mapbox/mapbox-gl-js/issues/5772.\n            type() {\n                return options.validateSpec({\n                    key: `${key}.type`,\n                    value: layer.type,\n                    valueSpec: styleSpec.layer.type,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    object: layer,\n                    objectKey: 'type'\n                });\n            },\n            filter: validateFilter,\n            layout(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validateLayoutProperty(extendBy({ layerType: type }, options));\n                        }\n                    }\n                });\n            },\n            paint(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validatePaintProperty(extendBy({ layerType: type }, options));\n                        }\n                    }\n                });\n            }\n        }\n    }));\n    return errors;\n}\n\nfunction validateString(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `string expected, ${type} found`)];\n    }\n    return [];\n}\n\nfunction validateRasterDEMSource(options) {\n    var _a;\n    const sourceName = (_a = options.sourceName) !== null && _a !== undefined ? _a : '';\n    const rasterDEM = options.value;\n    const styleSpec = options.styleSpec;\n    const rasterDEMSpec = styleSpec.source_raster_dem;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(rasterDEM);\n    if (rasterDEM === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors.push(new ValidationError('source_raster_dem', rasterDEM, `object expected, ${rootType} found`));\n        return errors;\n    }\n    const encoding = unbundle(rasterDEM.encoding);\n    const isCustomEncoding = encoding === 'custom';\n    const customEncodingKeys = ['redFactor', 'greenFactor', 'blueFactor', 'baseShift'];\n    const encodingName = options.value.encoding ? `\"${options.value.encoding}\"` : 'Default';\n    for (const key in rasterDEM) {\n        if (!isCustomEncoding && customEncodingKeys.includes(key)) {\n            errors.push(new ValidationError(key, rasterDEM[key], `In \"${sourceName}\": \"${key}\" is only valid when \"encoding\" is set to \"custom\". ${encodingName} encoding found`));\n        }\n        else if (rasterDEMSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: rasterDEM[key],\n                valueSpec: rasterDEMSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors.push(new ValidationError(key, rasterDEM[key], `unknown property \"${key}\"`));\n        }\n    }\n    return errors;\n}\n\nconst objectElementValidators = {\n    promoteId: validatePromoteId\n};\nfunction validateSource(options) {\n    const value = options.value;\n    const key = options.key;\n    const styleSpec = options.styleSpec;\n    const style = options.style;\n    const validateSpec = options.validateSpec;\n    if (!value.type) {\n        return [new ValidationError(key, value, '\"type\" is required')];\n    }\n    const type = unbundle(value.type);\n    let errors;\n    switch (type) {\n        case 'vector':\n        case 'raster':\n            errors = validateObject({\n                key,\n                value,\n                valueSpec: styleSpec[`source_${type.replace('-', '_')}`],\n                style: options.style,\n                styleSpec,\n                objectElementValidators,\n                validateSpec,\n            });\n            return errors;\n        case 'raster-dem':\n            errors = validateRasterDEMSource({\n                sourceName: key,\n                value,\n                style: options.style,\n                styleSpec,\n                validateSpec,\n            });\n            return errors;\n        case 'geojson':\n            errors = validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_geojson,\n                style,\n                styleSpec,\n                validateSpec,\n                objectElementValidators\n            });\n            if (value.cluster) {\n                for (const prop in value.clusterProperties) {\n                    const [operator, mapExpr] = value.clusterProperties[prop];\n                    const reduceExpr = typeof operator === 'string' ? [operator, ['accumulated'], ['get', prop]] : operator;\n                    errors.push(...validateExpression({\n                        key: `${key}.${prop}.map`,\n                        value: mapExpr,\n                        validateSpec,\n                        expressionContext: 'cluster-map'\n                    }));\n                    errors.push(...validateExpression({\n                        key: `${key}.${prop}.reduce`,\n                        value: reduceExpr,\n                        validateSpec,\n                        expressionContext: 'cluster-reduce'\n                    }));\n                }\n            }\n            return errors;\n        case 'video':\n            return validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_video,\n                style,\n                validateSpec,\n                styleSpec\n            });\n        case 'image':\n            return validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_image,\n                style,\n                validateSpec,\n                styleSpec\n            });\n        case 'canvas':\n            return [new ValidationError(key, null, 'Please use runtime APIs to add canvas sources, rather than including them in stylesheets.', 'source.canvas')];\n        default:\n            return validateEnum({\n                key: `${key}.type`,\n                value: value.type,\n                valueSpec: { values: ['vector', 'raster', 'raster-dem', 'geojson', 'video', 'image'] },\n                style,\n                validateSpec,\n                styleSpec\n            });\n    }\n}\nfunction validatePromoteId({ key, value }) {\n    if (getType(value) === 'string') {\n        return validateString({ key, value });\n    }\n    else {\n        const errors = [];\n        for (const prop in value) {\n            errors.push(...validateString({ key: `${key}.${prop}`, value: value[prop] }));\n        }\n        return errors;\n    }\n}\n\nfunction validateLight(options) {\n    const light = options.value;\n    const styleSpec = options.styleSpec;\n    const lightSpec = styleSpec.light;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(light);\n    if (light === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('light', light, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n    for (const key in light) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n        if (transitionMatch && lightSpec[transitionMatch[1]] && lightSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: light[key],\n                valueSpec: styleSpec.transition,\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else if (lightSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: light[key],\n                valueSpec: lightSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, light[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateSky(options) {\n    const sky = options.value;\n    const styleSpec = options.styleSpec;\n    const skySpec = styleSpec.sky;\n    const style = options.style;\n    const rootType = getType(sky);\n    if (sky === undefined) {\n        return [];\n    }\n    else if (rootType !== 'object') {\n        return [new ValidationError('sky', sky, `object expected, ${rootType} found`)];\n    }\n    let errors = [];\n    for (const key in sky) {\n        if (skySpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: sky[key],\n                valueSpec: skySpec[key],\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, sky[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateTerrain(options) {\n    const terrain = options.value;\n    const styleSpec = options.styleSpec;\n    const terrainSpec = styleSpec.terrain;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(terrain);\n    if (terrain === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('terrain', terrain, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n    for (const key in terrain) {\n        if (terrainSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: terrain[key],\n                valueSpec: terrainSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, terrain[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateFormatted(options) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n    return validateExpression(options);\n}\n\nfunction validateImage(options) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n    return validateExpression(options);\n}\n\nfunction validatePadding(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type === 'array') {\n        if (value.length < 1 || value.length > 4) {\n            return [new ValidationError(key, value, `padding requires 1 to 4 values; ${value.length} values found`)];\n        }\n        const arrayElementSpec = {\n            type: 'number'\n        };\n        let errors = [];\n        for (let i = 0; i < value.length; i++) {\n            errors = errors.concat(options.validateSpec({\n                key: `${key}[${i}]`,\n                value: value[i],\n                validateSpec: options.validateSpec,\n                valueSpec: arrayElementSpec\n            }));\n        }\n        return errors;\n    }\n    else {\n        return validateNumber({\n            key,\n            value,\n            valueSpec: {}\n        });\n    }\n}\n\nfunction validateVariableAnchorOffsetCollection(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    const styleSpec = options.styleSpec;\n    if (type !== 'array' || value.length < 1 || value.length % 2 !== 0) {\n        return [new ValidationError(key, value, 'variableAnchorOffsetCollection requires a non-empty array of even length')];\n    }\n    let errors = [];\n    for (let i = 0; i < value.length; i += 2) {\n        // Elements in even positions should be values from text-anchor enum\n        errors = errors.concat(validateEnum({\n            key: `${key}[${i}]`,\n            value: value[i],\n            valueSpec: styleSpec['layout_symbol']['text-anchor']\n        }));\n        // Elements in odd positions should be points (2-element numeric arrays)\n        errors = errors.concat(validateArray({\n            key: `${key}[${i + 1}]`,\n            value: value[i + 1],\n            valueSpec: {\n                length: 2,\n                value: 'number'\n            },\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec\n        }));\n    }\n    return errors;\n}\n\nfunction validateSprite(options) {\n    let errors = [];\n    const sprite = options.value;\n    const key = options.key;\n    if (!Array.isArray(sprite)) {\n        return validateString({\n            key,\n            value: sprite\n        });\n    }\n    else {\n        const allSpriteIds = [];\n        const allSpriteURLs = [];\n        for (const i in sprite) {\n            if (sprite[i].id && allSpriteIds.includes(sprite[i].id))\n                errors.push(new ValidationError(key, sprite, `all the sprites' ids must be unique, but ${sprite[i].id} is duplicated`));\n            allSpriteIds.push(sprite[i].id);\n            if (sprite[i].url && allSpriteURLs.includes(sprite[i].url))\n                errors.push(new ValidationError(key, sprite, `all the sprites' URLs must be unique, but ${sprite[i].url} is duplicated`));\n            allSpriteURLs.push(sprite[i].url);\n            const pairSpec = {\n                id: {\n                    type: 'string',\n                    required: true,\n                },\n                url: {\n                    type: 'string',\n                    required: true,\n                }\n            };\n            errors = errors.concat(validateObject({\n                key: `${key}[${i}]`,\n                value: sprite[i],\n                valueSpec: pairSpec,\n                validateSpec: options.validateSpec,\n            }));\n        }\n        return errors;\n    }\n}\n\nfunction validateProjection(options) {\n    const projection = options.value;\n    const styleSpec = options.styleSpec;\n    const projectionSpec = styleSpec.projection;\n    const style = options.style;\n    const rootType = getType(projection);\n    if (projection === undefined) {\n        return [];\n    }\n    else if (rootType !== 'object') {\n        return [new ValidationError('projection', projection, `object expected, ${rootType} found`)];\n    }\n    let errors = [];\n    for (const key in projection) {\n        if (projectionSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: projection[key],\n                valueSpec: projectionSpec[key],\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, projection[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateProjectionDefinition(options) {\n    const key = options.key;\n    let value = options.value;\n    value = value instanceof String ? value.valueOf() : value;\n    const type = getType(value);\n    if (type === 'array' && !isProjectionDefinitionValue(value) && !isPropertyValueSpecification(value)) {\n        return [new ValidationError(key, value, `projection expected, invalid array ${JSON.stringify(value)} found`)];\n    }\n    else if (!['array', 'string'].includes(type)) {\n        return [new ValidationError(key, value, `projection expected, invalid type \"${type}\" found`)];\n    }\n    return [];\n}\nfunction isPropertyValueSpecification(value) {\n    if (['interpolate', 'step', 'literal'].includes(value[0])) {\n        return true;\n    }\n    return false;\n}\nfunction isProjectionDefinitionValue(value) {\n    return Array.isArray(value) &&\n        value.length === 3 &&\n        typeof value[0] === 'string' &&\n        typeof value[1] === 'string' &&\n        typeof value[2] === 'number';\n}\n\nconst VALIDATORS = {\n    '*'() {\n        return [];\n    },\n    'array': validateArray,\n    'boolean': validateBoolean,\n    'number': validateNumber,\n    'color': validateColor,\n    'constants': validateConstants,\n    'enum': validateEnum,\n    'filter': validateFilter,\n    'function': validateFunction,\n    'layer': validateLayer,\n    'object': validateObject,\n    'source': validateSource,\n    'light': validateLight,\n    'sky': validateSky,\n    'terrain': validateTerrain,\n    'projection': validateProjection,\n    'projectionDefinition': validateProjectionDefinition,\n    'string': validateString,\n    'formatted': validateFormatted,\n    'resolvedImage': validateImage,\n    'padding': validatePadding,\n    'variableAnchorOffsetCollection': validateVariableAnchorOffsetCollection,\n    'sprite': validateSprite,\n};\n/**\n * Main recursive validation function used internally.\n * You should use `validateStyleMin` in the browser or `validateStyle` in node env.\n * @param options - the options object\n * @param options.key - string representing location of validation in style tree. Used only\n * for more informative error reporting.\n * @param options.value - current value from style being evaluated. May be anything from a\n * high level object that needs to be descended into deeper or a simple\n * scalar value.\n * @param options.valueSpec - current spec being evaluated. Tracks value.\n * @param options.styleSpec - current full spec being evaluated.\n * @param options.validateSpec - the validate function itself\n * @param options.style - the style object\n * @param options.objectElementValidators - optional object of functions that will be called\n * @returns an array of errors, or an empty array if no errors are found.\n */\nfunction validate(options) {\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const styleSpec = options.styleSpec;\n    options.validateSpec = validate;\n    if (valueSpec.expression && isFunction$1(unbundle(value))) {\n        return validateFunction(options);\n    }\n    else if (valueSpec.expression && isExpression(deepUnbundle(value))) {\n        return validateExpression(options);\n    }\n    else if (valueSpec.type && VALIDATORS[valueSpec.type]) {\n        return VALIDATORS[valueSpec.type](options);\n    }\n    else {\n        const valid = validateObject(extendBy({}, options, {\n            valueSpec: valueSpec.type ? styleSpec[valueSpec.type] : valueSpec\n        }));\n        return valid;\n    }\n}\n\nfunction validateGlyphsUrl(options) {\n    const value = options.value;\n    const key = options.key;\n    const errors = validateString(options);\n    if (errors.length)\n        return errors;\n    if (value.indexOf('{fontstack}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{fontstack}\" token'));\n    }\n    if (value.indexOf('{range}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{range}\" token'));\n    }\n    return errors;\n}\n\n/**\n * Validate a MapLibre style against the style specification.\n * Use this when running in the browser.\n *\n * @param style - The style to be validated.\n * @param styleSpec - The style specification to validate against.\n * If omitted, the latest style spec is used.\n * @returns an array of errors, or an empty array if no errors are found.\n * @example\n *   const validate = require('@maplibre/maplibre-gl-style-spec/').validateStyleMin;\n *   const errors = validate(style);\n */\nfunction validateStyleMin(style, styleSpec = v8Spec) {\n    let errors = [];\n    errors = errors.concat(validate({\n        key: '',\n        value: style,\n        valueSpec: styleSpec.$root,\n        styleSpec,\n        style,\n        validateSpec: validate,\n        objectElementValidators: {\n            glyphs: validateGlyphsUrl,\n            '*'() {\n                return [];\n            }\n        }\n    }));\n    if (style['constants']) {\n        errors = errors.concat(validateConstants({\n            key: 'constants',\n            value: style['constants'],\n            style,\n            styleSpec,\n            validateSpec: validate,\n        }));\n    }\n    return sortErrors(errors);\n}\nvalidateStyleMin.source = wrapCleanErrors(injectValidateSpec(validateSource));\nvalidateStyleMin.sprite = wrapCleanErrors(injectValidateSpec(validateSprite));\nvalidateStyleMin.glyphs = wrapCleanErrors(injectValidateSpec(validateGlyphsUrl));\nvalidateStyleMin.light = wrapCleanErrors(injectValidateSpec(validateLight));\nvalidateStyleMin.sky = wrapCleanErrors(injectValidateSpec(validateSky));\nvalidateStyleMin.terrain = wrapCleanErrors(injectValidateSpec(validateTerrain));\nvalidateStyleMin.layer = wrapCleanErrors(injectValidateSpec(validateLayer));\nvalidateStyleMin.filter = wrapCleanErrors(injectValidateSpec(validateFilter));\nvalidateStyleMin.paintProperty = wrapCleanErrors(injectValidateSpec(validatePaintProperty));\nvalidateStyleMin.layoutProperty = wrapCleanErrors(injectValidateSpec(validateLayoutProperty));\nfunction injectValidateSpec(validator) {\n    return function (options) {\n        return validator({\n            ...options,\n            validateSpec: validate,\n        });\n    };\n}\nfunction sortErrors(errors) {\n    return [].concat(errors).sort((a, b) => {\n        return a.line - b.line;\n    });\n}\nfunction wrapCleanErrors(inner) {\n    return function (...args) {\n        return sortErrors(inner.apply(this, args));\n    };\n}\n\n// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nconst stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,]/g;\n\nfunction stringify(passedObj, options = {}) {\n  const indent = JSON.stringify(\n    [1],\n    undefined,\n    options.indent === undefined ? 2 : options.indent\n  ).slice(2, -3);\n\n  const maxLength =\n    indent === \"\"\n      ? Infinity\n      : options.maxLength === undefined\n      ? 80\n      : options.maxLength;\n\n  let { replacer } = options;\n\n  return (function _stringify(obj, currentIndent, reserved) {\n    if (obj && typeof obj.toJSON === \"function\") {\n      obj = obj.toJSON();\n    }\n\n    const string = JSON.stringify(obj, replacer);\n\n    if (string === undefined) {\n      return string;\n    }\n\n    const length = maxLength - currentIndent.length - reserved;\n\n    if (string.length <= length) {\n      const prettified = string.replace(\n        stringOrChar,\n        (match, stringLiteral) => {\n          return stringLiteral || `${match} `;\n        }\n      );\n      if (prettified.length <= length) {\n        return prettified;\n      }\n    }\n\n    if (replacer != null) {\n      obj = JSON.parse(string);\n      replacer = undefined;\n    }\n\n    if (typeof obj === \"object\" && obj !== null) {\n      const nextIndent = currentIndent + indent;\n      const items = [];\n      let index = 0;\n      let start;\n      let end;\n\n      if (Array.isArray(obj)) {\n        start = \"[\";\n        end = \"]\";\n        const { length } = obj;\n        for (; index < length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, index === length - 1 ? 0 : 1) ||\n              \"null\"\n          );\n        }\n      } else {\n        start = \"{\";\n        end = \"}\";\n        const keys = Object.keys(obj);\n        const { length } = keys;\n        for (; index < length; index++) {\n          const key = keys[index];\n          const keyPart = `${JSON.stringify(key)}: `;\n          const value = _stringify(\n            obj[key],\n            nextIndent,\n            keyPart.length + (index === length - 1 ? 0 : 1)\n          );\n          if (value !== undefined) {\n            items.push(keyPart + value);\n          }\n        }\n      }\n\n      if (items.length > 0) {\n        return [start, indent + items.join(`,\\n${nextIndent}`), end].join(\n          `\\n${currentIndent}`\n        );\n      }\n    }\n\n    return string;\n  })(passedObj, \"\", 0);\n}\n\nfunction sortKeysBy(obj, reference) {\n    const result = {};\n    for (const key in reference) {\n        if (obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n    }\n    for (const key in obj) {\n        if (result[key] === undefined) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n/**\n * Format a MapLibre Style.  Returns a stringified style with its keys\n * sorted in the same order as the reference style.\n *\n * The optional `space` argument is passed to\n * [`JSON.stringify`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify)\n * to generate formatted output.\n *\n * If `space` is unspecified, a default of `2` spaces will be used.\n *\n * @private\n * @param {Object} style a MapLibre Style\n * @param {number} [space] space argument to pass to `JSON.stringify`\n * @returns {string} stringified formatted JSON\n * @example\n * var fs = require('fs');\n * var format = require('maplibre-gl-style-spec').format;\n * var style = fs.readFileSync('./source.json', 'utf8');\n * fs.writeFileSync('./dest.json', format(style));\n * fs.writeFileSync('./dest.min.json', format(style, 0));\n */\nfunction format(style, space = 2) {\n    style = sortKeysBy(style, v8Spec.$root);\n    if (style.layers) {\n        style.layers = style.layers.map((layer) => sortKeysBy(layer, v8Spec.layer));\n    }\n    return stringify(style, { indent: space });\n}\n\nfunction eachLayout(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('layout') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\nfunction eachPaint(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('paint') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\nfunction resolveConstant(style, value) {\n    if (typeof value === 'string' && value[0] === '@') {\n        return resolveConstant(style, style.constants[value]);\n    }\n    else {\n        return value;\n    }\n}\nfunction isFunction(value) {\n    return Array.isArray(value.stops);\n}\nfunction renameProperty(obj, from, to) {\n    obj[to] = obj[from];\n    delete obj[from];\n}\nfunction migrateV8(style) {\n    style.version = 8;\n    // Rename properties, reverse coordinates in source and layers\n    eachSource(style, (source) => {\n        if (source.type === 'video' && source['url'] !== undefined) {\n            renameProperty(source, 'url', 'urls');\n        }\n        if (source.type === 'video') {\n            source.coordinates.forEach((coord) => {\n                return coord.reverse();\n            });\n        }\n    });\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['symbol-min-distance'] !== undefined) {\n                renameProperty(layout, 'symbol-min-distance', 'symbol-spacing');\n            }\n        });\n        eachPaint(layer, (paint) => {\n            if (paint['background-image'] !== undefined) {\n                renameProperty(paint, 'background-image', 'background-pattern');\n            }\n            if (paint['line-image'] !== undefined) {\n                renameProperty(paint, 'line-image', 'line-pattern');\n            }\n            if (paint['fill-image'] !== undefined) {\n                renameProperty(paint, 'fill-image', 'fill-pattern');\n            }\n        });\n    });\n    // Inline Constants\n    eachProperty(style, { paint: true, layout: true }, (property) => {\n        const value = resolveConstant(style, property.value);\n        if (isFunction(value)) {\n            value.stops.forEach((stop) => {\n                stop[1] = resolveConstant(style, stop[1]);\n            });\n        }\n        property.set(value);\n    });\n    delete style['constants'];\n    eachLayer(style, (layer) => {\n        // get rid of text-max-size, icon-max-size\n        // turn text-size, icon-size into layout properties\n        // https://github.com/mapbox/mapbox-gl-style-spec/issues/255\n        eachLayout(layer, (layout) => {\n            delete layout['text-max-size'];\n            delete layout['icon-max-size'];\n        });\n        eachPaint(layer, (paint) => {\n            if (paint['text-size']) {\n                if (!layer.layout)\n                    layer.layout = {};\n                layer.layout['text-size'] = paint['text-size'];\n                delete paint['text-size'];\n            }\n            if (paint['icon-size']) {\n                if (!layer.layout)\n                    layer.layout = {};\n                layer.layout['icon-size'] = paint['icon-size'];\n                delete paint['icon-size'];\n            }\n        });\n    });\n    function migrateFontStack(font) {\n        function splitAndTrim(string) {\n            return string.split(',').map((s) => {\n                return s.trim();\n            });\n        }\n        if (Array.isArray(font)) {\n            // Assume it's a previously migrated font-array.\n            return font;\n        }\n        else if (typeof font === 'string') {\n            return splitAndTrim(font);\n        }\n        else if (typeof font === 'object') {\n            font.stops.forEach((stop) => {\n                stop[1] = splitAndTrim(stop[1]);\n            });\n            return font;\n        }\n        else {\n            throw new Error('unexpected font value');\n        }\n    }\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['text-font']) {\n                layout['text-font'] = migrateFontStack(layout['text-font']);\n            }\n        });\n    });\n    // Reverse order of symbol layers. This is an imperfect migration.\n    //\n    // The order of a symbol layer in the layers list affects two things:\n    // - how it is drawn relative to other layers (like oneway arrows below bridges)\n    // - the placement priority compared to other layers\n    //\n    // It's impossible to reverse the placement priority without breaking the draw order\n    // in some cases. This migration only reverses the order of symbol layers that\n    // are above all other types of layers.\n    //\n    // Symbol layers that are at the top of the map preserve their priority.\n    // Symbol layers that are below another type (line, fill) of layer preserve their draw order.\n    let firstSymbolLayer = 0;\n    for (let i = style.layers.length - 1; i >= 0; i--) {\n        const layer = style.layers[i];\n        if (layer.type !== 'symbol') {\n            firstSymbolLayer = i + 1;\n            break;\n        }\n    }\n    const symbolLayers = style.layers.splice(firstSymbolLayer);\n    symbolLayers.reverse();\n    style.layers = style.layers.concat(symbolLayers);\n    return style;\n}\n\n/**\n * Migrate the given style object in place to use expressions. Specifically,\n * this will convert (a) \"stop\" functions, and (b) legacy filters to their\n * expression equivalents.\n * @param style The style object to migrate.\n * @returns The migrated style object.\n */\nfunction expressions(style) {\n    const converted = [];\n    eachLayer(style, (layer) => {\n        if (layer.filter) {\n            layer.filter = convertFilter(layer.filter);\n        }\n    });\n    eachProperty(style, { paint: true, layout: true }, ({ path, value, reference, set }) => {\n        if (isExpression(value))\n            return;\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            set(convertFunction(value, reference));\n            converted.push(path.join('.'));\n        }\n        else if (reference.tokens && typeof value === 'string') {\n            set(convertTokenString(value));\n        }\n    });\n    return style;\n}\n\n/**\n * Migrate color style values to supported format.\n *\n * @param colorToMigrate Color value to migrate, could be a string or an expression.\n * @returns Color style value in supported format.\n */\nfunction migrateColors(colorToMigrate) {\n    return JSON.parse(migrateHslColors(JSON.stringify(colorToMigrate)));\n}\n/**\n * Created to migrate from colors supported by the former CSS color parsing\n * library `csscolorparser` but not compliant with the CSS Color specification,\n * like `hsl(900, 0.15, 90%)`.\n *\n * @param colorToMigrate Serialized color style value.\n * @returns A serialized color style value in which all non-standard hsl color values\n * have been converted to a format that complies with the CSS Color specification.\n *\n * @example\n * migrateHslColors('\"hsl(900, 0.15, 90%)\"'); // returns '\"hsl(900, 15%, 90%)\"'\n * migrateHslColors('\"hsla(900, .15, .9)\"'); // returns '\"hsl(900, 15%, 90%)\"'\n * migrateHslColors('\"hsl(900, 15%, 90%)\"'); // returns '\"hsl(900, 15%, 90%)\"' - no changes\n */\nfunction migrateHslColors(colorToMigrate) {\n    return colorToMigrate.replace(/\"hsla?\\((.+?)\\)\"/gi, (match, hslArgs) => {\n        const argsMatch = hslArgs.match(/^(.+?)\\s*,\\s*(.+?)\\s*,\\s*(.+?)(?:\\s*,\\s*(.+))?$/i);\n        if (argsMatch) {\n            let [h, s, l, a] = argsMatch.slice(1);\n            [s, l] = [s, l].map(v => v.endsWith('%') ? v : `${parseFloat(v) * 100}%`);\n            return `\"hsl${typeof a === 'string' ? 'a' : ''}(${[h, s, l, a].filter(Boolean).join(',')})\"`;\n        }\n        return match;\n    });\n}\n\n/**\n * Migrate a Mapbox/MapLibre GL Style to the latest version.\n *\n * @param style - a MapLibre Style\n * @returns a migrated style\n * @example\n * const fs = require('fs');\n * const migrate = require('@maplibre/maplibre-gl-style-spec').migrate;\n * const style = fs.readFileSync('./style.json', 'utf8');\n * fs.writeFileSync('./style.json', JSON.stringify(migrate(style)));\n */\nfunction migrate(style) {\n    let migrated = false;\n    if (style.version === 7) {\n        style = migrateV8(style);\n        migrated = true;\n    }\n    if (style.version === 8) {\n        migrated = !!expressions(style);\n        migrated = true;\n    }\n    eachProperty(style, { paint: true, layout: true }, ({ value, reference, set }) => {\n        if (reference.type === 'color') {\n            set(migrateColors(value));\n        }\n    });\n    if (!migrated) {\n        throw new Error(`Cannot migrate from ${style.version}`);\n    }\n    return style;\n}\n\nconst v8 = v8Spec;\nconst expression = {\n    StyleExpression,\n    StylePropertyFunction,\n    ZoomConstantExpression,\n    ZoomDependentExpression,\n    createExpression,\n    createPropertyExpression,\n    isExpression,\n    isExpressionFilter,\n    isZoomExpression,\n    normalizePropertyExpression,\n};\nconst styleFunction = {\n    convertFunction,\n    createFunction,\n    isFunction: isFunction$1\n};\nconst visit = { eachLayer, eachProperty, eachSource };\n\nexport { Color, ColorType, CompoundExpression, EvaluationContext, FormatExpression, Formatted, FormattedSection, FormattedType, Interpolate, Literal, NullType, Padding, ParsingError, ProjectionDefinition, ProjectionDefinitionType, ResolvedImage, Step, StyleExpression, StylePropertyFunction, ValidationError, VariableAnchorOffsetCollection, ZoomConstantExpression, ZoomDependentExpression, classifyRings, convertFilter, convertFunction, createExpression, createFunction, createPropertyExpression, derefLayers, diff, emptyStyle, expression, expressions$1 as expressions, featureFilter, format, styleFunction as function, groupByLayout, interpolateFactory as interpolates, isExpression, isFunction$1 as isFunction, isZoomExpression, v8Spec as latest, migrate, normalizePropertyExpression, supportsPropertyExpression, typeToString as toString, typeOf, v8, validate, validateStyleMin, visit };\n//# sourceMappingURL=index.mjs.map\n","var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 200,\n  'extra-light': 200,\n  light: 300,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  'extra-bold': 800,\n  'ultra-bold': 800,\n  heavy: 900,\n  black: 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900,\n  'ultra-black': 950,\n  'extra-black': 950\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\n/**\n * @param {string|Array<string>} fonts Mapbox GL Style fontstack or single font, e.g. `['Open Sans Regular', 'Arial Unicode MS Regular']` or `'Open Sans Regular'`.\n * @param {number} size Font size in pixels.\n * @param {string|number} [lineHeight] Line height as css line-height.\n * @returns {string} CSS font definition, e.g. `'normal 400 16px/1.2 \"Open Sans\"'`.\n */\nexport default function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        haveStyle = true;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n        haveStyle = true;\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n        haveWeight = true;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n}\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @template {import('./Feature.js').FeatureLike} FeatureType\n */\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default<FeatureType>}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<FeatureType>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default<FeatureType>} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<FeatureType>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in a {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<FeatureType>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader<FeatureType>} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","const mapboxBaseUrl = 'https://api.mapbox.com';\n\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nexport function getMapboxPath(url) {\n  const startsWith = 'mapbox://';\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n  return url.slice(startsWith.length);\n}\n\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeSpriteUrl(url, token, styleUrl) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n  const startsWith = 'sprites/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected sprites url: ${url}`);\n  }\n  const sprite = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${sprite}/sprite?access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeStyleUrl(url, token) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n  const startsWith = 'styles/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected style url: ${url}`);\n  }\n  const style = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${style}?&access_token=${token}`;\n}\n\nconst mapboxSubdomains = ['a', 'b', 'c', 'd'];\n\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {Array<string>} A vector tile template.\n * @private\n */\nexport function normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  const urlObject = new URL(url, styleUrl);\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    if (!token) {\n      return [decodeURI(urlObject.href)];\n    }\n    if (!urlObject.searchParams.has(tokenParam)) {\n      urlObject.searchParams.set(tokenParam, token);\n    }\n    return [decodeURI(urlObject.href)];\n  }\n\n  if (mapboxPath === 'mapbox.satellite') {\n    const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n    return [\n      `https://api.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}${sizeFactor}.webp?access_token=${token}`,\n    ];\n  }\n  return mapboxSubdomains.map(\n    (sub) =>\n      `https://${sub}.tiles.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}.vector.pbf?access_token=${token}`,\n  );\n}\n","import {VectorTile} from 'ol';\nimport TileState from 'ol/TileState.js';\nimport {toPromise} from 'ol/functions.js';\nimport {getUid} from 'ol/util.js';\nimport {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\n\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\n\nlet styleId = 0;\nexport function getStyleId(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  return glStyle.id;\n}\n\nexport function getStyleFunctionKey(glStyle, olLayer) {\n  return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nexport function getFunctionCache(glStyle) {\n  let functionCache = functionCacheByStyleId[glStyle.id];\n  if (!functionCache) {\n    functionCache = {};\n    functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n  }\n  return functionCache;\n}\n\nexport function clearFunctionCache() {\n  for (const key in functionCacheByStyleId) {\n    delete functionCacheByStyleId[key];\n  }\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nexport function getFilterCache(glStyle) {\n  let filterCache = filterCacheByStyleId[glStyle.id];\n  if (!filterCache) {\n    filterCache = {};\n    filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n  }\n  return filterCache;\n}\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nexport function getResolutionForZoom(zoom, resolutions) {\n  const base = Math.floor(zoom);\n  const factor = Math.pow(2, zoom - base);\n  return resolutions[base] / factor;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.request = pendingRequests[url][0];\n    }\n    return pendingRequests[url][1];\n  }\n  const transformedRequest = options.transformRequest\n    ? options.transformRequest(url, resourceType) || url\n    : url;\n  const pendingRequest = toPromise(() => transformedRequest).then(\n    (transformedRequest) => {\n      if (!(transformedRequest instanceof Request)) {\n        transformedRequest = new Request(transformedRequest);\n      }\n      if (!transformedRequest.headers.get('Accept')) {\n        transformedRequest.headers.set('Accept', 'application/json');\n      }\n      if (metadata) {\n        metadata.request = transformedRequest;\n      }\n      return fetch(transformedRequest)\n        .then(function (response) {\n          delete pendingRequests[url];\n          return response.ok\n            ? response.json()\n            : Promise.reject(new Error('Error fetching source ' + url));\n        })\n        .catch(function (error) {\n          delete pendingRequests[url];\n          return Promise.reject(new Error('Error fetching source ' + url));\n        });\n    },\n  );\n  pendingRequests[url] = [transformedRequest, pendingRequest];\n  return pendingRequest;\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise<{tileJson: Object, tileLoadFunction: import('ol/Tile.js').LoadFunction}?>} TileJson and load function\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    let tileLoadFunction;\n    if (options.transformRequest) {\n      tileLoadFunction = (tile, src) => {\n        const transformedRequest = options.transformRequest\n          ? options.transformRequest(src, 'Tiles') || src\n          : src;\n        if (tile instanceof VectorTile) {\n          tile.setLoader((extent, resolution, projection) => {\n            toPromise(() => transformedRequest).then((transformedRequest) => {\n              fetch(transformedRequest)\n                .then((response) => response.arrayBuffer())\n                .then((data) => {\n                  const format = tile.getFormat();\n                  const features = format.readFeatures(data, {\n                    extent: extent,\n                    featureProjection: projection,\n                  });\n                  // @ts-ignore\n                  tile.setFeatures(features);\n                })\n                .catch((e) => tile.setState(TileState.ERROR));\n            });\n          });\n        } else {\n          const img = tile.getImage();\n          toPromise(() => transformedRequest).then((transformedRequest) => {\n            if (transformedRequest instanceof Request) {\n              fetch(transformedRequest)\n                .then((response) => response.blob())\n                .then((blob) => {\n                  const url = URL.createObjectURL(blob);\n                  img.addEventListener('load', () => URL.revokeObjectURL(url));\n                  img.addEventListener('error', () => URL.revokeObjectURL(url));\n                  img.src = url;\n                })\n                .catch((e) => tile.setState(TileState.ERROR));\n            } else {\n              img.src = transformedRequest;\n            }\n          });\n        }\n      };\n    }\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href,\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve({\n          tileJson: Object.assign({}, glSource, {\n            url: undefined,\n            tiles: normalizedSourceUrl,\n          }),\n          tileLoadFunction,\n        });\n      } else {\n        const metadata = {};\n        promise = fetchResource(\n          'Source',\n          normalizedSourceUrl[0],\n          options,\n          metadata,\n        ).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            if (tileJson.scheme === 'tms') {\n              tileUrl = tileUrl.replace('{y}', '{-y}');\n            }\n            return normalizeSourceUrl(\n              tileUrl,\n              options.accessToken,\n              options.accessTokenParam || 'access_token',\n              metadata.request.url,\n            )[0];\n          });\n          return Promise.resolve({tileJson, tileLoadFunction});\n        });\n      }\n    } else {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          if (glSource.scheme === 'tms') {\n            tileUrl = tileUrl.replace('{y}', '{-y}');\n          }\n          return normalizeSourceUrl(\n            tileUrl,\n            options.accessToken,\n            options.accessTokenParam || 'access_token',\n            styleUrl || location.href,\n          )[0];\n        }),\n      });\n      promise = Promise.resolve({\n        tileJson: Object.assign({}, glSource),\n        tileLoadFunction,\n      });\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nexport function drawIconHalo(\n  spriteImage,\n  spriteImageData,\n  haloWidth,\n  haloColor,\n) {\n  const imgSize = [\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height,\n  ];\n  const imageCanvas = createCanvas(imgSize[0], imgSize[1]);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    spriteImage,\n    spriteImageData.x,\n    spriteImageData.y,\n    spriteImageData.width,\n    spriteImageData.height,\n    haloWidth * spriteImageData.pixelRatio,\n    haloWidth * spriteImageData.pixelRatio,\n    spriteImageData.width,\n    spriteImageData.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n  imageContext.globalCompositeOperation = 'destination-over';\n  imageContext.fillStyle = `rgba(${haloColor.r * 255},${haloColor.g * 255},${\n    haloColor.b * 255\n  },${haloColor.a})`;\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const alpha = data[index + 3];\n      if (alpha > 0) {\n        imageContext.arc(\n          i,\n          j,\n          haloWidth * spriteImageData.pixelRatio,\n          0,\n          2 * Math.PI,\n        );\n      }\n    }\n  }\n  imageContext.fill();\n  return imageCanvas;\n}\n\nfunction smoothstep(min, max, value) {\n  const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n  return x * x * (3 - 2 * x);\n}\n\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nexport function drawSDF(image, area, color) {\n  const imageCanvas = createCanvas(area.width, area.height);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    image,\n    area.x,\n    area.y,\n    area.width,\n    area.height,\n    0,\n    0,\n    area.width,\n    area.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const dist = data[index + 3] / 255;\n\n      const buffer = 0.75;\n      const gamma = 0.1;\n\n      const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n      if (alpha > 0) {\n        data[index + 0] = Math.round(255 * color.r * alpha);\n        data[index + 1] = Math.round(255 * color.g * alpha);\n        data[index + 2] = Math.round(255 * color.b * alpha);\n        data[index + 3] = Math.round(255 * alpha);\n      } else {\n        data[index + 3] = 0;\n      }\n    }\n  }\n  imageContext.putImageData(imageData, 0, 0);\n  return imageCanvas;\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @private\n */\n","import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts, registerFont} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1),\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n  if (!loadedFontFamilies) {\n    loadedFontFamilies = {};\n    const styleSheets = document.styleSheets;\n    for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n      const styleSheet = /** @type {CSSStyleSheet} */ (styleSheets[i]);\n      try {\n        const cssRules = styleSheet.rules || styleSheet.cssRules;\n        if (cssRules) {\n          for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n            const cssRule = cssRules[j];\n            if (cssRule.type == 5) {\n              const match = cssRule.cssText.match(fontFamilyRegEx);\n              loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n            }\n          }\n        }\n      } catch {\n        // empty catch block\n      }\n    }\n  }\n  return family in loadedFontFamilies;\n}\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(\n  fonts,\n  templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css',\n) {\n  const fontsKey = fonts.toString();\n  if (fontsKey in processedFontFamilies) {\n    return processedFontFamilies[fontsKey];\n  }\n  const fontDescriptions = [];\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n    const font = fonts[i];\n    const cssFont = mb2css(font, 1);\n    registerFont(cssFont);\n    const parts = cssFont.split(' ');\n    fontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n    const fontDescription = fontDescriptions[i];\n    const family = fontDescription[0];\n    if (!hasFontFamily(family)) {\n      if (\n        checkedFonts.get(\n          `${fontDescription[2]}\\n${fontDescription[1]} \\n${family}`,\n        ) !== 100\n      ) {\n        const fontUrl = templateUrl\n          .replace('{font-family}', family.replace(/ /g, '-').toLowerCase())\n          .replace('{Font+Family}', family.replace(/ /g, '+'))\n          .replace('{fontweight}', fontDescription[1])\n          .replace(\n            '{-fontstyle}',\n            fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1'),\n          )\n          .replace('{fontstyle}', fontDescription[2]);\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  }\n  processedFontFamilies[fontsKey] = fonts;\n  return fonts;\n}\n","/*\nol-mapbox-style - Use Mapbox/MapLibre Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport {\n  Color,\n  convertFunction,\n  createPropertyExpression,\n  derefLayers,\n  featureFilter as createFilter,\n  isExpression,\n  isFunction,\n  v8 as spec,\n} from '@maplibre/maplibre-gl-style-spec';\nimport mb2css from 'mapbox-to-css-font';\nimport {toPromise} from 'ol/functions.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\n\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  clearFunctionCache,\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  drawIconHalo,\n  drawSDF,\n  getFilterCache,\n  getFunctionCache,\n  getStyleFunctionKey,\n  getZoomForResolution,\n} from './util.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n * @typedef {import('./util.js').ResourceType} ResourceType\n */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec,\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', '),\n    );\n  }\n  return compiledExpression.value;\n};\n\nconst emptyObj = {};\nconst zoomObj = {zoom: 0};\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  zoom,\n  feature,\n  functionCache,\n  featureState,\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); //eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  zoomObj.zoom = zoom;\n  return functions[property](zoomObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {\"icon\"|\"text\"} prefix Style property prefix.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getDeclutterMode(layer, zoom, feature, prefix, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    `${prefix}-allow-overlap`,\n    zoom,\n    feature,\n    functionCache,\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    `${prefix}-ignore-placement`,\n    zoom,\n    feature,\n    functionCache,\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); //eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    filterCache[layerId] = createFilter(filter).filter;\n  }\n  zoomObj.zoom = zoom;\n  return filterCache[layerId](zoomObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  if (enabled !== renderTransparentEnabled) {\n    clearFunctionCache();\n    renderTransparentEnabled = enabled;\n  }\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox/MapLibre Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\nexport const styleFunctionArgs = {};\n\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox/MapLibre Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox/MapLibre Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox/MapLibre Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox/MapLibre Style object.\n * @param {string|Request|Promise<string|Request>} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox/MapLibre Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox/MapLibre Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox/MapLibre Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined,\n  getImage = undefined,\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n  styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] =\n    Array.from(arguments);\n\n  let spriteImage, spriteImageSize;\n  let spriteImageUnSDFed;\n\n  if (spriteImageUrl) {\n    if (typeof Image !== 'undefined') {\n      const img = new Image();\n      let blobUrl;\n      toPromise(() => spriteImageUrl).then((spriteImageUrl) => {\n        if (spriteImageUrl instanceof Request) {\n          fetch(spriteImageUrl)\n            .then((response) => response.blob())\n            .then((blob) => {\n              blobUrl = URL.createObjectURL(blob);\n              img.src = blobUrl;\n            })\n            .catch(() => {});\n        } else {\n          img.crossOrigin = 'anonymous';\n          img.src = spriteImageUrl;\n          if (blobUrl) {\n            URL.revokeObjectURL(blobUrl);\n          }\n        }\n      });\n      img.onload = function () {\n        spriteImage = img;\n        spriteImageSize = [img.width, img.height];\n        olLayer.changed();\n        img.onload = null;\n      };\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) { //eslint-disable-line\n      const worker = /** @type {*} */ (self);\n      // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n      worker.postMessage({\n        action: 'loadImage',\n        src: spriteImageUrl,\n      });\n      worker.addEventListener('message', function handler(event) {\n        if (\n          event.data.action === 'imageLoaded' &&\n          event.data.src === spriteImageUrl\n        ) {\n          spriteImage = event.data.image;\n          spriteImageSize = [spriteImage.width, spriteImage.height];\n        }\n      });\n    }\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = getFunctionCache(glStyle);\n  const filterCache = getFilterCache(glStyle);\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      (Array.isArray(sourceOrLayers) && sourceOrLayers.indexOf(layerId) !== -1)\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`,\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`,\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n  const styleFunction = function (feature, resolution, onlyLayer) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties.layer];\n    if (!layers) {\n      return undefined;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    const type = types[feature.getGeometry().getType()];\n    const f = {\n      id: feature.getId(),\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n      if (onlyLayer !== undefined && onlyLayer !== layerId) {\n        continue;\n      }\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              if (spriteImage && spriteData && spriteData[icon]) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n                opacity,\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          if (!('line-pattern' in paint)) {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'line-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              getValue(\n                layer,\n                'paint',\n                'line-opacity',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n          } else {\n            color = undefined;\n          }\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null,\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            if (\n              (spriteImage && spriteData && spriteData[icon]) ||\n              imageElement\n            ) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              );\n              if (type == 2) {\n                const geom = /** @type {*} */ (feature.getGeometry());\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2),\n                    ),\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        2,\n                        {},\n                        undefined,\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState,\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const maxX = Math.max(x1, x2);\n                        const xM = midpoint[0];\n                        const yM = midpoint[1];\n                        const dotProduct =\n                          (y2 - y1) * (xM - x1) - (x2 - x1) * (yM - y1);\n                        if (\n                          Math.abs(dotProduct) < 0.001 && //midpoint is aligned with the segment\n                          xM <= maxX &&\n                          xM >= minX //midpoint is on the segment and not outside it\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  const haloWidth = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-width',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getDeclutterMode(\n                      layer,\n                      zoom,\n                      f,\n                      'icon',\n                      functionCache,\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      ).slice(0);\n                      displacement[0] *= iconSize;\n                      displacement[1] *= -iconSize;\n                    }\n                    let color = iconColor\n                      ? [\n                          iconColor.r * 255,\n                          iconColor.g * 255,\n                          iconColor.b * 255,\n                          iconColor.a,\n                        ]\n                      : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                        scale: iconSize,\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [\n                          imageElement.width,\n                          imageElement.height,\n                        ];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, size, offset;\n                      if (haloWidth) {\n                        if (spriteImageData.sdf) {\n                          img = drawIconHalo(\n                            drawSDF(\n                              spriteImage,\n                              spriteImageData,\n                              iconColor || [0, 0, 0, 1],\n                            ),\n                            {\n                              x: 0,\n                              y: 0,\n                              width: spriteImageData.width,\n                              height: spriteImageData.height,\n                              pixelRatio: spriteImageData.pixelRatio,\n                            },\n                            haloWidth,\n                            haloColor,\n                          );\n                          color = undefined; // do not tint haloed icons\n                        } else {\n                          img = drawIconHalo(\n                            spriteImage,\n                            spriteImageData,\n                            haloWidth,\n                            haloColor,\n                          );\n                        }\n                      } else {\n                        if (spriteImageData.sdf) {\n                          if (!spriteImageUnSDFed) {\n                            spriteImageUnSDFed = drawSDF(\n                              spriteImage,\n                              {\n                                x: 0,\n                                y: 0,\n                                width: spriteImageSize[0],\n                                height: spriteImageSize[1],\n                              },\n                              {r: 1, g: 1, b: 1, a: 1},\n                            );\n                          }\n                          img = spriteImageUnSDFed;\n                        } else {\n                          img = spriteImage;\n                        }\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        // @ts-ignore\n                        imgSize: spriteImageSize,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          zoom,\n                          f,\n                          functionCache,\n                          featureState,\n                        ),\n                      ),\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState,\n                    ),\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    ],\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n\n          const circleTranslate = getValue(\n            layer,\n            'paint',\n            'circle-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth +\n            '.' +\n            circleTranslate[0] +\n            '.' +\n            circleTranslate[1];\n\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              displacement: [circleTranslate[0], -circleTranslate[1]],\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          font = mb2css(\n            getFonts\n              ? getFonts(\n                  fontArray,\n                  glStyle.metadata\n                    ? glStyle.metadata['ol:webfonts']\n                    : undefined,\n                )\n              : fontArray,\n            textSize,\n            textLineHeight,\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight,\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return acc;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing,\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          const declutterMode = getDeclutterMode(\n            layer,\n            zoom,\n            f,\n            'text',\n            functionCache,\n          );\n          if (!style.getText()) {\n            style.setText(text);\n          }\n          text = style.getText();\n          if (\n            !text ||\n            ('getDeclutterMode' in text &&\n              text.getDeclutterMode() !== declutterMode)\n          ) {\n            text = new Text({\n              padding: [2, 2, 2, 2],\n              // @ts-ignore\n              declutterMode: declutterMode,\n            });\n            style.setText(text);\n          }\n          const textTransform = getValue(\n            layer,\n            'layout',\n            'text-transform',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n              ? applyLetterSpacing(label, letterSpacing)\n              : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            ),\n          );\n          if (typeof text.setKeepUpright === 'function') {\n            const keepUpright = getValue(\n              layer,\n              'layout',\n              'text-keep-upright',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setKeepUpright(keepUpright);\n          }\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                );\n          let textAlign;\n          if (placement === 'line-center') {\n            text.setPlacement('line');\n            textAlign = 'center';\n          } else {\n            text.setPlacement(placement);\n          }\n          if (placement === 'line' && typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(\n              layer,\n              'layout',\n              'symbol-spacing',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n              ) *\n                label.length) /\n                wrappedLabel.length,\n            );\n            text.setRotateWithView(false);\n          }\n          text.setTextAlign(textAlign);\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0],\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1],\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            ),\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            opacity,\n          );\n          if (haloColor && textHaloWidth > 0) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize,\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if ('set' in feature) {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n    return undefined;\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n  return styleFunction;\n}\n\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nexport function getStyleForLayer(feature, resolution, olLayer, layerId) {\n  const evaluateStyle = olLayer.getStyleFunction();\n  if (evaluateStyle.length === 3) {\n    // @ts-ignore\n    return evaluateStyle(feature, resolution, layerId);\n  }\n  return undefined;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n","\nconst SHIFT_LEFT_32 = (1 << 16) * (1 << 16);\nconst SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nconst TEXT_DECODER_MIN_LENGTH = 12;\nconst utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8');\n\nconst PBF_VARINT  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nconst PBF_FIXED64 = 1; // 64-bit: double, fixed64, sfixed64\nconst PBF_BYTES   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nconst PBF_FIXED32 = 5; // 32-bit: float, fixed32, sfixed32\n\nexport default class Pbf {\n    /**\n     * @param {Uint8Array | ArrayBuffer} [buf]\n     */\n    constructor(buf = new Uint8Array(16)) {\n        this.buf = ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf);\n        this.dataView = new DataView(this.buf.buffer);\n        this.pos = 0;\n        this.type = 0;\n        this.length = this.buf.length;\n    }\n\n    // === READING =================================================================\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     * @param {number} [end]\n     */\n    readFields(readField, result, end = this.length) {\n        while (this.pos < end) {\n            const val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    }\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     */\n    readMessage(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    }\n\n    readFixed32() {\n        const val = this.dataView.getUint32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readSFixed32() {\n        const val = this.dataView.getInt32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getUint32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readSFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getInt32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readFloat() {\n        const val = this.dataView.getFloat32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readDouble() {\n        const val = this.dataView.getFloat64(this.pos, true);\n        this.pos += 8;\n        return val;\n    }\n\n    /**\n     * @param {boolean} [isSigned]\n     */\n    readVarint(isSigned) {\n        const buf = this.buf;\n        let val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    }\n\n    readVarint64() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    }\n\n    readSVarint() {\n        const num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    }\n\n    readBoolean() {\n        return Boolean(this.readVarint());\n    }\n\n    readString() {\n        const end = this.readVarint() + this.pos;\n        const pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return utf8TextDecoder.decode(this.buf.subarray(pos, end));\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    }\n\n    readBytes() {\n        const end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    }\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    /**\n     * @param {number[]} [arr]\n     * @param {boolean} [isSigned]\n     */\n    readPackedVarint(arr = [], isSigned) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSVarint(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    }\n    /** @param {boolean[]} [arr] */\n    readPackedBoolean(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFloat(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedDouble(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    }\n    readPackedEnd() {\n        return this.type === PBF_BYTES ? this.readVarint() + this.pos : this.pos + 1;\n    }\n\n    /** @param {number} val */\n    skip(val) {\n        const type = val & 0x7;\n        if (type === PBF_VARINT) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === PBF_BYTES) this.pos = this.readVarint() + this.pos;\n        else if (type === PBF_FIXED32) this.pos += 4;\n        else if (type === PBF_FIXED64) this.pos += 8;\n        else throw new Error(`Unimplemented type: ${type}`);\n    }\n\n    // === WRITING =================================================================\n\n    /**\n     * @param {number} tag\n     * @param {number} type\n     */\n    writeTag(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    }\n\n    /** @param {number} min */\n    realloc(min) {\n        let length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            const buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.dataView = new DataView(buf.buffer);\n            this.length = length;\n        }\n    }\n\n    finish() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    }\n\n    /** @param {number} val */\n    writeFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeSFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeSFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeVarint(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    }\n\n    /** @param {number} val */\n    writeSVarint(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    }\n\n    /** @param {boolean} val */\n    writeBoolean(val) {\n        this.writeVarint(+val);\n    }\n\n    /** @param {string} str */\n    writeString(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        const startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /** @param {number} val */\n    writeFloat(val) {\n        this.realloc(4);\n        this.dataView.setFloat32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeDouble(val) {\n        this.realloc(8);\n        this.dataView.setFloat64(this.pos, val, true);\n        this.pos += 8;\n    }\n\n    /** @param {Uint8Array} buffer */\n    writeBytes(buffer) {\n        const len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (let i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    }\n\n    /**\n     * @template T\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeRawMessage(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        const startPos = this.pos;\n        fn(obj, this);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /**\n     * @template T\n     * @param {number} tag\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeMessage(tag, fn, obj) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeRawMessage(fn, obj);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean[]} arr\n     */\n    writePackedBoolean(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFloat(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFloat, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedDouble(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedDouble, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {Uint8Array} buffer\n     */\n    writeBytesField(tag, buffer) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeBytes(buffer);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeSFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeSFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeSVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {string} str\n     */\n    writeStringField(tag, str) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeString(str);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFloatField(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFloat(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeDoubleField(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeDouble(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean} val\n     */\n    writeBooleanField(tag, val) {\n        this.writeVarintField(tag, +val);\n    }\n};\n\n/**\n * @param {number} l\n * @param {boolean | undefined} s\n * @param {Pbf} p\n */\nfunction readVarintRemainder(l, s, p) {\n    const buf = p.buf;\n    let h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {boolean} [isSigned]\n */\nfunction toNum(low, high, isSigned) {\n    return isSigned ? high * 0x100000000 + (low >>> 0) : ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\n/**\n * @param {number} val\n * @param {Pbf} pbf\n */\nfunction writeBigVarint(val, pbf) {\n    let low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\n/**\n * @param {number} high\n * @param {number} low\n * @param {Pbf} pbf\n */\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\n/**\n * @param {number} high\n * @param {Pbf} pbf\n */\nfunction writeBigVarintHigh(high, pbf) {\n    const lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\n/**\n * @param {number} startPos\n * @param {number} len\n * @param {Pbf} pbf\n */\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    const extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (let i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFloat(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedDouble(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);\n}\n/**\n * @param {boolean[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedBoolean(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]);\n}\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\n/**\n * @param {Uint8Array} buf\n * @param {number} pos\n * @param {number} end\n */\nfunction readUtf8(buf, pos, end) {\n    let str = '';\n    let i = pos;\n\n    while (i < end) {\n        const b0 = buf[i];\n        let c = null; // codepoint\n        let bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        let b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\n/**\n * @param {Uint8Array} buf\n * @param {string} str\n * @param {number} pos\n */\nfunction writeUtf8(buf, str, pos) {\n    for (let i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=RenderFeature]\n * @extends {FeatureFormat<FeatureType>}\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    this.featureClass = options.featureClass\n      ? options.featureClass\n      : /** @type {import('./Feature.js').FeatureToFeatureClass<FeatureType>} */ (\n          RenderFeature\n        );\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1],\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {FeatureType|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass === RenderFeature) {\n      feature =\n        new /** @type {import('./Feature.js').FeatureToFeatureClass<RenderFeature>} */ (\n          this.featureClass\n        )(geometryType, flatCoordinates, ends, 2, values, id);\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n              ? new LineString(flatCoordinates, 'XY')\n              : geometryType === 'MultiPoint'\n                ? new MultiPoint(flatCoordinates, 'XY')\n                : geometryType === 'MultiLineString'\n                  ? new MultiLineString(flatCoordinates, 'XY', ends)\n                  : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return /** @type {FeatureType} */ (feature);\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return /** @type {Array<FeatureType>} */ (features);\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n            ? pbf.readFloat()\n            : tag === 3\n              ? pbf.readDouble()\n              : tag === 4\n                ? pbf.readVarint64()\n                : tag === 5\n                  ? pbf.readVarint()\n                  : tag === 6\n                    ? pbf.readSVarint()\n                    : tag === 7\n                      ? pbf.readBoolean()\n                      : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image ? null : this.image.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection),\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection,\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image = null;\n          }\n        }\n      } else {\n        this.image = null;\n      }\n    }\n\n    return !!this.image;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image.getExtent();\n    const img = this.image.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth),\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight),\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const image = this.image;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const context = this.getRenderContext(frameState);\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection,\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY,\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      if (opacity !== 1) {\n        context.save();\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.restore();\n      }\n    }\n    this.postRender(this.context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageState from './ImageState.js';\nimport ImageWrapper from './Image.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   * @override\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate,\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution,\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   * @override\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_,\n        true,\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          (e) => {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (\n        this.sourceListenerKey_\n      ),\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\nimport {ceil} from '../math.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.wantedProjection_ = null;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate(),\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (this.wantedProjection_ === projection &&\n            ((this.wantedExtent_ &&\n              containsExtent(this.wantedExtent_, requestExtent)) ||\n              containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedProjection_ = projection;\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader,\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this),\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @override\n   */\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   * @override\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = new ImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height,\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'})),\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.imageOps_ = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this.imageOps_) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this.onWorkerMessage_.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this.onWorkerMessage_.bind(this, 0),\n      );\n    }\n    /**\n     * @type {Array<Worker>}\n     * @private\n     */\n    this.workers_ = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this.queue_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxQueueLength_ = config.queue || Infinity;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.running_ = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this.dataLookup_ = {};\n\n    /**\n     * @type {Job|null}\n     * @private\n     */\n    this.job_ = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this.enqueue_({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this.dispatch_();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  enqueue_(job) {\n    this.queue_.push(job);\n    while (this.queue_.length > this.maxQueueLength_) {\n      this.queue_.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  dispatch_() {\n    if (this.running_ || this.queue_.length === 0) {\n      return;\n    }\n\n    const job = this.queue_.shift();\n    this.job_ = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this.workers_.length;\n    this.running_ = threads;\n    if (threads === 1) {\n      this.workers_[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this.imageOps_,\n          width: width,\n          height: height,\n        },\n        buffers,\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this.workers_[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this.imageOps_,\n          width: width,\n          height: height,\n        },\n        slices,\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  onWorkerMessage_(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this.dataLookup_[index] = event.data;\n    --this.running_;\n    if (this.running_ === 0) {\n      this.resolveJob_();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  resolveJob_() {\n    const job = this.job_;\n    const threads = this.workers_.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this.dataLookup_[0]['buffer']);\n      meta = this.dataLookup_[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this.dataLookup_[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this.dataLookup_[i]['meta'];\n      }\n    }\n    this.job_ = null;\n    this.dataLookup_ = {};\n    job.callback(\n      null,\n      new ImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta,\n    );\n    this.dispatch_();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   * @override\n   */\n  disposeInternal() {\n    for (let i = 0; i < this.workers_.length; ++i) {\n      this.workers_[i].terminate();\n    }\n    this.workers_.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     * @private\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutter: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      /** @type {Array<string>} */\n      const attributions = [];\n      for (let i = 0, iMax = options.sources.length; i < iMax; ++i) {\n        const sourceOrLayer = options.sources[i];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const sourceAttributions = source.getAttributions()?.(frameState);\n        if (typeof sourceAttributions === 'string') {\n          attributions.push(sourceAttributions);\n        } else if (sourceAttributions !== undefined) {\n          attributions.push(...sourceAttributions);\n        }\n      }\n      return attributions;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   * @override\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data),\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState),\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas,\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data),\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/uri\n */\n\nimport {hashZXY} from './tilecoord.js';\nimport {modulo} from './math.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {renderXYZTemplate} from './uri.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * TODO: Update ol-mapbox-style to import this from the uri.js module.\n */\nexport {expandUrl} from './uri.js';\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @override\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   * @override\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   * @override\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @override\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      const tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n\n    let tile = this.tileCache.get(tileCoordKey);\n    if (tile.key != key) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.replace(tileCoordKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection,\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D|null}\n     */\n    this.context_ = null;\n\n    /**\n     * Executor groups. Read/written by the renderer.\n     * @type {Array<import(\"./render/canvas/ExecutorGroup.js\").default>}\n     */\n    this.executorGroups = [];\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext() {\n    if (!this.context_) {\n      this.context_ = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_;\n  }\n\n  /**\n   * @return {boolean} Tile has a rendering context.\n   */\n  hasContext() {\n    return !!this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.hasContext() ? this.getContext().canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   * @override\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    releaseCanvas(this.context_);\n    canvasPool.push(this.context_.canvas);\n    this.context_ = null;\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getCacheKeyForTileKey} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options<FeatureType>} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache_ = new TileCache(128);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   * @override\n   */\n  clear() {\n    this.sourceTileCache_.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   * @override\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache_.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection,\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection,\n        );\n        const sourceTile = this.sourceTileCache_.containsKey(tileUrl)\n          ? this.sourceTileCache_.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction,\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR,\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0],\n          );\n          this.sourceTileCache_.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR,\n          )\n            ? TileState.ERROR\n            : TileState.LOADED,\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection),\n    );\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   * @override\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   * @override\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @param {import(\"../VectorTile.js\").default<FeatureType>} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile),\n      );\n    },\n  );\n}\n","/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nexport function hillshade(inputs, data) {\n  const elevationImage = inputs[0];\n  const width = elevationImage.width;\n  const height = elevationImage.height;\n  const elevationData = elevationImage.data;\n  const shadeData = new Uint8ClampedArray(elevationData.length);\n  const dp = data.resolution * 2;\n  const maxX = width - 1;\n  const maxY = height - 1;\n  const pixel = [0, 0, 0, 0];\n  const twoPi = 2 * Math.PI;\n  const halfPi = Math.PI / 2;\n  const sunEl = (Math.PI * data.sunEl) / 180;\n  const sunAz = (Math.PI * data.sunAz) / 180;\n  const cosSunEl = Math.cos(sunEl);\n  const sinSunEl = Math.sin(sunEl);\n  const highlightColor = data.highlightColor;\n  const shadowColor = data.shadowColor;\n  const accentColor = data.accentColor;\n  const encoding = data.encoding;\n\n  let pixelX,\n    pixelY,\n    x0,\n    x1,\n    y0,\n    y1,\n    offset,\n    z0,\n    z1,\n    dzdx,\n    dzdy,\n    slope,\n    aspect,\n    accent,\n    scaled,\n    shade,\n    scaledAccentColor,\n    compositeShadeColor,\n    clamp,\n    slopeScaleBase,\n    scaledSlope,\n    cosIncidence;\n\n  function calculateElevation(pixel, encoding = 'mapbox') {\n    // The method used to extract elevations from the DEM.\n    //\n    // The supported methods are the Mapbox format\n    // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n    // and the Terrarium format\n    // (red * 256 + green + blue / 256) - 32768\n    //\n    if (encoding === 'mapbox') {\n      return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n    }\n    if (encoding === 'terrarium') {\n      return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n    }\n  }\n  for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n    y0 = pixelY === 0 ? 0 : pixelY - 1;\n    y1 = pixelY === maxY ? maxY : pixelY + 1;\n    for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n      x0 = pixelX === 0 ? 0 : pixelX - 1;\n      x1 = pixelX === maxX ? maxX : pixelX + 1;\n\n      // determine elevation for (x0, pixelY)\n      offset = (pixelY * width + x0) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (x1, pixelY)\n      offset = (pixelY * width + x1) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdx = (z1 - z0) / dp;\n\n      // determine elevation for (pixelX, y0)\n      offset = (y0 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (pixelX, y1)\n      offset = (y1 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdy = (z1 - z0) / dp;\n\n      aspect = Math.atan2(dzdy, -dzdx);\n      if (aspect < 0) {\n        aspect = halfPi - aspect;\n      } else if (aspect > halfPi) {\n        aspect = twoPi - aspect + halfPi;\n      } else {\n        aspect = halfPi - aspect;\n      }\n\n      // Bootstrap slope and corresponding incident values\n      slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n      cosIncidence =\n        sinSunEl * Math.cos(slope) +\n        cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n      accent = Math.cos(slope);\n      // 255 for Hex colors\n      scaled = 255 * cosIncidence;\n\n      /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n\n      // Forces given value to stay between two given extremes\n      clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n\n      // Intensity basis for hillshade opacity\n      slopeScaleBase = 1.875 - data.opacity * 1.75;\n      // Intensity interpolation so that higher intensity values create more opaque hillshading\n      scaledSlope =\n        data.opacity !== 0.5\n          ? halfPi *\n            ((Math.pow(slopeScaleBase, slope) - 1) /\n              (Math.pow(slopeScaleBase, halfPi) - 1))\n          : slope;\n\n      // Accent hillshade color with given accentColor to emphasize rougher terrain\n      scaledAccentColor = {\n        r: (1 - accent) * accentColor.r * clamp * 255,\n        g: (1 - accent) * accentColor.g * clamp * 255,\n        b: (1 - accent) * accentColor.b * clamp * 255,\n        a: (1 - accent) * accentColor.a * clamp * 255,\n      };\n\n      // Allows highlight vs shadow discrimination\n      shade = Math.abs((((aspect + sunAz) / Math.PI + 0.5) % 2) - 1);\n      // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n      compositeShadeColor = {\n        r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n        g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n        b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n        a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled,\n      };\n\n      // Fill in result color value\n      offset = (pixelY * width + pixelX) * 4;\n      shadeData[offset] =\n        scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n      shadeData[offset + 1] =\n        scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n      shadeData[offset + 2] =\n        scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n      // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n      shadeData[offset + 3] =\n        elevationData[offset + 3] *\n        data.opacity *\n        clamp *\n        Math.sin(scaledSlope);\n    }\n  }\n\n  return new ImageData(shadeData, width, height);\n}\n","/*\nol-mapbox-style - Use Mapbox/MapLibre Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport {derefLayers} from '@maplibre/maplibre-gl-style-spec';\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport {getCenter, getTopLeft} from 'ol/extent.js';\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport MVT from 'ol/format/MVT.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy.js';\nimport {METERS_PER_UNIT} from 'ol/proj/Units.js';\nimport {\n  equivalent,\n  fromLonLat,\n  get as getProjection,\n  getPointResolution,\n  getUserProjection,\n} from 'ol/proj.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileSource, {defaultLoadFunction} from 'ol/source/VectorTile.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport {createXYZ} from 'ol/tilegrid.js';\nimport {\n  normalizeSourceUrl,\n  normalizeSpriteUrl,\n  normalizeStyleUrl,\n} from './mapbox.js';\nimport {hillshade} from './shaders.js';\nimport {\n  _colorWithOpacity,\n  getValue,\n  styleFunctionArgs,\n  stylefunction as applyStylefunction,\n} from './stylefunction.js';\nimport {getFonts} from './text.js';\nimport {\n  defaultResolutions,\n  fetchResource,\n  getFilterCache,\n  getFunctionCache,\n  getGlStyle,\n  getResolutionForZoom,\n  getStyleFunctionKey,\n  getTileJson,\n  getZoomForResolution,\n} from './util.js';\n\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, import(\"./util.js\").ResourceType): (Request|string|Promise<Request|string>|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` or a url `string`, or a promise tehereof.\n * Without a return value the original request will not be modified.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox/MapLibre style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {string} [webfonts] Template for resolving webfonts. Can be used to specify where to fetch\n * web fonts when no `ol:webfonts` metadata is set in the style object. See `getFonts()` and the\n * \"Font handling\" section in `README.md` for details.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n  return projection.getExtent()\n    ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22,\n      }).getResolutions()\n    : defaultResolutions;\n}\n\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n  if (!options.accessToken) {\n    options = Object.assign({}, options);\n    const searchParams = new URL(styleUrl).searchParams;\n    // The last search parameter is the access token\n    searchParams.forEach((value, key) => {\n      options.accessToken = value;\n      options.accessTokenParam = key;\n    });\n  }\n  return options;\n}\n\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox/MapLibre Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox/MapLibre Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nexport function applyStyle(\n  layer,\n  glStyle,\n  sourceOrLayersOrOptions = '',\n  optionsOrPath = {},\n  resolutions = undefined,\n) {\n  let styleUrl, sourceId;\n  /** @type {Options&ApplyStyleOptions} */\n  let options;\n  let sourceOrLayers;\n  let updateSource = true;\n  if (\n    typeof sourceOrLayersOrOptions !== 'string' &&\n    !Array.isArray(sourceOrLayersOrOptions)\n  ) {\n    options = sourceOrLayersOrOptions;\n    sourceOrLayers = options.source || options.layers;\n    optionsOrPath = options;\n  } else {\n    sourceOrLayers = sourceOrLayersOrOptions;\n  }\n  if (typeof optionsOrPath === 'string') {\n    styleUrl = optionsOrPath;\n    options = {};\n  } else {\n    styleUrl = optionsOrPath.styleUrl;\n    options = optionsOrPath;\n  }\n  if (options.updateSource === false) {\n    updateSource = false;\n  }\n  if (!resolutions) {\n    resolutions = options.resolutions;\n  }\n  if (\n    !styleUrl &&\n    typeof glStyle === 'string' &&\n    !glStyle.trim().startsWith('{')\n  ) {\n    styleUrl = glStyle;\n  }\n  if (styleUrl) {\n    styleUrl = styleUrl.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(styleUrl, options.accessToken);\n    options = completeOptions(styleUrl, options);\n  }\n\n  return new Promise(function (resolve, reject) {\n    // TODO: figure out where best place to check source type is\n    // Note that the source arg is an array of gl layer ids and each must be\n    // dereferenced to get source type to validate\n    getGlStyle(glStyle, options)\n      .then(function (glStyle) {\n        if (glStyle.version != 8) {\n          return reject(new Error('glStyle version 8 required.'));\n        }\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          return reject(\n            new Error('Can only apply to VectorLayer or VectorTileLayer'),\n          );\n        }\n\n        const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n        if (!sourceOrLayers) {\n          sourceId = Object.keys(glStyle.sources).find(function (key) {\n            return glStyle.sources[key].type === type;\n          });\n          sourceOrLayers = sourceId;\n        } else if (Array.isArray(sourceOrLayers)) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.id === sourceOrLayers[0];\n          }).source;\n        } else {\n          sourceId = sourceOrLayers;\n        }\n        if (!sourceId) {\n          return reject(new Error(`No ${type} source found in the glStyle.`));\n        }\n\n        function assignSource() {\n          if (!updateSource) {\n            return Promise.resolve();\n          }\n          if (layer instanceof VectorTileLayer) {\n            return setupVectorSource(\n              glStyle.sources[sourceId],\n              styleUrl,\n              options,\n            ).then(function (source) {\n              const targetSource = layer.getSource();\n              if (!targetSource) {\n                layer.setSource(source);\n              } else if (source !== targetSource) {\n                targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                if (\n                  typeof targetSource.setUrls === 'function' &&\n                  typeof source.getUrls === 'function'\n                ) {\n                  // to get correct keys for tile cache and queue\n                  targetSource.setUrls(source.getUrls());\n                }\n                //@ts-ignore\n                if (!targetSource.format_) {\n                  //@ts-ignore\n                  targetSource.format_ = source.format_;\n                }\n                if (!targetSource.getAttributions()) {\n                  targetSource.setAttributions(source.getAttributions());\n                }\n                if (\n                  targetSource.getTileLoadFunction() === defaultLoadFunction\n                ) {\n                  targetSource.setTileLoadFunction(\n                    source.getTileLoadFunction(),\n                  );\n                }\n                if (\n                  equivalent(\n                    targetSource.getProjection(),\n                    source.getProjection(),\n                  )\n                ) {\n                  targetSource.tileGrid = source.getTileGrid();\n                }\n              }\n              const tileGrid = layer.getSource().getTileGrid();\n              if (\n                !isFinite(layer.getMaxResolution()) &&\n                !isFinite(layer.getMinZoom()) &&\n                tileGrid.getMinZoom() > 0\n              ) {\n                layer.setMaxResolution(\n                  getResolutionForZoom(\n                    Math.max(0, tileGrid.getMinZoom() - 1e-12),\n                    tileGrid.getResolutions(),\n                  ),\n                );\n              }\n            });\n          }\n          const glSource = glStyle.sources[sourceId];\n          let source = layer.getSource();\n          if (!source || source.get('mapbox-source') !== glSource) {\n            source = setupGeoJSONSource(glSource, styleUrl, options);\n          }\n          const targetSource = /** @type {VectorSource} */ (layer.getSource());\n          if (!targetSource) {\n            layer.setSource(source);\n          } else if (source !== targetSource) {\n            if (!targetSource.getAttributions()) {\n              targetSource.setAttributions(source.getAttributions());\n            }\n            //@ts-ignore\n            if (!targetSource.format_) {\n              //@ts-ignore\n              targetSource.format_ = source.getFormat();\n            }\n            //@ts-ignore\n            targetSource.url_ = source.getUrl();\n          }\n          return Promise.resolve();\n        }\n\n        let spriteScale, spriteData, spriteImageUrl, style;\n        function onChange() {\n          if (!style && (!glStyle.sprite || spriteData)) {\n            if (options.projection && !resolutions) {\n              const projection = getProjection(options.projection);\n              const units = projection.getUnits();\n              if (units !== 'm') {\n                resolutions = defaultResolutions.map(\n                  (resolution) => resolution / METERS_PER_UNIT[units],\n                );\n              }\n            }\n            style = applyStylefunction(\n              layer,\n              glStyle,\n              sourceOrLayers,\n              resolutions,\n              spriteData,\n              spriteImageUrl,\n              (fonts, templateUrl = options.webfonts) =>\n                getFonts(fonts, templateUrl),\n              options.getImage,\n            );\n            if (!layer.getStyle()) {\n              reject(new Error(`Nothing to show for source [${sourceId}]`));\n            } else {\n              assignSource().then(resolve).catch(reject);\n            }\n          } else if (style) {\n            layer.setStyle(style);\n            assignSource().then(resolve).catch(reject);\n          } else {\n            reject(new Error('Something went wrong trying to apply style.'));\n          }\n        }\n\n        if (glStyle.sprite) {\n          const sprite = new URL(\n            normalizeSpriteUrl(\n              glStyle.sprite,\n              options.accessToken,\n              styleUrl || location.href,\n            ),\n          );\n          spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n          const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n          let spriteUrl =\n            sprite.origin +\n            sprite.pathname +\n            sizeFactor +\n            '.json' +\n            sprite.search;\n\n          new Promise(function (resolve, reject) {\n            fetchResource('Sprite', spriteUrl, options)\n              .then(resolve)\n              .catch(function (error) {\n                spriteUrl =\n                  sprite.origin + sprite.pathname + '.json' + sprite.search;\n                fetchResource('Sprite', spriteUrl, options)\n                  .then(resolve)\n                  .catch(reject);\n              });\n          })\n            .then(function (spritesJson) {\n              if (spritesJson === undefined) {\n                reject(new Error('No sprites found.'));\n              }\n              spriteData = spritesJson;\n              spriteImageUrl =\n                sprite.origin +\n                sprite.pathname +\n                sizeFactor +\n                '.png' +\n                sprite.search;\n              if (options.transformRequest) {\n                const transformed =\n                  options.transformRequest(spriteImageUrl, 'SpriteImage') ||\n                  spriteImageUrl;\n                if (\n                  transformed instanceof Request ||\n                  transformed instanceof Promise\n                ) {\n                  spriteImageUrl = transformed;\n                }\n              }\n              onChange();\n            })\n            .catch(function (err) {\n              reject(\n                new Error(\n                  `Sprites cannot be loaded: ${spriteUrl}: ${err.message}`,\n                ),\n              );\n            });\n        } else {\n          onChange();\n        }\n      })\n      .catch(reject);\n  });\n}\n\nconst emptyObj = {};\n\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n  glStyle.layers.some(function (layer) {\n    if (layer.type === 'background') {\n      if (mapOrLayer instanceof Layer) {\n        mapOrLayer.setBackground(function (resolution) {\n          return getBackgroundColor(layer, resolution, options, {});\n        });\n        return true;\n      }\n      if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n        mapOrLayer\n          .getLayers()\n          .insertAt(0, setupBackgroundLayer(layer, options, {}));\n        return true;\n      }\n    }\n  });\n}\n\n/**\n * Applies properties of the Mapbox/MapLibre Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox/MapLibre Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nexport function applyBackground(mapOrLayer, glStyle, options = {}) {\n  return getGlStyle(glStyle, options).then(function (glStyle) {\n    setFirstBackground(mapOrLayer, glStyle, options);\n  });\n}\n\nfunction getSourceIdByRef(layers, ref) {\n  let sourceId;\n  layers.some(function (layer) {\n    if (layer.id == ref) {\n      sourceId = layer.source;\n      return true;\n    }\n  });\n  return sourceId;\n}\n\nfunction extentFromTileJSON(tileJSON, projection) {\n  const bounds = tileJSON.bounds;\n  if (bounds) {\n    const ll = fromLonLat([bounds[0], bounds[1]], projection);\n    const tr = fromLonLat([bounds[2], bounds[3]], projection);\n    return [ll[0], ll[1], tr[0], tr[1]];\n  }\n  return getProjection(projection).getExtent();\n}\n\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n  const tileJSONSource = new TileJSON({\n    tileJSON: tileJSON,\n    tileSize: glSource.tileSize || tileJSON.tileSize || 512,\n  });\n  const tileJSONDoc = tileJSONSource.getTileJSON();\n  const tileGrid = tileJSONSource.getTileGrid();\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const extent = extentFromTileJSON(tileJSONDoc, projection);\n  const projectionExtent = projection.getExtent();\n  const minZoom = tileJSONDoc.minzoom || 0;\n  const maxZoom = tileJSONDoc.maxzoom || 22;\n  /** @type {import(\"ol/source/VectorTile.js\").Options<import(\"ol/render/Feature.js\").default>} */\n  const sourceOptions = {\n    attributions: tileJSONSource.getAttributions(),\n    projection: projection,\n    tileGrid: new TileGrid({\n      origin: projectionExtent\n        ? getTopLeft(projectionExtent)\n        : tileGrid.getOrigin(0),\n      extent: extent || tileGrid.getExtent(),\n      minZoom: minZoom,\n      resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(\n        0,\n        maxZoom + 1,\n      ),\n      tileSize: tileGrid.getTileSize(0),\n    }),\n  };\n  if (Array.isArray(tileJSONDoc.tiles)) {\n    sourceOptions.urls = tileJSONDoc.tiles;\n  } else {\n    sourceOptions.url = tileJSONDoc.tiles;\n  }\n  return sourceOptions;\n}\n\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n  const background = {\n    id: glLayer.id,\n    type: glLayer.type,\n  };\n  const layout = glLayer.layout || {};\n  const paint = glLayer.paint || {};\n  background['paint'] = paint;\n  const zoom = getZoomForResolution(\n    resolution,\n    options.resolutions || defaultResolutions,\n  );\n  let opacity;\n  const bg = getValue(\n    background,\n    'paint',\n    'background-color',\n    zoom,\n    emptyObj,\n    functionCache,\n  );\n  if (paint['background-opacity'] !== undefined) {\n    opacity = getValue(\n      background,\n      'paint',\n      'background-opacity',\n      zoom,\n      emptyObj,\n      functionCache,\n    );\n  }\n  return layout.visibility == 'none'\n    ? undefined\n    : _colorWithOpacity(bg, opacity);\n}\n\n/**\n * @param {Object} glLayer Mapbox/MapLibre Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n  const div = document.createElement('div');\n  div.className = 'ol-mapbox-style-background';\n  div.style.position = 'absolute';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  return new Layer({\n    source: new Source({}),\n    render(frameState) {\n      const color = getBackgroundColor(\n        glLayer,\n        frameState.viewState.resolution,\n        options,\n        functionCache,\n      );\n      div.style.backgroundColor = color;\n      return div;\n    },\n  });\n}\n\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox/MapLibre Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nexport function setupVectorSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function ({tileJson, tileLoadFunction}) {\n        const sourceOptions = sourceOptionsFromTileJSON(\n          glSource,\n          tileJson,\n          options,\n        );\n        sourceOptions.tileLoadFunction = tileLoadFunction;\n        sourceOptions.format = new MVT();\n        resolve(new VectorTileSource(sourceOptions));\n      })\n      .catch(reject);\n  });\n}\n\nfunction setupVectorLayer(glSource, styleUrl, options) {\n  const layer = new VectorTileLayer({\n    declutter: true,\n    visible: false,\n  });\n  setupVectorSource(glSource, styleUrl, options)\n    .then(function (source) {\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\nfunction getBboxTemplate(projection) {\n  const projCode = projection ? projection.getCode() : 'EPSG:3857';\n  return `{bbox-${projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')}}`;\n}\n\nfunction setupRasterSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function ({tileJson, tileLoadFunction}) {\n        const source = new TileJSON({\n          interpolate:\n            options.interpolate === undefined ? true : options.interpolate,\n          transition: 0,\n          crossOrigin: 'anonymous',\n          tileJSON: tileJson,\n        });\n        source.tileGrid = sourceOptionsFromTileJSON(\n          glSource,\n          tileJson,\n          options,\n        ).tileGrid;\n        if (options.projection) {\n          //@ts-ignore\n          source.projection = getProjection(options.projection);\n        }\n        const getTileUrl = source.getTileUrlFunction();\n        if (tileLoadFunction) {\n          source.setTileLoadFunction(tileLoadFunction);\n        }\n        source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n          const bboxTemplate = getBboxTemplate(projection);\n          let src = getTileUrl(tileCoord, pixelRatio, projection);\n          if (src.indexOf(bboxTemplate) != -1) {\n            const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n            src = src.replace(bboxTemplate, bbox.toString());\n          }\n          return src;\n        });\n        source.set('mapbox-source', glSource);\n        resolve(source);\n      })\n      .catch(function (error) {\n        reject(error);\n      });\n  });\n}\n\nfunction setupRasterLayer(glSource, styleUrl, options) {\n  const layer = new TileLayer();\n  setupRasterSource(glSource, styleUrl, options)\n    .then(function (source) {\n      layer.setSource(source);\n    })\n    .catch(function () {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox/MapLibre Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n  const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n  /** @type {ImageLayer<Raster>} */\n  const layer = new ImageLayer({\n    source: new Raster({\n      operationType: 'image',\n      operation: hillshade,\n      sources: [tileLayer],\n    }),\n  });\n  return layer;\n}\n\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n  const geoJsonFormat = options.projection\n    ? new GeoJSON({dataProjection: options.projection})\n    : new GeoJSON();\n  const data = glSource.data;\n  const sourceOptions = {};\n  if (typeof data == 'string') {\n    const [geoJsonUrl] = normalizeSourceUrl(\n      data,\n      options.accessToken,\n      options.accessTokenParam || 'access_token',\n      styleUrl || location.href,\n    );\n    if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n      const extentUrl = (extent, resolution, projection) => {\n        const bboxTemplate = getBboxTemplate(projection);\n        return geoJsonUrl.replace(bboxTemplate, `${extent.join(',')}`);\n      };\n      const source = new VectorSource({\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n        loader: (extent, resolution, projection, success, failure) => {\n          const url =\n            typeof extentUrl === 'function'\n              ? extentUrl(extent, resolution, projection)\n              : extentUrl;\n          fetchResource('GeoJSON', url, options)\n            .then((json) => {\n              const features = /** @type {*} */ (\n                source\n                  .getFormat()\n                  .readFeatures(json, {featureProjection: projection})\n              );\n              source.addFeatures(features);\n              success(features);\n            })\n            .catch((response) => {\n              source.removeLoadedExtent(extent);\n              failure();\n            });\n        },\n        strategy: bboxStrategy,\n      });\n      source.set('mapbox-source', glSource);\n      return source;\n    }\n    const source = new VectorSource({\n      attributions: glSource.attribution,\n      format: geoJsonFormat,\n      url: geoJsonUrl,\n      loader: (extent, resolution, projection, success, failure) => {\n        fetchResource('GeoJSON', geoJsonUrl, options)\n          .then((json) => {\n            const features = /** @type {*} */ (\n              source\n                .getFormat()\n                .readFeatures(json, {featureProjection: projection})\n            );\n            source.addFeatures(features);\n            success(features);\n          })\n          .catch((response) => {\n            source.removeLoadedExtent(extent);\n            failure();\n          });\n      },\n    });\n    return source;\n  }\n  sourceOptions.features = geoJsonFormat.readFeatures(data, {\n    featureProjection: getUserProjection() || 'EPSG:3857',\n  });\n\n  const source = new VectorSource(\n    Object.assign(\n      {\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n      },\n      sourceOptions,\n    ),\n  );\n  source.set('mapbox-source', glSource);\n  return /** @type {VectorSource} */ (source);\n}\n\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n  return new VectorLayer({\n    declutter: true,\n    source: setupGeoJSONSource(glSource, styleUrl, options),\n    visible: false,\n  });\n}\n\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n  let zoom = null;\n  return function (event) {\n    if (\n      glLayer.paint &&\n      'raster-opacity' in glLayer.paint &&\n      event.frameState.viewState.zoom !== zoom\n    ) {\n      zoom = event.frameState.viewState.zoom;\n      delete functionCache[glLayer.id];\n      updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n    }\n  };\n}\n\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n  const opacity = getValue(\n    glLayer,\n    'paint',\n    'raster-opacity',\n    zoom,\n    emptyObj,\n    functionCache,\n  );\n  layer.setOpacity(opacity);\n}\n\nfunction manageVisibility(layer, mapOrGroup) {\n  function onChange() {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    if (!glStyle) {\n      return;\n    }\n    const mapboxLayers = derefLayers(glStyle.layers);\n    const layerMapboxLayerids = layer.get('mapbox-layers');\n    const visible = mapboxLayers\n      .filter(function (mapboxLayer) {\n        return layerMapboxLayerids.includes(mapboxLayer.id);\n      })\n      .some(function (mapboxLayer) {\n        return (\n          !mapboxLayer.layout ||\n          !mapboxLayer.layout.visibility ||\n          mapboxLayer.layout.visibility === 'visible'\n        );\n      });\n    if (layer.get('visible') !== visible) {\n      layer.setVisible(visible);\n    }\n  }\n  layer.on('change', onChange);\n  onChange();\n}\n\nexport function setupLayer(glStyle, styleUrl, glLayer, options) {\n  const functionCache = getFunctionCache(glStyle);\n  const glLayers = glStyle.layers;\n  const type = glLayer.type;\n\n  const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n  const glSource = glStyle.sources[id];\n  let layer;\n  if (type == 'background') {\n    layer = setupBackgroundLayer(glLayer, options, functionCache);\n  } else if (glSource.type == 'vector') {\n    layer = setupVectorLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster') {\n    layer = setupRasterLayer(glSource, styleUrl, options);\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true,\n    );\n    layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n  } else if (glSource.type == 'geojson') {\n    layer = setupGeoJSONLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n    const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n    layer = hillshadeLayer;\n    hillshadeLayer.getSource().on('beforeoperations', function (event) {\n      const data = event.data;\n      data.resolution = getPointResolution(\n        options.projection || 'EPSG:3857',\n        event.resolution,\n        getCenter(event.extent),\n        'm',\n      );\n      const zoom = getZoomForResolution(\n        event.resolution,\n        options.resolutions || defaultResolutions,\n      );\n      data.encoding = glSource.encoding;\n      data.vert =\n        5 *\n        getValue(\n          glLayer,\n          'paint',\n          'hillshade-exaggeration',\n          zoom,\n          emptyObj,\n          functionCache,\n        );\n      data.sunAz = getValue(\n        glLayer,\n        'paint',\n        'hillshade-illumination-direction',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n      data.sunEl = 35;\n      data.opacity = 0.3;\n      data.highlightColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-highlight-color',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n      data.shadowColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-shadow-color',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n      data.accentColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-accent-color',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n    });\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true,\n    );\n  }\n  const glSourceId = id;\n  if (layer) {\n    layer.set('mapbox-source', glSourceId);\n  }\n  return layer;\n}\n\n/**\n * @param {*} glStyle Mapbox/MapLibre Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n  const promises = [];\n\n  let view = null;\n  if (mapOrGroup instanceof Map) {\n    view = mapOrGroup.getView();\n    if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n      const projection = options.projection\n        ? getProjection(options.projection)\n        : view.getProjection();\n      view = new View(\n        Object.assign(view.getProperties(), {\n          maxResolution:\n            defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n          projection: options.projection || view.getProjection(),\n        }),\n      );\n      mapOrGroup.setView(view);\n    }\n\n    if ('center' in glStyle && !view.getCenter()) {\n      view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n    }\n    if ('zoom' in glStyle && view.getZoom() === undefined) {\n      view.setResolution(\n        defaultResolutions[0] /\n          METERS_PER_UNIT[view.getProjection().getUnits()] /\n          Math.pow(2, glStyle.zoom),\n      );\n    }\n    if (!view.getCenter() || view.getZoom() === undefined) {\n      view.fit(view.getProjection().getExtent(), {\n        nearest: true,\n        size: mapOrGroup.getSize(),\n      });\n    }\n  }\n  mapOrGroup.set('mapbox-style', glStyle);\n  mapOrGroup.set('mapbox-metadata', {styleUrl, options});\n\n  const glLayers = glStyle.layers;\n  let layerIds = [];\n\n  let layer, glSourceId, id;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    const type = glLayer.type;\n    if (type == 'heatmap') {\n      //FIXME Unsupported layer type\n      // eslint-disable-next-line no-console\n      console.debug(`layers[${i}].type \"${type}\" not supported`);\n      continue;\n    } else {\n      id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n      // this technique assumes gl layers will be in a particular order\n      if (!id || id != glSourceId) {\n        if (layerIds.length) {\n          promises.push(\n            finalizeLayer(\n              layer,\n              layerIds,\n              glStyle,\n              styleUrl,\n              mapOrGroup,\n              options,\n            ),\n          );\n          layerIds = [];\n        }\n\n        layer = setupLayer(glStyle, styleUrl, glLayer, options);\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          layerIds = [];\n        }\n        glSourceId = layer.get('mapbox-source');\n      }\n      layerIds.push(glLayer.id);\n    }\n  }\n  promises.push(\n    finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options),\n  );\n  return Promise.all(promises);\n}\n\n/**\n * Loads and applies a Mapbox/MapLibre Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox/MapLibre Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox/MapLibre Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox/MapLibre Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox/MapLibre Style document). When passed\n * as style url, layers will be added to the map when the Mapbox/MapLibre Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nexport function apply(mapOrGroupOrElement, style, options = {}) {\n  let promise;\n  /** @type {Map|LayerGroup} */\n  let mapOrGroup;\n  if (\n    typeof mapOrGroupOrElement === 'string' ||\n    mapOrGroupOrElement instanceof HTMLElement\n  ) {\n    mapOrGroup = new Map({\n      target: mapOrGroupOrElement,\n    });\n  } else {\n    mapOrGroup = mapOrGroupOrElement;\n  }\n\n  if (typeof style === 'string') {\n    const styleUrl = style.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(style, options.accessToken);\n    options = completeOptions(styleUrl, options);\n\n    promise = new Promise(function (resolve, reject) {\n      getGlStyle(style, options)\n        .then(function (glStyle) {\n          processStyle(glStyle, mapOrGroup, styleUrl, options)\n            .then(function () {\n              resolve(mapOrGroup);\n            })\n            .catch(reject);\n        })\n        .catch(function (err) {\n          reject(new Error(`Could not load ${style}: ${err.message}`));\n        });\n    });\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      processStyle(\n        style,\n        mapOrGroup,\n        !options.styleUrl || options.styleUrl.startsWith('data:')\n          ? location.href\n          : normalizeStyleUrl(options.styleUrl, options.accessToken),\n        options,\n      )\n        .then(function () {\n          resolve(mapOrGroup);\n        })\n        .catch(reject);\n    });\n  }\n\n  return promise;\n}\n\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nexport function finalizeLayer(\n  layer,\n  layerIds,\n  glStyle,\n  styleUrl,\n  mapOrGroup,\n  options = {},\n) {\n  let minZoom = 24;\n  let maxZoom = 0;\n  const glLayers = glStyle.layers;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    if (layerIds.indexOf(glLayer.id) !== -1) {\n      minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n      maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    const setStyle = function () {\n      const source = layer.getSource();\n      if (!source || source.getState() === 'error') {\n        reject(\n          new Error(\n            'Error accessing data for source ' + layer.get('mapbox-source'),\n          ),\n        );\n        return;\n      }\n      if ('getTileGrid' in source) {\n        const tileGrid =\n          /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */ (\n            source\n          ).getTileGrid();\n        if (tileGrid) {\n          const sourceMinZoom = tileGrid.getMinZoom();\n          if (minZoom > 0 || sourceMinZoom > 0) {\n            layer.setMaxResolution(\n              Math.min(\n                getResolutionForZoom(\n                  Math.max(0, minZoom - 1e-12),\n                  defaultResolutions,\n                ),\n                getResolutionForZoom(\n                  Math.max(0, sourceMinZoom - 1e-12),\n                  tileGrid.getResolutions(),\n                ),\n              ),\n            );\n          }\n          if (maxZoom < 24) {\n            layer.setMinResolution(\n              getResolutionForZoom(maxZoom, defaultResolutions),\n            );\n          }\n        }\n      } else {\n        if (minZoom > 0) {\n          layer.setMaxResolution(\n            getResolutionForZoom(\n              Math.max(0, minZoom - 1e-12),\n              defaultResolutions,\n            ),\n          );\n        }\n      }\n      if (\n        source instanceof VectorSource ||\n        source instanceof VectorTileSource\n      ) {\n        applyStyle(\n          /** @type {import(\"ol/layer/Vector\").default|import(\"ol/layer/VectorTile\").default} */ (\n            layer\n          ),\n          glStyle,\n          layerIds,\n          Object.assign({styleUrl: styleUrl}, options),\n        )\n          .then(function () {\n            manageVisibility(layer, mapOrGroup);\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        resolve();\n      }\n    };\n\n    layer.set('mapbox-layers', layerIds);\n    const layers = mapOrGroup.getLayers();\n    if (layers.getArray().indexOf(layer) === -1) {\n      layers.push(layer);\n    }\n\n    if (layer.getSource()) {\n      setStyle();\n    } else {\n      layer.once('change:source', setStyle);\n    }\n  });\n}\n\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nexport function getMapboxLayer(mapOrGroup, layerId) {\n  const style = mapOrGroup.get('mapbox-style');\n  const layerStyle = style.layers.find(function (layer) {\n    return layer.id === layerId;\n  });\n  return layerStyle;\n}\n\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nexport function addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  let spliceIndex;\n  let sourceIndex = -1;\n  if (beforeLayerId !== undefined) {\n    const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n    if (beforeMapboxLayer === undefined) {\n      throw new Error(`Layer with id \"${beforeLayerId}\" not found.`);\n    }\n    spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n  } else {\n    spliceIndex = mapboxLayers.length;\n  }\n  let sourceOffset;\n  if (\n    spliceIndex > 0 &&\n    mapboxLayers[spliceIndex - 1].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex - 1;\n    sourceOffset = -1;\n  } else if (\n    spliceIndex < mapboxLayers.length &&\n    mapboxLayers[spliceIndex].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex;\n    sourceOffset = 0;\n  }\n  if (sourceIndex === -1) {\n    const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n    const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n    if (beforeLayerId) {\n      const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n      const beforeLayerIndex = mapOrGroup\n        .getLayers()\n        .getArray()\n        .indexOf(beforeLayer);\n      mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n    }\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    return finalizeLayer(\n      layer,\n      [mapboxLayer.id],\n      glStyle,\n      styleUrl,\n      mapOrGroup,\n      options,\n    );\n  }\n\n  if (mapboxLayers.some((layer) => layer.id === mapboxLayer.id)) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" already exists.`);\n  }\n  const sourceLayerId = mapboxLayers[sourceIndex].id;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, sourceLayerId),\n      )\n    ];\n  mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n      sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n  }\n  return Promise.resolve();\n}\n\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nexport function updateMapboxLayer(mapOrGroup, mapboxLayer) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  const index = mapboxLayers.findIndex(function (layer) {\n    return layer.id === mapboxLayer.id;\n  });\n  if (index === -1) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" not found.`);\n  }\n  const oldLayer = mapboxLayers[index];\n  if (oldLayer.source !== mapboxLayer.source) {\n    throw new Error(\n      'Updated layer and previous version must use the same source.',\n    );\n  }\n  delete getFunctionCache(glStyle)[mapboxLayer.id];\n  delete getFilterCache(glStyle)[mapboxLayer.id];\n  mapboxLayers[index] = mapboxLayer;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, mapboxLayer.id),\n      )\n    ];\n  if (args) {\n    applyStylefunction.apply(undefined, args);\n  } else {\n    getLayer(mapOrGroup, mapboxLayer.id).changed();\n  }\n}\n\n/**\n * Updates a Mapbox source object in the style. The according OpenLayers source will be replaced\n * and the map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string} id Key of the source in the `sources` object literal.\n * @param {Object} mapboxSource Mapbox source object.\n * @return {Promise<Source>} Promise that resolves when the source has been updated.\n */\nexport function updateMapboxSource(mapOrGroup, id, mapboxSource) {\n  const currentSource = getSource(mapOrGroup, id);\n  const layers = /** @type {Array<VectorLayer|TileLayer|VectorTileLayer>} */ (\n    mapOrGroup\n      .getLayers()\n      .getArray()\n      .filter(function (layer) {\n        return (\n          (layer instanceof VectorLayer ||\n            layer instanceof TileLayer ||\n            layer instanceof VectorTileLayer) &&\n          layer.getSource() === currentSource\n        );\n      })\n  );\n  const metadata = mapOrGroup.get('mapbox-metadata');\n  let newSourcePromise;\n  switch (mapboxSource.type) {\n    case 'vector':\n      newSourcePromise = setupVectorSource(\n        mapboxSource,\n        metadata.styleUrl,\n        metadata.options,\n      );\n      break;\n    case 'geojson':\n      newSourcePromise = Promise.resolve(\n        setupGeoJSONSource(mapboxSource, metadata.styleUrl, metadata.options),\n      );\n      break;\n    case 'raster':\n    case 'raster-dem':\n      newSourcePromise = setupRasterSource(\n        mapboxSource,\n        metadata.styleUrl,\n        metadata.options,\n      );\n      break;\n    default:\n      return Promise.reject(\n        new Error('Unsupported source type ' + mapboxSource.type),\n      );\n  }\n  newSourcePromise.then(function (newSource) {\n    layers.forEach(function (layer) {\n      layer.setSource(newSource);\n    });\n  });\n  return newSourcePromise;\n}\n\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nexport function removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n  const mapboxLayerId =\n    typeof mapboxLayerIdOrLayer === 'string'\n      ? mapboxLayerIdOrLayer\n      : mapboxLayerIdOrLayer.id;\n  const layer = getLayer(mapOrGroup, mapboxLayerId);\n  /** @type {Array<Object>} */\n  const layerMapboxLayers = layer.get('mapbox-layers');\n  if (layerMapboxLayers.length === 1) {\n    throw new Error(\n      'Cannot remove last Mapbox layer from an OpenLayers layer.',\n    );\n  }\n  layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const layers = glStyle.layers;\n  layers.splice(\n    layers.findIndex((layer) => layer.id === mapboxLayerId),\n    1,\n  );\n  const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      sourceOrLayers.splice(\n        sourceOrLayers.findIndex((layer) => layer === mapboxLayerId),\n        1,\n      );\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayerId).changed();\n  }\n}\n\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox/MapLibre Style\n * `layer`. Note that multiple Mapbox/MapLibre Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox/MapLibre Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nexport function getLayer(map, layerId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const mapboxLayers = layers[i].get('mapbox-layers');\n    if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n      return /** @type {Layer} */ (layers[i]);\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the OpenLayers layer instances for the provided Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox/MapLibre Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nexport function getLayers(map, sourceId) {\n  const result = [];\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    if (layers[i].get('mapbox-source') === sourceId) {\n      result.push(/** @type {Layer} */ (layers[i]));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the OpenLayers source instance for the provided Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox/MapLibre Style source id.\n * @return {Source} OpenLayers source instance.\n */\nexport function getSource(map, sourceId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const source = /** @type {Layer} */ (layers[i]).getSource();\n    if (layers[i].get('mapbox-source') === sourceId) {\n      return source;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nexport function setFeatureState(mapOrLayer, feature, state) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState) {\n      if (state) {\n        featureState[feature.id] = state;\n      } else {\n        delete featureState[feature.id];\n      }\n      layers[i].changed();\n    } else {\n      throw new Error(`Map or layer for source \"${feature.source}\" not found.`);\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nexport function getFeatureState(mapOrLayer, feature) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState && featureState[feature.id]) {\n      return featureState[feature.id];\n    }\n  }\n  return undefined;\n}\n","import BaseEvent from 'ol/events/Event.js';\nimport EventType from 'ol/events/EventType.js';\nimport MVT from 'ol/format/MVT.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource from 'ol/source/VectorTile.js';\nimport {applyBackground, applyStyle} from './apply.js';\n\n/** @typedef {import(\"ol/Map.js\").default} Map */\n\n/**\n * Event emitted on configuration or loading error.\n */\nclass ErrorEvent extends BaseEvent {\n  /**\n   * @param {Error} error error object.\n   */\n  constructor(error) {\n    super(EventType.ERROR);\n\n    /**\n     * @type {Error}\n     */\n    this.error = error;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox/MapLibre Style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox/MapLibre style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox/MapLibre style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"ol/layer/Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox/MapLibre Style object will be used. Set to `false` to prevent\n * the Mapbox/MapLibre style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"ol/extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"ol/render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"ol/layer/VectorTile.js\").VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"ol/Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use `map.addLayer()`.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * ```js\n * import {MapboxVectorLayer} from 'ol-mapbox-style';\n * ```\n * A vector tile layer based on a Mapbox/MapLibre style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here',\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * Instances of this class emit an `error` event when an error occurs during style loading:\n *\n *     layer.on('error', function() {\n *       console.error('Error loading style');\n *     }\n *\n * **Note for users of the full build**: The `MapboxVectorLayer` requires the\n * [ol-mapbox-style](https://github.com/openlayers/ol-mapbox-style) library to be loaded as well.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer<import(\"ol/source/VectorTile.js\").default>}\n */\nexport default class MapboxVectorLayer extends VectorTileLayer {\n  /**\n   * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n   * must be provided.\n   */\n  constructor(options) {\n    const declutter = 'declutter' in options ? options.declutter : true;\n    const source = new VectorTileSource({\n      state: 'loading',\n      format: new MVT(),\n    });\n\n    super({\n      source: source,\n      background: options.background === false ? null : options.background,\n      declutter: declutter,\n      className: options.className,\n      opacity: options.opacity,\n      visible: options.visible,\n      zIndex: options.zIndex,\n      minResolution: options.minResolution,\n      maxResolution: options.maxResolution,\n      minZoom: options.minZoom,\n      maxZoom: options.maxZoom,\n      renderOrder: options.renderOrder,\n      renderBuffer: options.renderBuffer,\n      renderMode: options.renderMode,\n      map: options.map,\n      updateWhileAnimating: options.updateWhileAnimating,\n      updateWhileInteracting: options.updateWhileInteracting,\n      preload: options.preload,\n      useInterimTilesOnError: options.useInterimTilesOnError,\n      properties: options.properties,\n    });\n\n    if (options.accessToken) {\n      this.accessToken = options.accessToken;\n    }\n    const url = options.styleUrl;\n    const promises = [\n      applyStyle(this, url, options.layers || options.source, {\n        accessToken: this.accessToken,\n      }),\n    ];\n    if (this.getBackground() === undefined) {\n      promises.push(\n        applyBackground(this, options.styleUrl, {\n          accessToken: this.accessToken,\n        }),\n      );\n    }\n    Promise.all(promises)\n      .then(() => {\n        source.setState('ready');\n      })\n      .catch((error) => {\n        this.dispatchEvent(new ErrorEvent(error));\n        const source = this.getSource();\n        source.setState('error');\n      });\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t76: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkol_mapbox_style\"] = self[\"webpackChunkol_mapbox_style\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));"],"names":["deferred","Property","CollectionEvent","constructor","type","element","index","super","this","Collection","array","options","on","once","un","unique_","unique","array_","i","ii","length","assertUnique_","updateLength_","clear","getLength","pop","extend","arr","push","forEach","f","getArray","item","get","insertAt","elem","Error","splice","dispatchEvent","ADD","removeAt","n","remove","prev","REMOVE","setAt","set","except","disposed","dispose","disposeInternal","Feature","geometryOrProperties","id_","undefined","geometryName_","style_","styleFunction_","geometryChangeKey_","addChangeListener","handleGeometryChanged_","geometry","setGeometry","properties","setProperties","clone","hasProperties","getProperties","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","changed","CHANGE","obj","styles","Array","isArray","createStyleFunction","setId","id","name","removeChangeListener","ImageWrapper","extent","resolution","pixelRatio","stateOrLoader","pixelRatio_","state","IDLE","image_","loader","getExtent","getImage","getPixelRatio","getResolution","getState","load","LOADING","requestResolution","then","image","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","LOADED","catch","error","ERROR","console","finally","setImage","setResolution","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","LOAD","src","decode","decodeFallback","Promise","resolve","reject","e","complete","width","handleLoad","unlisten","handleError","removeEventListener","addEventListener","EMPTY","ImageTile","tileCoord","crossOrigin","tileLoadFunction","crossOrigin_","src_","key","Image","unlisten_","tileLoadFunction_","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","canvas","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","bind","MapRenderer","Disposable","map","map_","dispatchRenderEvent","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","size","rotation","center","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","managed","feature","layer","call","projection","translatedCoordinate","slice","offsets","canWrapX","projectionExtent","worldWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","m","distanceSq","sort","a","b","some","hasFeatureAtCoordinate","getMap","renderFrame","scheduleExpireIconCache","canExpireCache","postRenderFunctions","expireIconCache","expire","Map","fontChangeListenerKey_","ObjectEventType","PROPERTYCHANGE","redrawText","element_","document","createElement","position","height","zIndex","className","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","hasListener","event","display","PRECOMPOSE","BaseVector","getDeclutter","declutter","renderedLayerStates","previousElement","layerIndex","sourceState","getSourceState","unrender","render","POSTCOMPOSE","renderDeclutter","renderDeferred","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","TOUCHMOVE","passive","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","pointerId","target","Object","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","defineProperty","writable","value","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","Math","abs","clientX","clientY","Control","pointerEvents","target_","setTarget","setMap","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","String","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","layers","getAllLayers","visibleAttributions","from","Set","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","attributions","all","attribution","visible","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","compassClassName","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","getRotation","PI","animate","easing","setRotation","transform","contains","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","Interaction","handleEvent","setActive","getActive","mapBrowserEvent","active","zoomByDelta","anchor","newResolution","getResolutionForZoom","delta_","stopEvent","browserEvent","shiftKey","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","var_args","conditions","arguments","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroid","update","adjustCenterInternal","begin","end","distance","getDistance","angle","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","dest","getCoordinateFromPixelInternal","cos","sin","animateInternal","getConstrainedCenter","endInteraction","lastAngle_","getConstraints","getSize","offset","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","min","top","getOverlayContainer","removeChild","setPixels","createOrUpdateGeometry","setCoordinates","Polygon","DragBoxEventType","DragBoxEvent","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","scale","fitInternal","defaultCondition_","pixelDelta_","pixelDelta","KEYDOWN","keyEvent","Key","mapUnitsDelta","deltaX","deltaY","currentCenter","pan","platformModifierKey","KEYPRESS","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","x","y","Date","now","lastIndex","firstIndex","dx","dy","sqrt","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","WHEEL","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","getConstrainResolution","adjustZoom","timeLeft","max","handleWheelZoom_","setMouseAnchor","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","removeLayerMapProperty","Layer","setMapInternal","getLayers","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotate","rotateOptions","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","CollectionEventType","addOverlayInternal_","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","getTarget","getProjection","getOverlayById","setLayers","group","collection","getLoadingOrNotReady","getLayerStatesArray","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","propagationStopped","handlePostRender","tileQueue","isEmpty","maxTotalLoading","maxNewLoads","hints","viewHints","ViewHint","ANIMATING","INTERACTING","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","RENDERCOMPLETE","resolveConstraints","CONTEXTMENU","unobserve","ShadowRoot","host","setSize","Composite","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","Group","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","isDef","getHints","usedTiles","wantedTiles","mapId","renderTargets","nextCenter","nextResolution","isNaN","nextRotation","nextExtent","prototype","apply","getCount","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","oldSize","setViewportSize","ObjectEvent","oldValue","BaseObject","values_","hasOwnProperty","getKeys","keys","assign","getPropertiesInternal","notify","listener","silent","applyProperties","unset","Observable","revision_","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","Tile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getTileCoord","getAlpha","start","inTransition","endTransition","DROP","Infinity","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","EventType","TileState","tileKey","newLoads","log","TileRange","minX","maxX","minY","maxY","containsXY","containsTileRange","tileRange","equals","getHeight","getWidth","intersects","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","cappedMaxRes","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","capped","z","floor","createSnapToResolutions","defaultMaxResolution","degrees","getMetersPerUnit","pow","defaultMinResolution","defaultMaxZoom","power","tolerance","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createRotationConstraint","constraints_","setCenterInternal","oldPadding","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","args","animationCount","animationCallback","series","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","jj","NaN","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","currentResolution","w","h","getCenter","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","getType","userProjection","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustResolution","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","linearFindNearest","candidate","reverseSubArray","tmp","data","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assert","assertion","errorMessage","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","rgb","_xyz","white","r","g","arg","o","_u","_v","l","u","v","xn","yn","zn","luv","vn","yr","lchuv","hr","c","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","cstr","space","parts","alpha","toLowerCase","base","parseInt","exec","dims","replace","trim","split","shift","baseHues","endsWith","test","match","join","hsl","t1","t2","t3","val","s","asString","color","MAX_CACHE_SIZE","cache","cacheSize","withAlpha","output","rgbaToLcha","lchaToRgba","fromString","raw","Number","parsed","normalize","asArray","round","asColorLike","pattern","getPattern","cacheKey","canvasPattern","iconImage","getImageState","patternCanvasContext","drawImage","asCanvasPattern","levels","info","warn","level","coordinate1","coordinate2","wrapX","worldsAway","sourceExtentWidth","getWorldsAway","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","createCanvasContext2D","canvasPool","settings","OffscreenCanvas","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeChildren","node","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","easeIn","t","easeOut","inAndOut","linear","listen","originalListener","eventsKey","listenOnce","unlistenByKey","BLUR","CLEAR","DRAGENTER","DRAGOVER","FOCUS","RESIZE","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","evt","dispatching","pendingRemovals","propagate","pr","getListeners","indexOf","boundingExtent","extendCoordinate","buffer","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","createEmpty","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getForViewAndSize","x2","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getRotatedViewport","getIntersection","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","GeometryCollection","Geometry","geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","closestPointXY","closestPoint","minSquaredDistance","computeExtent","getGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","simplifiedGeometry","intersectsExtent","sx","sy","setGeometries","setGeometriesArray","translate","defaultFeatureProjection","featureClass","supportedMediaTypes","getReadOptions","getUnits","setWorldExtent","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformed","fromProjection","toProjection","decimals","GeometryConstructor","Point","LineString","MultiPoint","MultiLineString","MultiPolygon","createRenderFeature","object","flat","geometryType","layout","ends","orient","orientFlatCoordinates","enableSimplifyTransformed","createGeometry","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","readGeometryInternal","readPointGeometry","readLineStringGeometry","deflate","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","getCoordinates","writePointGeometry","writeLineStringGeometry","right","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","featureObject","geometryObject","crs","objects","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","toPromise","getter","err","promiseGetter","tmpTransform","extent_","extentRevision_","simplifyTransformedInternal","revision","simplifyTransformed","coord","getClosestPoint","point","intersectsCoordinate","simplify","destination","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","flatMidpoint_","flatMidpointRevision_","maxDeltaRevision_","setFlatCoordinates","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","extrapolate","getCoordinateAt","getFlatMidpoint","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","setLayout","ends_","lineStrings","getLayout","appendLineString","multiLineString","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","appendPoint","multiPoint","squaredDistance","getPoint","getPoints","points","endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","polygons","thisEndss","polygon","appendPolygon","newEndss","multiPolygon","getOrientedFlatCoordinates","getEndss","getFlatInteriorPoints","flatCenters","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","getPolygons","lastEnds","LinearRing","SimpleGeometry","inflate","flatInteriorPointRevision_","flatInteriorPoint_","appendLinearRing","linearRing","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","fromExtent","getFirstCoordinate","getLastCoordinate","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","twiceArea","dx1","dy1","dx2","dy2","linearRingss","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","getInteriorPointOfArray","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","interpolatePoint","dimension","cumulativeLengths","lineStringCoordinateAtM","lo","hi","m0","lineStringsCoordinateAtM","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","lineStringLength","linearRingIsClockwise","edge","linearRingsAreOriented","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","inflateEnds","startOrientation","prevEndIndex","orientation","ret","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","snap","quantize","quantizeArray","quantizeMultiArray","transform2D","anchorX","anchorY","k","ua","navigator","userAgent","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","self","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","BaseLayer","background_","background","OPACITY","opacity","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","state_","getBackground","getClassName","getLayerState","getZIndex","getOpacity","getVisible","getLayersArray","states","EXTENT","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","newParsingContext","variables","featureId","encoded","expectedType","returnType","parser","parsers","parseCallExpression","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","createCallExpressionParser","hasArgsCount","argsCount","withNoArgs","withArgsOfType","withArgsOfReturnType","hasEvenArgs","inputType","input","fallback","message","interpolationType","interpolation","stop","operation","argCount","needleType","colors","parsedColors","minArgs","maxArgs","expression","argType","validators","computeGeometryType","substring","buildExpression","compileExpression","colorValue","compileAssertionExpression","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","atan","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","declutterMode","optionalDeclutterMode","text","Text","setText","setFill","setBackgroundFill","setStroke","setBackgroundStroke","setFont","setMaxAngle","setOffsetX","setOffsetY","setOverflow","placement","setPlacement","setRepeat","setScale","setRotateWithView","textAlign","setTextAlign","justify","setJustify","textBaseline","setTextBaseline","setPadding","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","property","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","icon","Icon","setDisplacement","setAnchor","buildIcon","pointsName","radiusName","requireNumber","radius","radius2","shape","RegularShape","buildShape","evaluateRadius","circle","Circle","setRadius","buildCircle","buildImage","evaluateZIndex","Style","empty","fill","stroke","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","Fill","setColor","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","Stroke","setWidth","lineCap","setLineCap","lineJoin","setLineJoin","setLineDash","setLineDashOffset","setMiterLimit","requireSize","BaseVectorLayer","baseOptions","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getFeatures","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","setRenderOrder","renderOrder","styleLike","toStyleLike","GroupEvent","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","pos","ownLayerState","defaultZIndex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","SOURCE","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","getData","isVisible","getMapInternal","find","layerExtent","inView","prepareFrame","MAP","arrayLayerState","createRenderer","PRELOAD","USE_INTERIM_TILES_ON_ERROR","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","opacity_","renderWorlds","executorGroup","declutterable","vectorSource","getLayer","snapToPixel","endWorld","world","getRenderTransform","execute","setDrawContext_","resetDrawContext_","globalAlpha","renderDeferredInternal","restore","prepareContainer","replayGroup","PRERENDER","POSTRENDER","preRender","clipUnrotated","postRender","transforms","featureCallback","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","userTransform","userExtent","loadFeatures","styleFunction","dirty","renderFeature","getFeaturesInExtent","replayGroupInstructions","finish","ExecutorGroup","getOverlaps","builderGroup","VectorLayer","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedOpacity_","tmpTransform_","tileClipContexts_","drawTile","updateExecutorGroup_","tileImageNeedsRender_","renderTileImage_","getTile","getOrCreateTile","wantedResolution","layerRevision","renderedTiles","builderState","getReplayState","renderedResolution","renderedRevision","renderedRenderOrder","sourceTileGrid","getTileGrid","tileExtent","getTileGridForProjection","getTileCoordExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","tempExtent","bufferedExtent","executorGroupInstructions","replayExtent","getRenderMode","renderingReplayGroup","tileGrid","hitExtent","declutteredFeatures","renderedProjection","getTileCoordForCoordAndResolution","loadingSourceTiles","tilePixel","reduce","accumulator","tileSize","getTileSize","getZForResolution","zDirection","getTileCoordCenter","tileCache","getTileCache","tileFeatures","hifi","tiles","getTileRenderTransform","acc","executorGroupZIndexContexts","getDeferredZIndexContexts","usedZIndices","executorGroupZindexContext","zIndexContexts","zIndexContext","getRenderedContext","tileClipContext","draw","worldOffset","inversePixelTransform","renderMode","replayTypes","tileSource","clips","clipZs","tileClipContexts","hasExecutors","currentZ","contextSaved","currentClip","getClipCoords","clipContext","ZIndexContext","clip","save","beginPath","moveTo","lineTo","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","getTilePixelSize","renderScale","canvasTransform","setTransform","pixelScale","VectorTileLayer","preload","useInterimTilesOnError","cacheSize_","renderMode_","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","bbox","clamp","squaredSegmentDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","modulo","lerp","toFixed","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","Projection","code","units","global","worldExtent","getPointResolution","cosh","PROJECTIONS","METERS_PER_UNIT","EPSG4326Projection","axisOrientation","metersPerUnit","sourceCode","getCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","projectionLike","pointResolution","getPointResolutionFunc","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","fromLonLat","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","transformExtent","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","projections2","forwardTransform","inverseTransform","exp","code_","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setGetPointResolution","RenderEvent","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","squaredTolerance_","stride_","simplifiedGeometry_","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","body","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","contextInstructions","executeLabelInstructions","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CUSTOM","endGeometry","BEGIN_GEOMETRY","reverseHitDetectionInstructions","reverse","instruction","END_GEOMETRY","fillStyleColor","getColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","lineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","createFill","fillInstruction","SET_FILL_STYLE","applyStroke","createStroke","SET_STROKE_STYLE","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","DRAW_IMAGE","filteredFlatCoordinates","sharedData","getAnchor","origin","getOrigin","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","MOVE_TO_LINE_TO","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","CIRCLE","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","maxAngle","segmentM","advance","beginX","beginY","startOffset","startLength","endM","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p1","p2","p3","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","line","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","fillStates","strokeStates","textStates","widths_","labels_","zIndexContext_","getZIndexContext","createLabel","textKey","fillKey","strokeKey","strokeState","fillState","textState","strokeWidth","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","strokeInstruction","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","box","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","baseline","execute_","declutterTree","pixelCoordinates","dd","prevX","prevY","roundX","roundY","d","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","BEGIN_PATH","arc","CLOSE_PATH","closePath","rotateWithView","labelWithAnchor","textOffsetX","textOffsetY","geometryWidths","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","collides","insert","DRAW_CHARS","measurePixelRatio","pixelRatioScale","textScale","cachedWidths","pathLength","textLength","drawChars","cc","part","FILL","STROKE","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","executors","instructionByZindex","candidates","contextSize","newContext","willReadFrequently","indexes","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","getImageData","idx","zs","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","pushFunction","deferredZIndexContexts","Instruction","beginPathInstruction","closePathInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","CanvasTextBuilder","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","textStrokeState_","textState_","textKey_","fillKey_","strokeKey_","beg","keep","saveTextStates_","p0","p","repeat","flatOffset","oo","chunk","chunkBegin","range","drawChars_","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","getOffsetX","getOffsetY","textRotateWithView","textRotation","getText","instructions_","offset_","context_","Proxy","pushMethodArgs_","instructionsAtIndex","instructionAtIndex","CanvasImmediateRenderer","VectorContext","transform_","transformRotation_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometryFunction","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","getImageSize","imgContext","getScale","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","getStaleKeys","prependStaleKey","unshift","ImageState","loadImage","imageState","pixelContext","tempTransform","pixelTransform","deferredContext_","containerReused","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","getRenderContext","asImageLike","disposedError","sharedContext","defaultSize","DataTile","loader_","data_","error_","size_","controller_","controller","getError","abort","Uint8ClampedArray","gutter_","reprojData_","reprojError_","reprojSize_","sourceTileGrid_","targetTileGrid_","targetTileGrid","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","sourceProjExtent","sourceTileGridExtent","clipExtent_","targetExtent","maxTargetExtent","maxSourceExtent","limitedTargetExtent","targetProj","errorThresholdInPixels","errorThreshold","triangulation_","Triangulation","getTriangles","sourceExtent","calculateSourceExtent","sourceRange","getTileRangeForExtentAndZ","getTileFunction","srcX","srcY","reproject_","dataSources","imageLike","tileData","arrayData","Uint8Array","Float32Array","DataView","toArray","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","clipExtent","dataType","targetWidth","targetHeight","dataR","dataU","reproj","sources","dataSource","createImageData","putImageData","ImageData","leftToLoad","sourceListenKey","unlistenSources_","getCacheKey","sourceKey","addTileToLookup","tilesByZ","existing","has","removeTileFromLookup","delete","getRenderExtent","gridExtent","CanvasTileLayerRenderer","tileLayer","extentChanged","renderComplete","renderedPixelRatio","renderedSourceKey_","renderedSourceRevision_","tempTileRange_","tempTileCoord_","tileCache_","LRUCache","containsKey","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getGutterForProjection","sourceRevision","enqueueTiles","initialZ","minZ","tileQueueKey","findStaleTile_","staleKeys","findAltTiles_","altZ","getTileRangeForTileCoordAndZ","covered","viewResolution","viewCenter","frameExtent","canvasExtent","targetZ","renderExtent","uid","tileState","parentZ","canvasScale","getInterpolate","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","xIndex","nextX","yIndex","nextY","updateUsedTiles","tilesCount","updateCacheSize","expireCache","tileCount","highWaterMark","getTileImage","alphaChanged","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","hasImage","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","loadingPromises","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","compensationFactor","calculateSourceExtentResolution","triangulation","renderEdges","drawSingle","pixelRound","globalCompositeOperation","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","ReprojTile","renderEdges_","canvas_","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","ERROR_THRESHOLD","createSnapToN","createSnapToZero","hasArea","toSize","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","attributionLike","maxEntries","rbush_","items_","extents","items","getAll","getInExtent","search","forEach_","forEachInExtent","toJSON","rbush","VectorSourceEvent","Event","VectorSource","format_","url_","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removeFeatures","removed","featureChangeKeys","idString","setLoader","setUrl","count_","entries_","oldest_","newest_","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","CircleStyle","displacement","getRadius","getDisplacement","patternImage_","color_","patternImage","calculateScale","wantedWidth","wantedHeight","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","iconImage_","offsetOrigin_","origin_","initialOptions_","unlistenImageChange","listenImageChange","getSrc","iconImageSize","taintedTestContext","IconImage","imageState_","tainted_","ready_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","onChange","shared","cache_","patternCache_","maxCacheSize_","createPattern","maxCacheSize","ImageStyle","scaleArray_","displacement_","canvases_","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getRadius2","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","createDefaultStyle","font_","textAlign_","justify_","repeat_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","getKeyZXY","getCacheKeyForTileKey","fromKey","hash","withinExtentAndZ","getFullTileRange","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","tmp_","create","reset","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","setFromArray","compose","makeInverse","det","matrixPrecision","abstract","uidCounter_","getUid","ol_uid","quickselect","quickselectStep","defaultCompare","sd","swap","RBush","_maxEntries","_minEntries","_all","toBBox","nodesToSearch","child","childBBox","leaf","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","goingUp","findItem","_condense","compareMinX","compareMinY","fromJSON","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","v8Spec","$version","$root","version","required","metadata","centerAltitude","bearing","period","pitch","roll","light","sky","terrain","sprite","glyphs","source_vector","vector","bounds","scheme","tms","minzoom","maxzoom","promoteId","volatile","source_raster","raster","source_raster_dem","encoding","terrarium","mapbox","custom","redFactor","blueFactor","greenFactor","baseShift","source_geojson","geojson","maximum","minimum","cluster","clusterRadius","clusterMaxZoom","clusterMinPoints","clusterProperties","lineMetrics","generateId","source_video","video","urls","source_image","symbol","heatmap","hillshade","paint","layout_background","visibility","layout_fill","interpolated","parameters","layout_circle","layout_heatmap","layout_line","butt","square","bevel","miter","requires","layout_symbol","auto","never","cooperative","viewport","both","tokens","bottom","horizontal","vertical","uppercase","lowercase","layout_raster","layout_hillshade","filter_operator","any","geometry_type","identity","exponential","categorical","colorSpace","lab","hcl","function_stop","intensity","exaggeration","paint_fill","paint_line","paint_circle","paint_heatmap","paint_symbol","overridable","paint_raster","paint_hillshade","paint_background","constant","refProperties","deref","derefLayers","ref","ValidationError","identifier","__line__","extendBy","inputs","ExpressionParsingError","Scope","bindings","NullType","kind","ProjectionDefinitionType","ObjectType","ValueType","CollatorType","FormattedType","PaddingType","ResolvedImageType","VariableAnchorOffsetCollectionType","itemType","typeToString","valueMemberTypes","checkSubtype","memberType","isValidType","provided","allowedTypes","isValidNativeType","verifyType","sample","Xn","Zn","t0","deg2rad","rad2deg","constrainAngle","rgbToLab","xyz2lab","rgb2xyz","labToRgb","lab2xyz","xyz2rgb","parseHex","hex","padEnd","parseAlpha","asPercentage","validateNumbers","namedColors","to","interpolateArray","premultiplied","overwriteGetter","rgba","namedColorsMatch","startsWith","rgbRegExp","rgbMatch","_","rp","gp","bp","f3","ap","argFormat","valFormat","maxValue","hslMatch","hsla","hslToRgb","parseCssColor","rgbColor","rgbToHcl","getterKey","lazyValue","spaceKey","hue0","chroma0","light0","alphaF","hue1","chroma1","light1","alphaT","hue","chroma","dh","hclToRgb","transparent","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","VERTICAL_ALIGN_OPTIONS","FormattedSection","fontStack","textColor","verticalAlign","Formatted","sections","unformatted","section","factory","Padding","RuntimeError","VariableAnchorOffsetCollection","anchorValue","offsetValue","fromValues","toValues","fx","fy","tx","ty","ResolvedImage","ProjectionDefinition","validateRGBA","isValue","mixed","typeOf","valueToString","Literal","evaluate","eachChild","outputDefined","types$1","string","number","boolean","Assertion","types","Coercion","parseColor","pad","coll","num","geometryTypes","EvaluationContext","globals","featureState","formattedSection","_parseColorCache","availableImages","canonical","canonicalID","cached","ParsingContext","registry","isConstantFunc","scope","errors","_isConstant","expr","_parse","annotate","typeAnnotation","Expr","actual","ec","Let","binding","boundExpression","At","IndexOf","fromIndex","rawIndex","outputType","cases","outputs","otherwise","labels","labelContext","MAX_SAFE_INTEGER","branches","Slice","beginIndex","endIndex","findStopLessThanOrEqualTo","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labelKey","valueKey","stopCount","getDefaultExportFromCjs","__esModule","unitbezier","hasRequiredUnitbezier","unitbezierExports","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","solve","requireUnitbezier","interpolationFactor","lower","upper","exponentialInterpolation","controlPoints","rest","outputLower","outputUpper","lowerValue","upperValue","difference","parsedArgs","needsAnnotation","requestedImageName","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","rt","Equals","NotEquals","LessThanOrEqual","GreaterThanOrEqual","CollatorExpression","NumberFormat","currency","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","Length","getTileCoordinates","lat","tilesAtZoom","getLngLatFromTileCoord","mercatorX","mercatorY","updateBBox","boxWithinBox","pointOnBoundary","segmentIntersectSegment","vectorP","twoSided","lineIntersectPolygon","ring","pointWithinPolygon","rings","trueIfOnBoundary","inside","pointWithinPolygons","lineStringWithinPolygon","lineStringWithinPolygons","q1","q2","det1","det2","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","Within","polygonsCoords","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","TinyQueue","_down","_up","current","halfLength","bestChild","calculateSignedArea","sum","FE","E2","RAD","CheapRuler","coslat","w2","kx","ky","wrap","pointOnLine","minI","minT","minDist","sqDist","deg","MinPointsSize","MinLinePointsSize","compareDistPair","getRangeSize","isRangeSafe","splitRange","isLine","size1","getBBox","getPolygonBBox","isValidBBox","bboxToBBoxDistance","ruler","pointToLineDistance","nearestPoint","segmentToSegmentDistance","dist1","dist2","lineToLineDistance","line1","range1","line2","range2","dist","pointsToPointsDistance","points1","points2","pointToPolygonDistance","front","back","lineToPolygonDistance","polygonIntersect","poly1","poly2","polygonToPolygonDistance","polygon1","polygon2","currentMiniDist","ring1","ring2","len2","updateQueue","distQueue","miniDist","rangeA","tempDist","updateQueueTwoSets","pointSet1","pointSet2","pointsToPolygonDistance","distPair","newRangesA","pointSetToPointSetDistance","isLine1","isLine2","rangeB","threshold1","threshold2","sublibe","newRangesB","toSimpleGeometry","Distance","pointPosition","pointToGeometryDistance","linePositions","lineStringToGeometryDistance","maxRings","ccw","classifyRings","polygonToGeometryDistance","expressions$1","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","signature","signatureContext","params","isExpressionConstant","argParseFailed","signatures","stringifySignature","actualTypes","register","varargs","isTypeAnnotation","childrenConstant","isFeatureConstant","isGlobalPropertyConstant","isStateConstant","supportsPropertyExpression","spec","supportsZoomExpression","supportsInterpolation","isFunction$1","heatmapDensity","lineProgress","accumulated","LN2","LN10","asin","isSupportedScript","toUpperCase","StyleExpression","propertySpec","_warningHistory","_evaluator","_defaultValue","default","_enumValues","evaluateWithoutErrorHandling","isExpression","createExpression","enum","formatted","projectionDefinition","resolvedImage","variableAnchorOffsetCollection","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","zoomStops","createPropertyExpression","expressionInput","isFeatureConstantResult","isZoomConstant","zoomCurve","findZoomCurve","childResult","isExpressionFilter","filterSpec","geometryNeeded","convertFilter$1","convertComparisonOp$1","convertNegation","filters","convertInOp$1","convertHasOp$1","convertLiteral","getInterpolateOperator","getFallback","defaultValue","convertPropertyFunction","getFunctionType","appendStopPair","fixupDegenerateStepCurve","curve","isStep","convertTokenString","re","literal","validateConstants","constants","unbundle","valueOf","deepUnbundle","unbundledValue","validateObject","elementSpecs","valueSpec","elementValidators","objectElementValidators","styleSpec","validateSpec","objectKey","elementSpecKey","elementSpec","validateElement","validateArray","arraySpec","validateArrayElement","arrayElementValidator","arrayElementSpec","function","arrayIndex","validateNumber","validateFunction","functionValueSpec","functionType","stopKeyType","previousStopDomainValue","previousStopDomainZoom","stopDomainValues","isZoomFunction","isPropertyFunction","isZoomAndPropertyFunction","validateFunctionStop","validateStopDomainValue","reportValue","validateExpression","expressionContext","expressionObj","propertyKey","propertyType","validateEnum","validateFilter","validateNonExpressionFilter","validateProperty","layerSpec","layerType","transitionMatch","tokenMatch","validatePaintProperty","validateLayoutProperty","validateLayer","layerId","otherLayer","sourceType","validateString","prop","validateSource","_a","sourceName","rasterDEM","rasterDEMSpec","rootType","isCustomEncoding","customEncodingKeys","encodingName","validateRasterDEMSource","mapExpr","reduceExpr","validateLight","lightSpec","validateSky","skySpec","validateTerrain","terrainSpec","validateSprite","allSpriteIds","allSpriteURLs","pairSpec","VALIDATORS","projectionSpec","isProjectionDefinitionValue","isPropertyValueSpecification","validate","validateGlyphsUrl","validateStyleMin","sortErrors","injectValidateSpec","validator","wrapCleanErrors","inner","paintProperty","layoutProperty","v8","fontWeights","thin","hairline","book","regular","normal","plain","roman","standard","medium","bold","heavy","fat","poster","sp","italicRE","fontCache","cssData","haveWeight","haveStyle","fontFamilies","maybeWeight","previousPart","VectorTile","features_","onLoad","setFeatures","onError","mapboxBaseUrl","getMapboxPath","normalizeStyleUrl","token","mapboxPath","decodeURI","URL","location","href","mapboxSubdomains","normalizeSourceUrl","tokenParam","styleUrl","urlObject","searchParams","sizeFactor","sub","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","functionCache","defaultResolutions","createCanvas","pendingRequests","fetchResource","resourceType","request","transformedRequest","transformRequest","pendingRequest","Request","headers","fetch","response","ok","json","getGlStyle","glStyleOrUrl","accessToken","tilejsonCache","getTileJson","glSource","promise","arrayBuffer","blob","createObjectURL","revokeObjectURL","normalizedSourceUrl","accessTokenParam","tileJson","tileUrl","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imageCanvas","imageContext","smoothstep","drawSDF","gamma","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","fontFamilyRegEx","stripQuotesRegEx","loadedFontFamilies","hasFontFamily","styleSheets","styleSheet","cssRules","cssRule","cssText","processedFontFamilies","expressionData","rawExpression","compiledExpression","emptyObj","zoomObj","renderFeatureCoordinates","getValue","layoutOrPaint","functions","isExpr","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","featureFunctionParameters","featureFunctionStops","convertZoomAndPropertyFunction","convertZoomFunction","convertFunction","evaluateFilter","filterCache","needGeometry","compiled","globalProperties","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","recordLayer","stylefunction","olLayer","sourceOrLayers","spriteData","spriteImageUrl","getFonts","spriteImageSize","spriteImageUnSDFed","blobUrl","worker","postMessage","action","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","onlyLayer","featureBelongsToLayer","stylesLength","layerData","strokeColor","fillIcon","icon_cache_key","iconImg","skipLabel","textLineHeight","textSize","maxTextWidth","placementAngle","styleGeom","imageElement","iconRotationAlignment","geom","xM","dotProduct","iconSize","iconColor","iconCacheKey","iconOptions","sdf","circleRadius","circleStrokeColor","circleTranslate","circleColor","circleStrokeWidth","cache_key","fontArray","textField","chunkFont","textTransform","wrappedLabel","setKeepUpright","keepUpright","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","Pbf","buf","ArrayBuffer","isView","dataView","readFields","readField","readVarint","tag","startPos","skip","readMessage","readFixed32","getUint32","readSFixed32","getInt32","readFixed64","readSFixed64","readFloat","getFloat32","readDouble","getFloat64","isSigned","toNum","readVarintRemainder","readVarint64","readSVarint","readBoolean","readString","subarray","str","b0","b3","bytesPerSequence","readUtf8","readBytes","readPackedVarint","readPackedEnd","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeVarint","realloc","writeFixed32","setInt32","writeSFixed32","writeFixed64","writeSFixed64","pbf","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeSVarint","writeBoolean","writeString","lead","charCodeAt","writeUtf8","makeRoomForExtraLength","writeFloat","setFloat32","writeDouble","setFloat64","writeBytes","writeRawMessage","writeMessage","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","extraLen","MVT","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","pbfLayers","layersPBFReader","pbfLayer","readRawFeature","layerPBFReader","featurePBFReader","BaseImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","imageExtent","imageMapWidth","imageMapHeight","imageResolution","imageResolutionX","imageResolutionY","clipped","dw","BaseImage","BaseTileLayer","getCacheSize","BaseTile","ImageCanvas","handleLoad_","fromResolutionLike","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","wantedProjection_","setResolutions","findNearestResolution","getImageInternal","requestExtent","requestWidth","requestHeight","getRequestExtent","handleImageChange","TileCache","pruneExceptNewestZ","tmpTileCoord","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tileCoordExtent","getTileCoordChildTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","fullTileRanges","getForProjection","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","half","TileSource","tilePixelRatio_","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileCoordForTileUrlFunction","useTile","TileSourceEvent","createMinion","buffers","meta","imageOps","numBuffers","numBytes","images","arrays","pixels","createWorker","config","onMessage","lib","Worker","Blob","Buffer","Processor","threads","imageOps_","workers","onWorkerMessage_","minion","terminated","terminate","createFauxWorker","workers_","queue_","maxQueueLength_","queue","running_","dataLookup_","job_","process","enqueue_","dispatch_","job","slices","resolveJob_","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","createLayer","createLayers","useResolutions_","processSources_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","sourceAttributions","setOperation","updateFrameState_","allSourcesReady_","imageDatas","onWorkerComplete_","layerOrSource","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplate","template","renderXYZTemplate","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","charCode","expandUrl","tileCoordKey","defaultTileLoadFunction","imageTile","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","tileJSON_","jsonp","errback","callbackParam","script","cleanup","async","timer","head","handleTileJSONResponse","handleTileJSONError","client","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","attributionExtent","VectorRenderTile","replayState_","errorTileKeys","hasContext","renderedTileZ","defaultLoadFunction","sourceTileCache_","tileGrids_","usedSourceTiles","sourceZ","sourceTileState","listenChange","sourceTileKey","elevationImage","elevationData","shadeData","dp","twoPi","halfPi","sunEl","sunAz","cosSunEl","sinSunEl","highlightColor","shadowColor","accentColor","pixelX","pixelY","z0","z1","dzdx","dzdy","aspect","accent","scaled","shade","scaledAccentColor","compositeShadeColor","slopeScaleBase","scaledSlope","cosIncidence","calculateElevation","vert","getTileResolutions","completeOptions","applyStyle","sourceOrLayersOrOptions","optionsOrPath","sourceId","updateSource","Vector","assignSource","setupVectorSource","targetSource","setupGeoJSONSource","spriteScale","templateUrl","webfonts","fontsKey","fontDescriptions","cssFont","fontDescription","fontUrl","querySelector","markup","rel","normalizeSpriteUrl","spriteUrl","pathname","spritesJson","applyBackground","mapOrLayer","getBackgroundColor","setupBackgroundLayer","setFirstBackground","getSourceIdByRef","sourceOptionsFromTileJSON","tileJSONSource","tileJSONDoc","tr","extentFromTileJSON","sourceOptions","glLayer","bg","div","getBboxTemplate","setupRasterLayer","getTileUrl","bboxTemplate","setupRasterSource","geoJsonFormat","GeoJSON","geoJsonUrl","extentUrl","setupLayer","glLayers","setupVectorLayer","updateRasterLayerProperties","prerenderRasterLayer","setupGeoJSONLayer","hillshadeLayer","Raster","setupHillshadeLayer","glSourceId","processStyle","mapOrGroup","promises","layerIds","finalizeLayer","debug","mapOrGroupOrElement","HTMLElement","sourceMinZoom","layerMapboxLayerids","mapboxLayer","manageVisibility","setFeatureState","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","notFulfilled","fulfilled","enumerable","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal"],"sourceRoot":""}