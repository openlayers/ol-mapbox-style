{"version":3,"file":"common.js","mappings":"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EhB,CACF,CACF,CAEA,GAAY,GAARl9H,GAA4B,WAAf2K,EAAM3K,KAAmB,GACtCw8H,EACF99H,EAAQyF,EAAOq4H,GAEZ99H,GACAA,EAAMyG,aACPzG,EAAMq0F,YACNr0F,EAAMu0F,cAENv0F,EAAQ,IAAI2hE,EAAA,GACZl8D,EAAOq4H,GAAgB99H,GAEzB,MAAMw/H,EACJ,kBAAmBxB,EACf/C,GACEhvH,EACA,QACA,gBACAuO,EACAhe,EACAw5H,EACAnR,GAEF,EACA4a,EAAoBtD,GACxBlB,GACEhvH,EACA,QACA,sBACAuO,EACAhe,EACAw5H,EACAnR,GAEFoW,GACEhvH,EACA,QACA,wBACAuO,EACAhe,EACAw5H,EACAnR,IAIE6a,EAAkBzE,GACtBhvH,EACA,QACA,mBACAuO,EACAhe,EACAw5H,EACAnR,GAEI8a,EAAcxD,GAClBlB,GACEhvH,EACA,QACA,eACAuO,EACAhe,EACAw5H,EACAnR,GAEFoW,GACEhvH,EACA,QACA,iBACAuO,EACAhe,EACAw5H,EACAnR,IAGE+a,EAAoB3E,GACxBhvH,EACA,QACA,sBACAuO,EACAhe,EACAw5H,EACAnR,GAEIgb,EACJL,EACA,IACAC,EACA,IACAE,EACA,IACAC,EACA,IACAF,EAAgB,GAChB,IACAA,EAAgB,GAElBnB,EAAUhB,EAAesC,GACpBtB,IACHA,EAAU,IAAIj9D,EAAA,EAAO,CACnBP,OAAQy+D,EACR3rB,aAAc,CAAC6rB,EAAgB,IAAKA,EAAgB,IACpD59D,OACE29D,GAAqBG,EAAoB,EACrC,IAAI78D,EAAA,EAAO,CACTj6D,MAAO82H,EACPjuF,MAAO8tF,SAETz7H,EACN69D,KAAM89D,EACF,IAAIp9D,EAAA,EAAK,CACP5wB,MAAOguF,SAET37H,EACJu5D,cAAe,SAEjBggE,EAAesC,GAAatB,GAE9Bv+H,EAAM4H,SAAS22H,GACf9gE,EAAOz9D,EAAMu1F,UACbv1F,EAAM29D,aAAQ35D,GACdhE,EAAMwE,iBAAYR,GAClBhE,EAAMqyD,UAAU7wD,GAChBolG,GAAW,CACb,CAGA,GAAI,eAAgB/lD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","sources":["webpack://ol-mapbox-style/webpack/runtime/chunk loaded","webpack://ol-mapbox-style/./node_modules/@mapbox/unitbezier/index.js","webpack://ol-mapbox-style/./node_modules/csscolorparser/csscolorparser.js","webpack://ol-mapbox-style/./node_modules/mapbox-to-css-font/index.js","webpack://ol-mapbox-style/./node_modules/nanoassert/index.js","webpack://ol-mapbox-style/./node_modules/ol/Collection.js","webpack://ol-mapbox-style/./node_modules/ol/CollectionEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Disposable.js","webpack://ol-mapbox-style/./node_modules/ol/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/Image.js","webpack://ol-mapbox-style/./node_modules/ol/ImageState.js","webpack://ol-mapbox-style/./node_modules/ol/ImageTile.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Map.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Composite.js","webpack://ol-mapbox-style/./node_modules/ol/MapEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventType.js","webpack://ol-mapbox-style/./node_modules/ol/pointer/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventHandler.js","webpack://ol-mapbox-style/./node_modules/ol/MapEventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapProperty.js","webpack://ol-mapbox-style/./node_modules/ol/control/Control.js","webpack://ol-mapbox-style/./node_modules/ol/control/Attribution.js","webpack://ol-mapbox-style/./node_modules/ol/control/Rotate.js","webpack://ol-mapbox-style/./node_modules/ol/control/Zoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Property.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Interaction.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Pointer.js","webpack://ol-mapbox-style/./node_modules/ol/events/condition.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragRotate.js","webpack://ol-mapbox-style/./node_modules/ol/render/Box.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragBox.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragZoom.js","webpack://ol-mapbox-style/./node_modules/ol/events/Key.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardZoom.js","webpack://ol-mapbox-style/./node_modules/ol/Kinetic.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchRotate.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchZoom.js","webpack://ol-mapbox-style/./node_modules/ol/Map.js","webpack://ol-mapbox-style/./node_modules/ol/control/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/Object.js","webpack://ol-mapbox-style/./node_modules/ol/ObjectEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Observable.js","webpack://ol-mapbox-style/./node_modules/ol/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/structs/PriorityQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileRange.js","webpack://ol-mapbox-style/./node_modules/ol/TileState.js","webpack://ol-mapbox-style/./node_modules/ol/ViewProperty.js","webpack://ol-mapbox-style/./node_modules/ol/centerconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/resolutionconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/View.js","webpack://ol-mapbox-style/./node_modules/ol/ViewHint.js","webpack://ol-mapbox-style/./node_modules/ol/array.js","webpack://ol-mapbox-style/./node_modules/ol/asserts.js","webpack://ol-mapbox-style/./node_modules/color-space/rgb.js","webpack://ol-mapbox-style/./node_modules/color-space/xyz.js","webpack://ol-mapbox-style/./node_modules/color-space/luv.js","webpack://ol-mapbox-style/./node_modules/color-space/lchuv.js","webpack://ol-mapbox-style/./node_modules/color-parse/node_modules/color-name/index.js","webpack://ol-mapbox-style/./node_modules/color-parse/index.js","webpack://ol-mapbox-style/./node_modules/color-space/hsl.js","webpack://ol-mapbox-style/./node_modules/ol/color.js","webpack://ol-mapbox-style/./node_modules/color-rgba/index.js","webpack://ol-mapbox-style/./node_modules/ol/colorlike.js","webpack://ol-mapbox-style/./node_modules/ol/console.js","webpack://ol-mapbox-style/./node_modules/ol/coordinate.js","webpack://ol-mapbox-style/./node_modules/ol/css.js","webpack://ol-mapbox-style/./node_modules/ol/dom.js","webpack://ol-mapbox-style/./node_modules/ol/easing.js","webpack://ol-mapbox-style/./node_modules/ol/events.js","webpack://ol-mapbox-style/./node_modules/ol/events/Event.js","webpack://ol-mapbox-style/./node_modules/ol/events/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/events/Target.js","webpack://ol-mapbox-style/./node_modules/ol/extent.js","webpack://ol-mapbox-style/./node_modules/ol/extent/Relationship.js","webpack://ol-mapbox-style/./node_modules/ol/featureloader.js","webpack://ol-mapbox-style/./node_modules/ol/geom/GeometryCollection.js","webpack://ol-mapbox-style/./node_modules/ol/format/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/format/JSONFeature.js","webpack://ol-mapbox-style/./node_modules/ol/format/GeoJSON.js","webpack://ol-mapbox-style/./node_modules/ol/functions.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Geometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiLineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPolygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Point.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LinearRing.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Polygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/SimpleGeometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/area.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/center.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/closest.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/contains.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/deflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/inflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interiorpoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interpolate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/intersectsextent.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/length.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/reverse.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/orient.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/segments.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/simplify.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/transform.js","webpack://ol-mapbox-style/./node_modules/ol/has.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Base.js","webpack://ol-mapbox-style/./node_modules/ol/expr/expression.js","webpack://ol-mapbox-style/./node_modules/ol/expr/cpu.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/style.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseVector.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Group.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Property.js","webpack://ol-mapbox-style/./node_modules/ol/layer/TileProperty.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/loadingstrategy.js","webpack://ol-mapbox-style/./node_modules/ol/math.js","webpack://ol-mapbox-style/./node_modules/ol/obj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg3857.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg4326.js","webpack://ol-mapbox-style/./node_modules/ol/proj/projections.js","webpack://ol-mapbox-style/./node_modules/ol/proj/transforms.js","webpack://ol-mapbox-style/./node_modules/ol/sphere.js","webpack://ol-mapbox-style/./node_modules/ol/proj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Projection.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Units.js","webpack://ol-mapbox-style/./node_modules/ol/render/Event.js","webpack://ol-mapbox-style/./node_modules/ol/render/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/render/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/render/VectorContext.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Builder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/textpath.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Executor.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Instruction.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/linechunk.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/straightchunk.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ZIndexContext.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Immediate.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/hitdetect.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/DataTile.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/DataTile.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/vector.js","webpack://ol-mapbox-style/./node_modules/ol/reproj.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Triangulation.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/common.js","webpack://ol-mapbox-style/./node_modules/ol/rotationconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/size.js","webpack://ol-mapbox-style/./node_modules/ol/source/Source.js","webpack://ol-mapbox-style/./node_modules/ol/structs/RBush.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/structs/LRUCache.js","webpack://ol-mapbox-style/./node_modules/ol/style/Circle.js","webpack://ol-mapbox-style/./node_modules/ol/style/Fill.js","webpack://ol-mapbox-style/./node_modules/ol/style/Icon.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImage.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImageCache.js","webpack://ol-mapbox-style/./node_modules/ol/style/Image.js","webpack://ol-mapbox-style/./node_modules/ol/style/RegularShape.js","webpack://ol-mapbox-style/./node_modules/ol/style/Stroke.js","webpack://ol-mapbox-style/./node_modules/ol/style/Style.js","webpack://ol-mapbox-style/./node_modules/ol/style/Text.js","webpack://ol-mapbox-style/./node_modules/ol/tilecoord.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/common.js","webpack://ol-mapbox-style/./node_modules/ol/transform.js","webpack://ol-mapbox-style/./node_modules/ol/util.js","webpack://ol-mapbox-style/./node_modules/quickselect/index.js","webpack://ol-mapbox-style/./node_modules/rbush/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/convert.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/scope.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/formatted.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/resolved_image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/values.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/literal.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/runtime_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/assertion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coercion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/evaluation_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/compound_expression.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/within.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/is_constant.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/var.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/stops.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/step.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color_spaces.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coalesce.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/let.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/at.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/in.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index_of.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/match.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/case.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/slice.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/comparison.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/number_format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/length.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/result.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/unbundle_jsonlint.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/reference/latest.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/feature_filter/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/ref_properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/deref.js","webpack://ol-mapbox-style/./node_modules/ol/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/uri.js","webpack://ol-mapbox-style/./src/mapbox.js","webpack://ol-mapbox-style/./src/util.js","webpack://ol-mapbox-style/./src/text.js","webpack://ol-mapbox-style/./src/stylefunction.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseImage.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Image.js","webpack://ol-mapbox-style/./node_modules/pbf/index.js","webpack://ol-mapbox-style/./node_modules/ol/format/MVT.js","webpack://ol-mapbox-style/./node_modules/ol/ImageCanvas.js","webpack://ol-mapbox-style/./node_modules/ol/resolution.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Image.js","webpack://ol-mapbox-style/./node_modules/ol/source/Image.js","webpack://ol-mapbox-style/./node_modules/ol/source/common.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseTile.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/TileCache.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/TileGrid.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid.js","webpack://ol-mapbox-style/./node_modules/ol/source/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/source/Raster.js","webpack://ol-mapbox-style/./node_modules/ol/tileurlfunction.js","webpack://ol-mapbox-style/./node_modules/ol/source/UrlTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileImage.js","webpack://ol-mapbox-style/./node_modules/ol/net.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileJSON.js","webpack://ol-mapbox-style/./node_modules/ol/VectorRenderTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorTile.js","webpack://ol-mapbox-style/./src/shaders.js","webpack://ol-mapbox-style/./src/apply.js","webpack://ol-mapbox-style/./src/MapboxVectorLayer.js","webpack://ol-mapbox-style/webpack/bootstrap","webpack://ol-mapbox-style/webpack/runtime/define property getters","webpack://ol-mapbox-style/webpack/runtime/hasOwnProperty shorthand","webpack://ol-mapbox-style/webpack/runtime/make namespace object","webpack://ol-mapbox-style/webpack/runtime/jsonp chunk loading"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype.sampleCurveX = function(t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\n\nUnitBezier.prototype.sampleCurveY = function(t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\n\nUnitBezier.prototype.sampleCurveDerivativeX = function(t) {\n    return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n};\n\nUnitBezier.prototype.solveCurveX = function(x, epsilon) {\n    if (typeof epsilon === 'undefined') epsilon = 1e-6;\n\n    var t0, t1, t2, x2, i;\n\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon) return t2;\n\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 1e-6) break;\n\n        t2 = t2 - x2 / d2;\n    }\n\n    // Fall back to the bisection method for reliability.\n    t0 = 0.0;\n    t1 = 1.0;\n    t2 = x;\n\n    if (t2 < t0) return t0;\n    if (t2 > t1) return t1;\n\n    while (t0 < t1) {\n\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon) return t2;\n\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n\n    // Failure.\n    return t2;\n};\n\nUnitBezier.prototype.solve = function(x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 200,\n  'extra-light': 200,\n  light: 300,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  'extra-bold': 800,\n  'ultra-bold': 800,\n  heavy: 900,\n  black: 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900,\n  'ultra-black': 950,\n  'extra-black': 950\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\nmodule.exports = function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        haveStyle = true;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n        haveStyle = true;\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n        haveWeight = true;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n","module.exports = assert\n\nclass AssertionError extends Error {}\nAssertionError.prototype.name = 'AssertionError'\n\n/**\n * Minimal assert function\n * @param  {any} t Value to check if falsy\n * @param  {string=} m Optional assertion error message\n * @throws {AssertionError}\n */\nfunction assert (t, m) {\n  if (!t) {\n    var err = new AssertionError(m)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, assert)\n    throw err\n  }\n}\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = Array.from(\n      new Set(layers.flatMap((layer) => layer.getAttributions(frameState))),\n    );\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      /**\n       * @type {import(\"./Tile.js\").default}\n       */\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @this {typeof target}\n     */\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(thisArg ?? this, arguments);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @typedef {function(this:(import(\"./source/Vector\").default<FeatureType>|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<FeatureType>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @template {import(\"./Feature.js\").FeatureLike} FeatureType\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source =\n      /** @type {import(\"./source/Vector\").default<FeatureType>} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import('../Feature.js').FeatureLike} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {FeatureToFeatureClass<FeatureType>}\n     */\n    this.featureClass = /** @type {FeatureToFeatureClass<FeatureType>} */ (\n      Feature\n    );\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {FeatureFormat<FeatureType>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   * @override\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   * @override\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {JSONFeature<FeatureType>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @override\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return /** @type {FeatureType|Array<FeatureType>} */ (\n        createRenderFeature(\n          {\n            geometry,\n            id: geoJSONFeature['id'],\n            properties: geoJSONFeature['properties'],\n          },\n          options,\n        )\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return /** @type {FeatureType|Array<FeatureType>} */ (feature);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return /** @type {Array<FeatureType>} */ (features.flat());\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   * @override\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   * @override\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   * @override\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(withNoArgs),\n  [Ops.Time]: createCallExpressionParser(withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        (evt) => {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup, {\n  DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default<import('../../source/VectorTile.js').default<import('../../Feature.js').FeatureLike>>>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   * @param {import(\"./TileLayer.js\").Options} options Options.\n   */\n  constructor(layer, options) {\n    super(layer, options);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedOpacity_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<ZIndexContext>}\n     */\n    this.tileClipContexts_ = null;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @override\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    this.updateExecutorGroup_(\n      tile,\n      frameState.pixelRatio,\n      frameState.viewState.projection,\n    );\n    if (this.tileImageNeedsRender_(tile)) {\n      this.renderTileImage_(tile, frameState);\n    }\n    super.drawTile(tile, frameState, x, y, w, h, gutter, transition);\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @override\n   */\n  getTile(z, x, y, frameState) {\n    const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n      this.getOrCreateTile(z, x, y, frameState)\n    );\n    if (!tile) {\n      return null;\n    }\n\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    return tile;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = !!layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tempExtent,\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        sharedExtent,\n        resolution,\n        pixelRatio,\n      );\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio,\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @param {number} [index] Render order index.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature, index) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutter,\n            index,\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature, i);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer(),\n        true,\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutter = layer.getDeclutter();\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures = declutter\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures,\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice(),\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution,\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile.getSourceTiles().reduce(function (\n        accumulator,\n        sourceTile,\n      ) {\n        return accumulator.concat(sourceTile.getFeatures());\n      }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection),\n          ),\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0,\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation,\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @return {Array<import('../../Feature.js').FeatureLike>} Features.\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.getTileCache();\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const tileGrid = this.getLayer().getSource().tileGrid;\n    const z = tileGrid.getZForResolution(this.renderedResolution);\n    tileCache.forEach((tile) => {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const executorGroups = tile.executorGroups[getUid(this.getLayer())];\n      const declutter = this.getLayer().getDeclutter();\n      if (executorGroups) {\n        for (let j = executorGroups.length - 1; j >= 0; --j) {\n          executorGroups[j].execute(\n            this.context,\n            [this.context.canvas.width, this.context.canvas.height],\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            DECLUTTER,\n            declutter ? frameState.declutter[declutter] : undefined,\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const executorGroups = tiles.reduce((acc, tile, index) => {\n      tile.executorGroups[getUid(this.getLayer())].forEach((executorGroup) =>\n        acc.push({\n          executorGroup,\n          index,\n        }),\n      );\n      return acc;\n    }, []);\n\n    const executorGroupZIndexContexts = executorGroups.map(({executorGroup}) =>\n      executorGroup.getDeferredZIndexContexts(),\n    );\n    const usedZIndices = {};\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroupZindexContext =\n        executorGroups[i].executorGroup.getDeferredZIndexContexts();\n      for (const key in executorGroupZindexContext) {\n        usedZIndices[key] = true;\n      }\n    }\n    const zIndexKeys = Object.keys(usedZIndices).sort(ascending);\n    zIndexKeys.map(Number).forEach((zIndex) => {\n      executorGroupZIndexContexts.forEach((zIndexContexts, i) => {\n        if (!zIndexContexts[zIndex]) {\n          return;\n        }\n        zIndexContexts[zIndex].forEach((zIndexContext) => {\n          const {executorGroup, index} = executorGroups[i];\n          const context = executorGroup.getRenderedContext();\n          const alpha = context.globalAlpha;\n          context.globalAlpha = this.renderedOpacity_;\n          const tileClipContext = this.tileClipContexts_[index];\n          if (tileClipContext) {\n            tileClipContext.draw(context);\n          }\n          zIndexContext.draw(context);\n          if (tileClipContext) {\n            context.restore();\n          }\n          context.globalAlpha = alpha;\n          zIndexContext.clear();\n        });\n        zIndexContexts[zIndex].length = 0;\n      });\n    });\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tempExtent)[0] -\n      tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset,\n      ),\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n    this.renderedOpacity_ =\n      frameState.layerStatesArray[frameState.layerIndex].opacity;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.renderedOpacity_;\n    const declutter = layer.getDeclutter();\n    const replayTypes = declutter\n      ? VECTOR_REPLAYS[renderMode].filter((type) => !DECLUTTER.includes(type))\n      : VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    const tileClipContexts = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes),\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      let clipContext = context;\n      let tileClipContext;\n      if (currentClip) {\n        tileClipContext = new ZIndexContext();\n        clipContext = tileClipContext.getContext();\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                clipContext.save();\n                contextSaved = true;\n              }\n              clipContext.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              clipContext.moveTo(currentClip[0], currentClip[1]);\n              clipContext.lineTo(currentClip[2], currentClip[3]);\n              clipContext.lineTo(currentClip[4], currentClip[5]);\n              clipContext.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              clipContext.moveTo(clip[6], clip[7]);\n              clipContext.lineTo(clip[4], clip[5]);\n              clipContext.lineTo(clip[2], clip[3]);\n              clipContext.lineTo(clip[0], clip[1]);\n              clipContext.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          [context.canvas.width, context.canvas.height],\n          transform,\n          rotation,\n          hifi,\n          replayTypes,\n          frameState.declutter?.[declutter],\n        );\n      }\n      if (contextSaved) {\n        if (clipContext === context) {\n          clipContext.restore();\n        } else {\n          tileClipContexts[i] = tileClipContext;\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n    this.tileClipContexts_ = tileClipContexts;\n    if (!frameState.declutter) {\n      this.renderDeferredInternal(frameState);\n    }\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext();\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio),\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tempExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        [\n          context.canvas.width * renderScale,\n          context.canvas.height * renderScale,\n        ],\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()],\n        null,\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/VectorTile.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import(\"../Feature\").FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views, but get lifted above all polygon and line elements.\n *  * `'vector'`: Everything is rendered as vectors and the original render order is maintained. Use\n *    this mode for improved performance and visual epxerience on vector tile layers with not too many\n *    rendered features (e.g. for highlighting a subset of features of another layer with the same\n *    source).\n * @property {VectorTileSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=0] The internal tile cache size.  If too small, this will auto-grow to hold\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorTileSourceType, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorTileSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.preload;\n    const cacheSize = options.cacheSize === undefined ? 0 : options.cacheSize;\n    delete options.cacheSize;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(baseOptions);\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\",\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this, {\n      cacheSize: this.cacheSize_,\n    });\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    return /** @type {Array<FeatureType>} */ (\n      /** @type {*} */ (this.getRenderer().getFeaturesInExtent(extent))\n    );\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    let i, ii, j, jj, replays;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {DataTile} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8ClampedArray(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    const sourceTileGridExtent = options.sourceTileGrid.getExtent();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceTileGridExtent\n        ? getIntersection(sourceProjExtent, sourceTileGridExtent)\n        : sourceProjExtent\n      : sourceTileGridExtent;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n        const getTile = options.getTileFunction;\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   * @override\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   * @override\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @override\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    let imageLike = false;\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        imageLike = true;\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8ClampedArray;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n      extent[0] += source.offset;\n      extent[2] += source.offset;\n      const clipExtent = this.clipExtent_?.slice();\n      if (clipExtent) {\n        clipExtent[0] += source.offset;\n        clipExtent[2] += source.offset;\n      }\n      dataSources.push({\n        extent: extent,\n        clipExtent: clipExtent,\n        data: new Uint8ClampedArray(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n      this.changed();\n      return;\n    }\n\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const targetWidth = typeof size === 'number' ? size : size[0];\n    const targetHeight = typeof size === 'number' ? size : size[1];\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n\n    let dataR, dataU;\n\n    const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n    const reprojs = Math.ceil(bytesPerPixel / 3);\n    for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n      const sources = [];\n      for (let i = 0, len = dataSources.length; i < len; ++i) {\n        const dataSource = dataSources[i];\n        const buffer = dataSource.data;\n        const pixelSize = dataSource.pixelSize;\n        const width = pixelSize[0];\n        const height = pixelSize[1];\n        const context = createCanvasContext2D(width, height, canvasPool);\n        const imageData = context.createImageData(width, height);\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let j = 0, len = data.length; j < len; j += 4) {\n          data[j] = buffer[offset];\n          data[j + 1] = buffer[offset + 1];\n          data[j + 2] = buffer[offset + 2];\n          data[j + 3] = 255;\n          offset += bytesPerPixel;\n        }\n        context.putImageData(imageData, 0, 0);\n        sources.push({\n          extent: dataSource.extent,\n          clipExtent: dataSource.clipExtent,\n          image: context.canvas,\n        });\n      }\n\n      const canvas = renderReprojected(\n        targetWidth,\n        targetHeight,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        false,\n        false,\n        false,\n      );\n\n      for (let i = 0, len = sources.length; i < len; ++i) {\n        const canvas = sources[i].image;\n        const context = canvas.getContext('2d');\n        releaseCanvas(context);\n        canvasPool.push(context.canvas);\n      }\n\n      const context = canvas.getContext('2d');\n      const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n      releaseCanvas(context);\n      canvasPool.push(canvas);\n\n      if (!dataR) {\n        dataU = new Uint8ClampedArray(\n          bytesPerPixel * imageData.width * imageData.height,\n        );\n        dataR = new dataSources[0].dataType(dataU.buffer);\n      }\n\n      const data = imageData.data;\n      let offset = reproj * 3;\n      for (let i = 0, len = data.length; i < len; i += 4) {\n        if (data[i + 3] === 255) {\n          dataU[offset] = data[i];\n          dataU[offset + 1] = data[i + 1];\n          dataU[offset + 2] = data[i + 2];\n        } else {\n          dataU[offset] = 0;\n          dataU[offset + 1] = 0;\n          dataU[offset + 2] = 0;\n        }\n        offset += bytesPerPixel;\n      }\n    }\n\n    if (imageLike) {\n      const context = createCanvasContext2D(targetWidth, targetHeight);\n      const imageData = new ImageData(dataR, targetWidth);\n      context.putImageData(imageData, 0, 0);\n      this.reprojData_ = context.canvas;\n    } else {\n      this.reprojData_ = dataR;\n    }\n    this.reprojSize_ = [\n      Math.round(targetWidth * this.pixelRatio_),\n      Math.round(targetHeight * this.pixelRatio_),\n    ];\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(({tile}) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(tile, EventType.CHANGE, () => {\n        const state = tile.getState();\n        if (\n          state == TileState.LOADED ||\n          state == TileState.ERROR ||\n          state == TileState.EMPTY\n        ) {\n          unlistenByKey(sourceListenKey);\n          leftToLoad--;\n          if (leftToLoad === 0) {\n            this.unlistenSources_();\n            this.reproject_();\n          }\n        }\n      });\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function ({tile}) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = this.getLayer().getSource().getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.get(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.get(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  * maybe skip transition when not fully opaque\n     *  * decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tileState === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      this.renderComplete = false;\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = (map, frameState) => {\n      const tileSourceKey = getUid(tileSource);\n      const wantedTiles = frameState.wantedTiles[tileSourceKey];\n      const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n      this.updateCacheSize(tilesCount);\n      this.tileCache_.expireCache();\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader<FeatureType>} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.0.0';\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","//      \n\nimport {parseCSSColor} from 'csscolorparser';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n              \n              \n              \n              \n\n    constructor(r        , g        , b        , a         = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n                        \n                        \n                              \n                      \n                       \n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input                        )               {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255 * rgba[3],\n            rgba[1] / 255 * rgba[3],\n            rgba[2] / 255 * rgba[3],\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString()         {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha()                                   {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\n\nexport default Color;\n","//      \n\nimport assert from 'assert';\n\n                                                                 \n                                                         \n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nexport default function convertFunction(parameters     , propertySpec                            )                          {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters, propertySpec)               {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a, b) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\n\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? [\"linear\"] : [\"exponential\", base],\n            [\"number\", get]\n        ];\n\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? [\"linear\"] : [\"exponential\", base], input];\n\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return (propertySpec.expression     ).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s        )                                   {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n","//      \n\nclass ParsingError extends Error {\n                \n                    \n    constructor(key        , message        ) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n","//      \n\n                                                \n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n                   \n                                        \n    constructor(parent        , bindings                              = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings                             )        {\n        return new Scope(this, bindings);\n    }\n\n    get(name        )             {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name        )          {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n","//      \n\n                                         \n                                             \n                                             \n                                               \n                                           \n                                             \n                                           \n                                           \n                                                 \n                                                   \n                                                           \n\n                                                                            \n\n                  \n               \n                 \n                 \n                  \n                \n                 \n                \n                                                           \n                \n                   \n                    \n                      \n\n                         \n                  \n                   \n              \n \n\n                                                                                      \n\nexport const NullType = {kind: 'null'};\nexport const NumberType = {kind: 'number'};\nexport const StringType = {kind: 'string'};\nexport const BooleanType = {kind: 'boolean'};\nexport const ColorType = {kind: 'color'};\nexport const ObjectType = {kind: 'object'};\nexport const ValueType = {kind: 'value'};\nexport const ErrorType = {kind: 'error'};\nexport const CollatorType = {kind: 'collator'};\nexport const FormattedType = {kind: 'formatted'};\nexport const ResolvedImageType = {kind: 'resolvedImage'};\n\nexport function array(itemType      , N         )            {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type      )         {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected      , t      )          {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n\nexport function isValidType(provided      , allowedTypes             )          {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\n\nexport function isValidNativeType(provided     , allowedTypes                   )          {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n","//      \n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\n\n                   \n                                  \n  \n\n                             \n                 \n                                    \n                                 \n                     \n\n            \n                                    \n                                 \n                     \n\n                                           \n\n                           \n \n\n                        \n                                          \n                              \n                                                         \n                                \n                      \n                                           \n \n\nexport default class Collator {\n                          \n                                                        \n                            \n\n    constructor(caseSensitive         , diacriticSensitive         , locale               ) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs        , rhs        )         {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale()         {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n","//      \n                                             \n                                                            \n\nexport class FormattedSection {\n                 \n                                \n                         \n                             \n                            \n\n    constructor(text        , image                      , scale               , fontStack               , textColor              ) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n                                      \n\n    constructor(sections                         ) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted        )            {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty()          {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n                                             (section.image && section.image.name.length !== 0));\n    }\n\n    static factory(text                    )            {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString()         {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize()               {\n        const serialized               = [\"format\"];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\"image\", section.image.name]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options                           = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            if (section.textColor) {\n                options[\"text-color\"] = ([\"rgba\"]              ).concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\n                                    \n                 \n                      \n  \n\nexport default class ResolvedImage {\n                 \n                       \n\n    constructor(options                      ) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n\n    toString()         {\n        return this.name;\n    }\n\n    static fromString(name        )                       {\n        if (!name) return null; // treat empty values as no image\n        return new ResolvedImage({name, available: false});\n    }\n\n    serialize()                {\n        return [\"image\", this.name];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport Color from '../util/color.js';\nimport Collator from './types/collator.js';\nimport Formatted from './types/formatted.js';\nimport ResolvedImage from './types/resolved_image.js';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array} from './types.js';\n\n                                     \n\nexport function validateRGBA(r       , g       , b       , a        )                {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\n                                                                                                                                                  \n\nexport function isValue(mixed       )          {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value       )       {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType                         ;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value       )         {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator};\n","//      \n\nimport assert from 'assert';\nimport {isValue, typeOf, Color} from '../values.js';\nimport Formatted from '../types/formatted.js';\n\n                                      \n                                         \n                                                                       \n                                                        \n\nclass Literal                       {\n               \n                 \n\n    constructor(type      , value       ) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args                       , context                )                 {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = (args[1]     );\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate()        {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\"].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return (this.value     );\n        }\n    }\n}\n\nexport default Literal;\n","//      \n\nclass RuntimeError {\n                 \n                    \n\n    constructor(message        ) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON()         {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n","//      \n\nimport assert from 'assert';\n\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name         = (args[0]     );\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx                   )             {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n","//      \n\nimport {NumberType, ValueType, FormattedType, array, StringType, ColorType, ResolvedImageType} from '../types.js';\nimport Formatted, {FormattedSection} from '../types/formatted.js';\nimport {toString, typeOf} from '../values.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                                   \n                                                            \n                                                        \n                        \n                             \n                            \n                                 \n \n\nexport default class FormatExpression                       {\n               \n                                                \n\n    constructor(sections                                   ) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object')  {\n            return context.error(`First argument must be an image or text section.`);\n        }\n\n        const sections                                    = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = (args[i]     );\n\n            if (nextTokenMayBeObject && typeof arg === \"object\" && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx                   )            {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                    toString(evaluatedContent),\n                    null,\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    section.font ? section.font.evaluate(ctx).join(',') : null,\n                    section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn                         ) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    outputDefined()          {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\nimport {ResolvedImageType, StringType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class ImageExpression                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n\n        const name = context.parse(args[1], 1, StringType);\n        if (!name) return context.error(`No image name provided.`);\n\n        return new ImageExpression(name);\n    }\n\n    evaluate(ctx                   )                       {\n        const evaluatedImageName = this.input.evaluate(ctx);\n\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages) value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n\n        return value;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n\n    serialize()                       {\n        return [\"image\", this.input.serialize()];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType, ColorType, NumberType, StringType, ValueType} from '../types.js';\nimport {Color, toString as valueToString, validateRGBA} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\nimport Formatted from '../types/formatted.js';\nimport FormatExpression from '../definitions/format.js';\nimport ImageExpression from '../definitions/image.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name         = (args[0]     );\n        assert(types[name], name);\n\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const type = types[name];\n\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx                   )                                                                       {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color((input[0]     ) / 255, (input[1]     ) / 255, (input[2]     ) / 255, (input[3]     ));\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{content: this.args[0], scale: null, font: null, textColor: null}]).serialize();\n        }\n\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n\n        const serialized = [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n","//      \n\nimport {Color} from './values.js';\n\n                                                \n                                                           \n                                                                        \n                                                             \n                                                                    \n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n                              \n                      \n                                \n                                        \n                                    \n                                      \n                             \n                                              \n\n                                            \n\n    constructor() {\n        this.globals = (null     );\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n\n    id()                {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n\n    geometryType()                {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    geometry()                       {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n\n    canonicalID()                         {\n        return this.canonical;\n    }\n\n    properties()                  {\n        return (this.feature && this.feature.properties) || {};\n    }\n\n    distanceFromCenter()         {\n        if (this.featureTileCoord && this.featureDistanceData) {\n\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n\n            // Distance is calculated as `dot(d, v)`\n            const dist = (bX * dX + bY * dY);\n            return dist;\n        }\n\n        return 0;\n    }\n\n    parseColor(input        )         {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\nexport default EvaluationContext;\n","//      \n\nimport {toString} from './types.js';\n\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport assert from 'assert';\n\n                                                                    \n                                     \n                                       \n\n                                       \n                                       \n                                                                \n                                               \n                                                            \n\nclass CompoundExpression                       {\n                 \n               \n                        \n                            \n\n                                                   \n\n    constructor(name        , type      , evaluate          , args                   ) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n\n    evaluate(ctx                   )        {\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()               {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args                       , context                )              {\n        const op         = (args[0]     );\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloads = availableOverloads.filter(([signature]) => (\n            !Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n\n        let signatureContext                 = (null     );\n\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs                    = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry                    ,\n        definitions                            \n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature           )         {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n","//      \n\nimport {StringType, BooleanType, CollatorType} from '../types.js';\nimport Collator from '../types/collator.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class CollatorExpression                       {\n               \n                              \n                                   \n                              \n\n    constructor(caseSensitive            , diacriticSensitive            , locale                   ) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const options = (args[1]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx                   )           {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    outputDefined()          {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n","//      \n\nimport {isValue} from '../values.js';\n                                      \nimport {BooleanType} from '../types.js';\n                                                                       \n                                                        \n                                                              \n                                                                                        \n                                                                \n\n                                                             \n\n// minX, minY, maxX, maxY\n                                             \nconst EXTENT = 8192;\n\nfunction updateBBox(bbox      , coord                  ) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\n\nfunction mercatorXfromLng(lng        ) {\n    return (180 + lng) / 360;\n}\n\nfunction mercatorYfromLat(lat        ) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nfunction boxWithinBox(bbox1      , bbox2      ) {\n    if (bbox1[0] <= bbox2[0]) return false;\n    if (bbox1[2] >= bbox2[2]) return false;\n    if (bbox1[1] <= bbox2[1]) return false;\n    if (bbox1[3] >= bbox2[3]) return false;\n    return true;\n}\n\nfunction getTileCoordinates(p, canonical                 ) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\n\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1])) return false;\n            if (rayIntersect(point, ring[j], ring[j + 1])) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction  twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 =  (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0)) return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0) return false;\n\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n    return false;\n}\n\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox      , canonical                 ) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\n\nfunction getTilePolygons(coordinates, bbox, canonical                 ) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\n\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\n\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\n\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    if (!geometry) return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\n\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    if (!geometry) return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\n\nfunction pointsWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons)) return false;\n        }\n    }\n\n    return true;\n}\n\nfunction linesWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n        }\n    }\n    return true;\n}\n\nclass Within                       {\n               \n                    \n                                \n\n    constructor(geojson         , geometries                 ) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = (args[1]        );\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type  === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n\n    evaluate(ctx                   )          {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"within\", this.geojson];\n    }\n\n}\n\nexport default Within;\n","//      \n\nimport CompoundExpression from './compound_expression.js';\nimport Within from './definitions/within.js';\n                                                \n\nfunction isFeatureConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    if (e instanceof Within) {\n        return false;\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e            , properties               )          {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant};\n","//      \n\n                                      \n                                                 \n                                                        \n                                                               \n\nclass Var                       {\n               \n                 \n                                \n\n    constructor(name        , boundExpression            ) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args                       , context                )             {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx                   )      {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n","//      \n\nimport Scope from './scope.js';\nimport {checkSubtype} from './types.js';\nimport ParsingError from './parsing_error.js';\nimport Literal from './definitions/literal.js';\nimport Assertion from './definitions/assertion.js';\nimport Coercion from './definitions/coercion.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport CollatorExpression from './definitions/collator.js';\nimport Within from './definitions/within.js';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant.js';\nimport Var from './definitions/var.js';\n\n                                                                    \n                                     \n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n                                 \n                        \n                \n                 \n                                \n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n                        \n\n    constructor(\n        registry                    ,\n        path                = [],\n        expectedType       ,\n        scope        = new Scope(),\n        errors                      = []\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr       ,\n        index         ,\n        expectedType        ,\n        bindings                              ,\n        options                                                  = {}\n    )              {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(expr       , options                                                 )              {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed, type, typeAnnotation                              ) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index        , expectedType        , bindings                              )                 {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error        , ...keys               ) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected      , t      )          {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression            ) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within) {\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'sky-radial-progress', 'accumulated', 'is-supported-script', 'pitch', 'distance-from-center']);\n}\n","//      \n\nimport RuntimeError from './runtime_error.js';\n\n                                                \n\n                                                \n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops               , input        )         {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n","//      \n\nimport {NumberType} from '../types.js';\n\nimport {findStopLessThanOrEqualTo} from '../stops.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Step                       {\n               \n\n                      \n                          \n                               \n\n    constructor(type      , input            , stops       ) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx                   )      {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n","//      \n\nimport Color from './color.js';\n\nexport function number(a        , b        , t        )         {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from       , to       , t        )        {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from               , to               , t        )                {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n","//      \n\nimport Color from './color.js';\n\nimport {number as interpolateNumber} from './interpolate.js';\n\n                 \n              \n              \n              \n                 \n  \n\n                 \n              \n              \n              \n                 \n  \n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t        ) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t        ) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x        ) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x        ) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor       )           {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor          )        {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from          , to          , t        )           {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor       )           {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor          )        {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a        , b        , t        ) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from          , to          , t        )           {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n","//      \n\nimport UnitBezier from '@mapbox/unitbezier';\n\nimport * as interpolate from '../../util/interpolate.js';\nimport {toString, NumberType, ColorType} from '../types.js';\nimport {findStopLessThanOrEqualTo} from '../stops.js';\nimport {hcl, lab} from '../../util/color_spaces.js';\nimport Color from '../../util/color.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\n                               \n                        \n                                           \n                                                                              \n\nclass Interpolate                       {\n               \n\n                                                                    \n                                     \n                      \n                          \n                               \n\n    constructor(type      , operator                                                       , interpolation                   , input            , stops       ) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation                   , input        , lower        , upper        )         {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args                       , context                )               {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints     )\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, (operator     ), interpolation, input, stops);\n    }\n\n    evaluate(ctx                   )        {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            return (interpolate[this.type.kind.toLowerCase()]     )(outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = [\"linear\"];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = [\"linear\"];\n            } else {\n                interpolation = [\"exponential\", this.interpolation.base];\n            }\n        } else {\n            interpolation = [\"cubic-bezier\" ].concat(this.interpolation.controlPoints);\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n","//      \n\nimport assert from 'assert';\n\nimport {checkSubtype, ValueType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Coalesce                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )            {\n        if (args.length < 2) {\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType       = (null     );\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType     ), parsedArgs);\n    }\n\n    evaluate(ctx                   )             {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"coalesce\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n","//      \n\n                                      \n                                                                       \n                                                        \n                                                               \n\nclass Let                       {\n               \n                                          \n                       \n\n    constructor(bindings                             , result            ) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx                   )      {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args                       , context                )       {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings                              = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    outputDefined()          {\n        return this.result.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n","//      \n\nimport {array, ValueType, NumberType} from '../types.js';\n\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                                 \n                                        \n\nclass At                       {\n               \n                      \n                      \n\n    constructor(type      , index            , input            ) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t            = (input.type     );\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx                   )        {\n        const index = ((this.index.evaluate(ctx)     )        );\n        const array = ((this.input.evaluate(ctx)     )              );\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn                         ) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass In                       {\n               \n                       \n                         \n\n    constructor(needle            , haystack            ) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx                   )          {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (haystack == null) return false;\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"in\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default In;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass IndexOf                       {\n               \n                       \n                         \n                           \n\n    constructor(needle            , haystack            , fromIndex             ) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n\n    static parse(args                       , context                )           {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex) return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        if (this.fromIndex) {\n            const fromIndex = (this.fromIndex.evaluate(ctx)        );\n            return haystack.indexOf(needle, fromIndex);\n        }\n\n        return haystack.indexOf(needle);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\"index-of\", this.needle.serialize(), this.haystack.serialize(), fromIndex];\n        }\n        return [\"index-of\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default IndexOf;\n","//      \n\nimport assert from 'assert';\n\nimport {typeOf} from '../values.js';\nimport {ValueType,          } from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n\n// Map input label values to output expression index\n                                         \n\nclass Match                       {\n               \n                    \n\n                      \n                 \n                               \n                          \n\n    constructor(inputType      , outputType      , input            , cases       , outputs                   , otherwise            ) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType     ), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType     ), (outputType     ), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput                                          = [];\n        const outputLookup                            = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label) => this.inputType.kind === 'number' ? Number(label) : label;\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType} from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\n                                                \n\nclass Case                       {\n               \n\n                       \n                          \n\n    constructor(type      , branches          , otherwise            ) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType       ;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        return new Case((outputType     ), branches, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"case\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n","//      \n\nimport {ValueType, NumberType, StringType, array, toString, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Slice                       {\n               \n                      \n                           \n                          \n\n    constructor(type      , input            , beginIndex            , endIndex             ) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n\n        if (!input || !beginIndex) return null;\n\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex) return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const beginIndex = (this.beginIndex.evaluate(ctx)        );\n\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n\n        if (this.endIndex) {\n            const endIndex = (this.endIndex.evaluate(ctx)        );\n            return input.slice(beginIndex, endIndex);\n        }\n\n        return input.slice(beginIndex);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\"slice\", this.input.serialize(), this.beginIndex.serialize(), endIndex];\n        }\n        return [\"slice\", this.input.serialize(), this.beginIndex.serialize()];\n    }\n}\n\nexport default Slice;\n","//      \n\nimport {toString, ValueType, BooleanType, CollatorType} from '../types.js';\nimport Assertion from './assertion.js';\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                                               \n                                                              \n                                                        \n                                      \n\n                                                                 \n\nfunction isComparableType(op                    , type      ) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\nfunction eq(ctx                   , a     , b     )          { return a === b; }\nfunction neq(ctx                   , a     , b     )          { return a !== b; }\nfunction lt(ctx                   , a     , b     )          { return a < b; }\nfunction gt(ctx                   , a     , b     )          { return a > b; }\nfunction lteq(ctx                   , a     , b     )          { return a <= b; }\nfunction gteq(ctx                   , a     , b     )          { return a >= b; }\n\nfunction eqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx                   , a     , b     , c     )          { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op                    , compareBasic                                          , compareWithCollator                                               )                         {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison                       {\n                   \n                        \n                        \n                              \n                                    \n\n        constructor(lhs            , rhs            , collator             ) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args                       , context                )              {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op                     = (args[0]     );\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx                   )          {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn                         ) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        outputDefined()          {\n            return true;\n        }\n\n        serialize()                       {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals                                                                  = makeComparison('==', eq, eqCollate);\nexport const NotEquals                                                                    = makeComparison('!=', neq, neqCollate);\nexport const LessThan                                                                 = makeComparison('<', lt, ltCollate);\nexport const GreaterThan                                                                 = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual                                                                      = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual                                                                      = makeComparison('>=', gteq, gteqCollate);\n","//      \n\nimport {StringType, NumberType} from '../types.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                   \n                                          \n  \n\n                                 \n                 \n                                    \n                                     \n                         \n\n            \n                                    \n                                     \n                         \n\n                              \n\n                           \n \n\n                            \n                                                        \n                             \n                         \n                                          \n                                          \n  \n\nexport default class NumberFormat                       {\n               \n                       \n                                 // BCP 47 language tag\n                                 // ISO 4217 currency code, required if style=currency\n                                 // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n                                          // Default 0\n                                          // Default 3\n\n    constructor(number            ,\n                locale                   ,\n                currency                   ,\n                unit                   ,\n                minFractionDigits                   ,\n                maxFractionDigits                   ) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx                   )         {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style:\n                    (this.currency && \"currency\") ||\n                    (this.unit && \"unit\") ||\n                    \"decimal\",\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn                         ) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n","//      \n\nimport {NumberType, toString} from '../types.js';\n\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Length                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx                   )               {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"length\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n","//      \n\nimport {\n              \n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString\n} from '../types.js';\n\nimport {typeOf, Color, validateRGBA, toString as valueToString} from '../values.js';\nimport CompoundExpression from '../compound_expression.js';\nimport RuntimeError from '../runtime_error.js';\nimport Let from './let.js';\nimport Var from './var.js';\nimport Literal from './literal.js';\nimport Assertion from './assertion.js';\nimport Coercion from './coercion.js';\nimport At from './at.js';\nimport In from './in.js';\nimport IndexOf from './index_of.js';\nimport Match from './match.js';\nimport Case from './case.js';\nimport Slice from './slice.js';\nimport Step from './step.js';\nimport Interpolate from './interpolate.js';\nimport Coalesce from './coalesce.js';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison.js';\nimport CollatorExpression from './collator.js';\nimport NumberFormat from './number_format.js';\nimport FormatExpression from './format.js';\nimport ImageExpression from './image.js';\nimport Length from './length.js';\nimport Within from './within.js';\n\n                                                       \n                                                         \n\nconst expressions                     = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within\n};\n\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\n\nfunction has(key, obj) {\n    return key in obj;\n}\n\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type      )          {\n    return {type};\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        (ctx) => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k     ).value] === (v     ).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v     ).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v     ).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k     ).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v     ).value.indexOf(ctx.properties()[(k     ).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k     ).value], (v     ).value, 0, (v     ).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\n\nexport default expressions;\n","//      \n\n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\n                          \n                                       \n                                      \n\nexport function success      (value   )               {\n    return {result: 'success', value};\n}\n\nexport function error      (value   )               {\n    return {result: 'error', value};\n}\n","\nimport * as colorSpaces from '../util/color_spaces.js';\nimport Color from '../util/color.js';\nimport extend from '../util/extend.js';\nimport getType from '../util/get_type.js';\nimport * as interpolate from '../util/interpolate.js';\nimport Interpolate from '../expression/definitions/interpolate.js';\nimport Formatted from '../expression/types/formatted.js';\nimport ResolvedImage from '../expression/types/resolved_image.js';\nimport {supportsInterpolation} from '../util/properties.js';\nimport {findStopLessThanOrEqualTo} from '../expression/stops.js';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    } else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    } else if (propertySpec.type === 'resolvedImage') {\n        input = ResolvedImage.fromString(input.toString());\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport extend from '../util/extend.js';\nimport ParsingError from './parsing_error.js';\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport Step from './definitions/step.js';\nimport Interpolate from './definitions/interpolate.js';\nimport Coalesce from './definitions/coalesce.js';\nimport Let from './definitions/let.js';\nimport definitions from './definitions/index.js';\nimport * as isConstant from './is_constant.js';\nimport RuntimeError from './runtime_error.js';\nimport {success, error} from '../util/result.js';\nimport {supportsPropertyExpression, supportsZoomExpression, supportsInterpolation} from '../util/properties.js';\n\n                                                     \n                                       \n                                                \n                                                                 \n                                              \n                                                                    \n                                                            \n                                                           \n                                                \n                                                             \n                                                                    \n\n                       \n                                                                      \n                        \n                                    \n                                      \n                                   \n  \n\n                                              \n\n                                          \n                 \n                   \n                            \n                          \n                               \n                                               \n                       \n   \n\nexport class StyleExpression {\n                           \n\n                                  \n                         \n                                              \n                                     \n\n    constructor(expression            , propertySpec                             ) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression       )          {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression       , propertySpec                             )                                               {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec));\n}\n\nexport class ZoomConstantExpression                       {\n               \n                              \n                                      \n\n    constructor(kind      , expression                 ) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('constant'                ) && !isConstant.isStateConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\n\nexport class ZoomDependentExpression                       {\n               \n                             \n                              \n\n                                      \n                                          \n\n    constructor(kind      , expression                 , zoomStops               , interpolationType                    ) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera'                ) && !isConstant.isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input        , lower        , upper        )         {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\n                                  \n                     \n                                                                                                                                                                \n \n\n                                \n                   \n                              \n                                                                                                                                                                                                     \n  \n\n                                \n                   \n                                                                                                                                                                \n                                                                                  \n                             \n                                         \n  \n\n                                   \n                      \n                              \n                                                                                                                                                                                                     \n                                                                                  \n                             \n                                         \n  \n\n                                     \n                        \n                      \n                      \n                          \n\nexport function createPropertyExpression(expression       , propertySpec                            )                                                       {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom', 'pitch', 'distance-from-center']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            (new ZoomConstantExpression('constant', expression.value)                    ) :\n            (new ZoomConstantExpression('source', expression.value)                  ));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success(isFeatureConstant ?\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType)                  ) :\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType)                     ));\n}\n\nimport {isFunction, createFunction} from '../function/index.js';\nimport {Color} from './values.js';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction    {\n                                               \n                                               \n\n                         \n                                                                    \n                                                                                  \n                              \n\n    constructor(parameters                               , specification                            ) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize(serialized                                                                                          )                           {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n\n    static serialize(input                          )                                                                                           {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression   (value                               , specification                            )                          {\n    if (isFunction(value)) {\n        return (new StylePropertyFunction(value, specification)     );\n\n    } else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant      = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression            )                                           {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array} from './types.js';\n\nfunction getExpectedType(spec                            )       {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec                            )        {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n","//      \n\n                                                                 \n\nexport function supportsPropertyExpression(spec                            )          {\n    return spec['property-type'] === 'data-driven';\n}\n\nexport function supportsZoomExpression(spec                            )          {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\n\nexport function supportsInterpolation(spec                            )          {\n    return !!spec.expression && spec.expression.interpolated;\n}\n","//      \n\n// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value       )        {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value       )        {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue                           = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n","//      \n\nimport spec from './v8.json';\n\n                                         \n\nexport default spec;\n","//      \n\nimport {createExpression} from '../expression/index.js';\nimport {isFeatureConstant} from '../expression/is_constant.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport latest from '../reference/latest.js';\n                                                                      \n                                                             \n                                                \n\n                                                                                                       \n                                                                                                                                                                                                   \n                                                                                                                                      \n\nexport default createFilter;\nexport {isExpressionFilter, isDynamicFilter, extractStaticFilter};\n\nfunction isExpressionFilter(filter     )          {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter     , layerType          = 'fill')                {\n    if (filter === null || filter === undefined) {\n        return {filter: () => true, needGeometry: false, needFeature: false};\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = ((filter     )                             );\n\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(\n`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(filterExp, null, 2)}\n        `);\n    }\n\n    // Compile the static component of the filter\n    const filterSpec = latest[`filter_${layerType}`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        filterFunc = (globalProperties                  , feature         , canonical                  ) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties                  , feature         , canonical                  , featureTileCoord        , featureDistanceData                      ) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n\n    filterFunc = ((filterFunc     )                  );\n    const needGeometry = geometryNeeded(staticFilter);\n\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\n\nfunction extractStaticFilter(filter     )      {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n\n    // 1. Union branches\n    unionDynamicBranches(result);\n\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n\n    return result;\n}\n\nfunction collapseDynamicBooleanExpressions(expression     )      {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map((subExpression) => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter     ) {\n    let isBranchingDynamically = false;\n    const branches = [];\n\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\n\nfunction isDynamicFilter(filter     )          {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isRootExpressionDynamic(expression        )          {\n    return expression === 'pitch' ||\n        expression === 'distance-from-center';\n}\n\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\n\nfunction collapsedExpression(expression     )      {\n    if (dynamicConditionExpressions.has(expression[0])) {\n\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter)) return false;\n    if (filter[0] === 'within') return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index])) return true;\n    }\n    return false;\n}\n\nfunction convertFilter(filter             )        {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        op === 'has' ? convertHasOp(filter[1]) :\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        op === 'within' ? filter :\n        true;\n    return converted;\n}\n\nfunction convertComparisonOp(property        , value     , op        ) {\n    switch (property) {\n    case '$type':\n        return [`filter-type-${op}`, value];\n    case '$id':\n        return [`filter-id-${op}`, value];\n    default:\n        return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters                   ) {\n    return ['any'].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property        , values            ) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property        ) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter       ) {\n    return ['!', filter];\n}\n","//      \nexport default ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n","//      \n\nimport refProperties from './util/ref_properties.js';\n\n                                                   \n\nfunction deref(layer                    , parent                    )                     {\n    const result = {};\n\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = (parent     )[k];\n        }\n    });\n\n    return ((result     )                    );\n}\n\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nexport default function derefLayers(layers                           )                            {\n    layers = layers.slice();\n\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[(layers[i]     ).ref]);\n        }\n    }\n\n    return layers;\n}\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @template {import('./Feature.js').FeatureLike} FeatureType\n */\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default<FeatureType>}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<FeatureType>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default<FeatureType>} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<FeatureType>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in a {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<FeatureType>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader<FeatureType>} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/uri\n */\n\nimport {hashZXY} from './tilecoord.js';\nimport {modulo} from './math.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","const mapboxBaseUrl = 'https://api.mapbox.com';\n\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nexport function getMapboxPath(url) {\n  const startsWith = 'mapbox://';\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n  return url.slice(startsWith.length);\n}\n\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeSpriteUrl(url, token, styleUrl) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n  const startsWith = 'sprites/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected sprites url: ${url}`);\n  }\n  const sprite = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${sprite}/sprite?access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeStyleUrl(url, token) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n  const startsWith = 'styles/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected style url: ${url}`);\n  }\n  const style = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${style}?&access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nexport function normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  const urlObject = new URL(url, styleUrl);\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    if (!token) {\n      return decodeURI(urlObject.href);\n    }\n    if (!urlObject.searchParams.has(tokenParam)) {\n      urlObject.searchParams.set(tokenParam, token);\n    }\n    return decodeURI(urlObject.href);\n  }\n\n  if (mapboxPath === 'mapbox.satellite') {\n    const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n    return `https://api.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}${sizeFactor}.webp?access_token=${token}`;\n  }\n  return `https://{a-d}.tiles.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}.vector.pbf?access_token=${token}`;\n}\n","import TileState from 'ol/TileState.js';\nimport {VectorTile} from 'ol';\nimport {expandUrl} from 'ol/tileurlfunction.js';\nimport {getUid} from 'ol/util.js';\nimport {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\nimport {toPromise} from 'ol/functions.js';\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\n\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\n\nlet styleId = 0;\nexport function getStyleId(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  return glStyle.id;\n}\n\nexport function getStyleFunctionKey(glStyle, olLayer) {\n  return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nexport function getFunctionCache(glStyle) {\n  let functionCache = functionCacheByStyleId[glStyle.id];\n  if (!functionCache) {\n    functionCache = {};\n    functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n  }\n  return functionCache;\n}\n\nexport function clearFunctionCache() {\n  for (const key in functionCacheByStyleId) {\n    delete functionCacheByStyleId[key];\n  }\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nexport function getFilterCache(glStyle) {\n  let filterCache = filterCacheByStyleId[glStyle.id];\n  if (!filterCache) {\n    filterCache = {};\n    filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n  }\n  return filterCache;\n}\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nexport function getResolutionForZoom(zoom, resolutions) {\n  const base = Math.floor(zoom);\n  const factor = Math.pow(2, zoom - base);\n  return resolutions[base] / factor;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.request = pendingRequests[url][0];\n    }\n    return pendingRequests[url][1];\n  }\n  const transformedRequest = options.transformRequest\n    ? options.transformRequest(url, resourceType) || url\n    : url;\n  const pendingRequest = toPromise(() => transformedRequest).then(\n    (transformedRequest) => {\n      if (!(transformedRequest instanceof Request)) {\n        transformedRequest = new Request(transformedRequest);\n      }\n      if (!transformedRequest.headers.get('Accept')) {\n        transformedRequest.headers.set('Accept', 'application/json');\n      }\n      if (metadata) {\n        metadata.request = transformedRequest;\n      }\n      return fetch(transformedRequest)\n        .then(function (response) {\n          delete pendingRequests[url];\n          return response.ok\n            ? response.json()\n            : Promise.reject(new Error('Error fetching source ' + url));\n        })\n        .catch(function (error) {\n          delete pendingRequests[url];\n          return Promise.reject(new Error('Error fetching source ' + url));\n        });\n    },\n  );\n  pendingRequests[url] = [transformedRequest, pendingRequest];\n  return pendingRequest;\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise<{tileJson: Object, tileLoadFunction: import('ol/Tile.js').LoadFunction}?>} TileJson and load function\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    let tileLoadFunction;\n    if (options.transformRequest) {\n      tileLoadFunction = (tile, src) => {\n        const transformedRequest = options.transformRequest\n          ? options.transformRequest(src, 'Tiles') || src\n          : src;\n        if (tile instanceof VectorTile) {\n          tile.setLoader((extent, resolution, projection) => {\n            toPromise(() => transformedRequest).then((transformedRequest) => {\n              fetch(transformedRequest)\n                .then((response) => response.arrayBuffer())\n                .then((data) => {\n                  const format = tile.getFormat();\n                  const features = format.readFeatures(data, {\n                    extent: extent,\n                    featureProjection: projection,\n                  });\n                  // @ts-ignore\n                  tile.setFeatures(features);\n                })\n                .catch((e) => tile.setState(TileState.ERROR));\n            });\n          });\n        } else {\n          const img = tile.getImage();\n          toPromise(() => transformedRequest).then((transformedRequest) => {\n            if (transformedRequest instanceof Request) {\n              fetch(transformedRequest)\n                .then((response) => response.blob())\n                .then((blob) => {\n                  const url = URL.createObjectURL(blob);\n                  img.addEventListener('load', () => URL.revokeObjectURL(url));\n                  img.addEventListener('error', () => URL.revokeObjectURL(url));\n                  img.src = url;\n                })\n                .catch((e) => tile.setState(TileState.ERROR));\n            } else {\n              img.src = transformedRequest;\n            }\n          });\n        }\n      };\n    }\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href,\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve({\n          tileJson: Object.assign({}, glSource, {\n            url: undefined,\n            tiles: expandUrl(normalizedSourceUrl),\n          }),\n          tileLoadFunction,\n        });\n      } else {\n        const metadata = {};\n        promise = fetchResource(\n          'Source',\n          normalizedSourceUrl,\n          options,\n          metadata,\n        ).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            if (tileJson.scheme === 'tms') {\n              tileUrl = tileUrl.replace('{y}', '{-y}');\n            }\n            return normalizeSourceUrl(\n              tileUrl,\n              options.accessToken,\n              options.accessTokenParam || 'access_token',\n              metadata.request.url,\n            );\n          });\n          return Promise.resolve({tileJson, tileLoadFunction});\n        });\n      }\n    } else {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          if (glSource.scheme === 'tms') {\n            tileUrl = tileUrl.replace('{y}', '{-y}');\n          }\n          return normalizeSourceUrl(\n            tileUrl,\n            options.accessToken,\n            options.accessTokenParam || 'access_token',\n            styleUrl || location.href,\n          );\n        }),\n      });\n      promise = Promise.resolve({\n        tileJson: Object.assign({}, glSource),\n        tileLoadFunction,\n      });\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nexport function drawIconHalo(\n  spriteImage,\n  spriteImageData,\n  haloWidth,\n  haloColor,\n) {\n  const imgSize = [\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height,\n  ];\n  const imageCanvas = createCanvas(imgSize[0], imgSize[1]);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    spriteImage,\n    spriteImageData.x,\n    spriteImageData.y,\n    spriteImageData.width,\n    spriteImageData.height,\n    haloWidth * spriteImageData.pixelRatio,\n    haloWidth * spriteImageData.pixelRatio,\n    spriteImageData.width,\n    spriteImageData.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n  imageContext.globalCompositeOperation = 'destination-over';\n  imageContext.fillStyle = `rgba(${haloColor.r * 255},${haloColor.g * 255},${\n    haloColor.b * 255\n  },${haloColor.a})`;\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const alpha = data[index + 3];\n      if (alpha > 0) {\n        imageContext.arc(\n          i,\n          j,\n          haloWidth * spriteImageData.pixelRatio,\n          0,\n          2 * Math.PI,\n        );\n      }\n    }\n  }\n  imageContext.fill();\n  return imageCanvas;\n}\n\nfunction smoothstep(min, max, value) {\n  const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n  return x * x * (3 - 2 * x);\n}\n\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nexport function drawSDF(image, area, color) {\n  const imageCanvas = createCanvas(area.width, area.height);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    image,\n    area.x,\n    area.y,\n    area.width,\n    area.height,\n    0,\n    0,\n    area.width,\n    area.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const dist = data[index + 3] / 255;\n\n      const buffer = 0.75;\n      const gamma = 0.1;\n\n      const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n      if (alpha > 0) {\n        data[index + 0] = Math.round(255 * color.r * alpha);\n        data[index + 1] = Math.round(255 * color.g * alpha);\n        data[index + 2] = Math.round(255 * color.b * alpha);\n        data[index + 3] = Math.round(255 * alpha);\n      } else {\n        data[index + 3] = 0;\n      }\n    }\n  }\n  imageContext.putImageData(imageData, 0, 0);\n  return imageCanvas;\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @private\n */\n","import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts, registerFont} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1),\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n  if (!loadedFontFamilies) {\n    loadedFontFamilies = {};\n    const styleSheets = document.styleSheets;\n    for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n      const styleSheet = /** @type {CSSStyleSheet} */ (styleSheets[i]);\n      try {\n        const cssRules = styleSheet.rules || styleSheet.cssRules;\n        if (cssRules) {\n          for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n            const cssRule = cssRules[j];\n            if (cssRule.type == 5) {\n              const match = cssRule.cssText.match(fontFamilyRegEx);\n              loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n            }\n          }\n        }\n      } catch (e) {\n        // empty catch block\n      }\n    }\n  }\n  return family in loadedFontFamilies;\n}\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(\n  fonts,\n  templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css',\n) {\n  const fontsKey = fonts.toString();\n  if (fontsKey in processedFontFamilies) {\n    return processedFontFamilies[fontsKey];\n  }\n  const fontDescriptions = [];\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n    const font = fonts[i];\n    const cssFont = mb2css(font, 1);\n    registerFont(cssFont);\n    const parts = cssFont.split(' ');\n    fontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n    const fontDescription = fontDescriptions[i];\n    const family = fontDescription[0];\n    if (!hasFontFamily(family)) {\n      if (\n        checkedFonts.get(\n          `${fontDescription[2]}\\n${fontDescription[1]} \\n${family}`,\n        ) !== 100\n      ) {\n        const fontUrl = templateUrl\n          .replace('{font-family}', family.replace(/ /g, '-').toLowerCase())\n          .replace('{Font+Family}', family.replace(/ /g, '+'))\n          .replace('{fontweight}', fontDescription[1])\n          .replace(\n            '{-fontstyle}',\n            fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1'),\n          )\n          .replace('{fontstyle}', fontDescription[2]);\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  }\n  processedFontFamilies[fontsKey] = fonts;\n  return fonts;\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\nimport {toPromise} from 'ol/functions.js';\n\nimport Color from '@mapbox/mapbox-gl-style-spec/util/color.js';\nimport convertFunction from '@mapbox/mapbox-gl-style-spec/function/convert.js';\nimport createFilter from '@mapbox/mapbox-gl-style-spec/feature_filter/index.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport mb2css from 'mapbox-to-css-font';\nimport spec from '@mapbox/mapbox-gl-style-spec/reference/v8.json';\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  clearFunctionCache,\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  drawIconHalo,\n  drawSDF,\n  getFilterCache,\n  getFunctionCache,\n  getStyleFunctionKey,\n  getZoomForResolution,\n} from './util.js';\nimport {\n  createPropertyExpression,\n  isExpression,\n} from '@mapbox/mapbox-gl-style-spec/expression/index.js';\nimport {isFunction} from '@mapbox/mapbox-gl-style-spec/function/index.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n * @typedef {import('./util.js').ResourceType} ResourceType\n */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec,\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', '),\n    );\n  }\n  return compiledExpression.value;\n};\n\nconst emptyObj = {};\nconst zoomObj = {zoom: 0};\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  zoom,\n  feature,\n  functionCache,\n  featureState,\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); //eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  zoomObj.zoom = zoom;\n  return functions[property](zoomObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {\"icon\"|\"text\"} prefix Style property prefix.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getDeclutterMode(layer, zoom, feature, prefix, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    `${prefix}-allow-overlap`,\n    zoom,\n    feature,\n    functionCache,\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    `${prefix}-ignore-placement`,\n    zoom,\n    feature,\n    functionCache,\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); //eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    filterCache[layerId] = createFilter(filter).filter;\n  }\n  zoomObj.zoom = zoom;\n  return filterCache[layerId](zoomObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  if (enabled !== renderTransparentEnabled) {\n    clearFunctionCache();\n    renderTransparentEnabled = enabled;\n  }\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\nexport const styleFunctionArgs = {};\n\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string|Request|Promise<string|Request>} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined,\n  getImage = undefined,\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n  styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] =\n    Array.from(arguments);\n\n  let spriteImage, spriteImageSize;\n  let spriteImageUnSDFed;\n\n  if (spriteImageUrl) {\n    if (typeof Image !== 'undefined') {\n      const img = new Image();\n      let blobUrl;\n      toPromise(() => spriteImageUrl).then((spriteImageUrl) => {\n        if (spriteImageUrl instanceof Request) {\n          fetch(spriteImageUrl)\n            .then((response) => response.blob())\n            .then((blob) => {\n              blobUrl = URL.createObjectURL(blob);\n              img.src = blobUrl;\n            })\n            .catch(() => {});\n        } else {\n          img.crossOrigin = 'anonymous';\n          img.src = spriteImageUrl;\n          if (blobUrl) {\n            URL.revokeObjectURL(blobUrl);\n          }\n        }\n      });\n      img.onload = function () {\n        spriteImage = img;\n        spriteImageSize = [img.width, img.height];\n        olLayer.changed();\n        img.onload = null;\n      };\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) { //eslint-disable-line\n      const worker = /** @type {*} */ (self);\n      // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n      worker.postMessage({\n        action: 'loadImage',\n        src: spriteImageUrl,\n      });\n      worker.addEventListener('message', function handler(event) {\n        if (\n          event.data.action === 'imageLoaded' &&\n          event.data.src === spriteImageUrl\n        ) {\n          spriteImage = event.data.image;\n          spriteImageSize = [spriteImage.width, spriteImage.height];\n        }\n      });\n    }\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = getFunctionCache(glStyle);\n  const filterCache = getFilterCache(glStyle);\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      (Array.isArray(sourceOrLayers) && sourceOrLayers.indexOf(layerId) !== -1)\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`,\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`,\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n  const styleFunction = function (feature, resolution, onlyLayer) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties.layer];\n    if (!layers) {\n      return undefined;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    const type = types[feature.getGeometry().getType()];\n    const f = {\n      id: feature.getId(),\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n      if (onlyLayer !== undefined && onlyLayer !== layerId) {\n        continue;\n      }\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              if (spriteImage && spriteData && spriteData[icon]) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n                opacity,\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          if (!('line-pattern' in paint)) {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'line-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              getValue(\n                layer,\n                'paint',\n                'line-opacity',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n          } else {\n            color = undefined;\n          }\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null,\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            if (\n              (spriteImage && spriteData && spriteData[icon]) ||\n              imageElement\n            ) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              );\n              if (type == 2) {\n                const geom = /** @type {*} */ (feature.getGeometry());\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2),\n                    ),\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        2,\n                        {},\n                        undefined,\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState,\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const maxX = Math.max(x1, x2);\n                        const xM = midpoint[0];\n                        const yM = midpoint[1];\n                        const dotProduct =\n                          (y2 - y1) * (xM - x1) - (x2 - x1) * (yM - y1);\n                        if (\n                          Math.abs(dotProduct) < 0.001 && //midpoint is aligned with the segment\n                          xM <= maxX &&\n                          xM >= minX //midpoint is on the segment and not outside it\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  const haloWidth = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-width',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getDeclutterMode(\n                      layer,\n                      zoom,\n                      f,\n                      'icon',\n                      functionCache,\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      ).slice(0);\n                      displacement[0] *= iconSize;\n                      displacement[1] *= -iconSize;\n                    }\n                    let color = iconColor\n                      ? [\n                          iconColor.r * 255,\n                          iconColor.g * 255,\n                          iconColor.b * 255,\n                          iconColor.a,\n                        ]\n                      : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                        scale: iconSize,\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [\n                          imageElement.width,\n                          imageElement.height,\n                        ];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, size, offset;\n                      if (haloWidth) {\n                        if (spriteImageData.sdf) {\n                          img = drawIconHalo(\n                            drawSDF(\n                              spriteImage,\n                              spriteImageData,\n                              iconColor || [0, 0, 0, 1],\n                            ),\n                            {\n                              x: 0,\n                              y: 0,\n                              width: spriteImageData.width,\n                              height: spriteImageData.height,\n                              pixelRatio: spriteImageData.pixelRatio,\n                            },\n                            haloWidth,\n                            haloColor,\n                          );\n                          color = undefined; // do not tint haloed icons\n                        } else {\n                          img = drawIconHalo(\n                            spriteImage,\n                            spriteImageData,\n                            haloWidth,\n                            haloColor,\n                          );\n                        }\n                      } else {\n                        if (spriteImageData.sdf) {\n                          if (!spriteImageUnSDFed) {\n                            spriteImageUnSDFed = drawSDF(\n                              spriteImage,\n                              {\n                                x: 0,\n                                y: 0,\n                                width: spriteImageSize[0],\n                                height: spriteImageSize[1],\n                              },\n                              {r: 1, g: 1, b: 1, a: 1},\n                            );\n                          }\n                          img = spriteImageUnSDFed;\n                        } else {\n                          img = spriteImage;\n                        }\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        // @ts-ignore\n                        imgSize: spriteImageSize,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          zoom,\n                          f,\n                          functionCache,\n                          featureState,\n                        ),\n                      ),\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState,\n                    ),\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    ],\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n\n          const circleTranslate = getValue(\n            layer,\n            'paint',\n            'circle-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth +\n            '.' +\n            circleTranslate[0] +\n            '.' +\n            circleTranslate[1];\n\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              displacement: [circleTranslate[0], -circleTranslate[1]],\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          font = mb2css(\n            getFonts\n              ? getFonts(\n                  fontArray,\n                  glStyle.metadata\n                    ? glStyle.metadata['ol:webfonts']\n                    : undefined,\n                )\n              : fontArray,\n            textSize,\n            textLineHeight,\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight,\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return acc;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing,\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          const declutterMode = getDeclutterMode(\n            layer,\n            zoom,\n            f,\n            'text',\n            functionCache,\n          );\n          if (!style.getText()) {\n            style.setText(text);\n          }\n          text = style.getText();\n          if (\n            !text ||\n            ('getDeclutterMode' in text &&\n              text.getDeclutterMode() !== declutterMode)\n          ) {\n            text = new Text({\n              padding: [2, 2, 2, 2],\n              // @ts-ignore\n              declutterMode: declutterMode,\n            });\n            style.setText(text);\n          }\n          const textTransform = getValue(\n            layer,\n            'layout',\n            'text-transform',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n              ? applyLetterSpacing(label, letterSpacing)\n              : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            ),\n          );\n          if (typeof text.setKeepUpright === 'function') {\n            const keepUpright = getValue(\n              layer,\n              'layout',\n              'text-keep-upright',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setKeepUpright(keepUpright);\n          }\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                );\n          let textAlign;\n          if (placement === 'line-center') {\n            text.setPlacement('line');\n            textAlign = 'center';\n          } else {\n            text.setPlacement(placement);\n          }\n          if (placement === 'line' && typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(\n              layer,\n              'layout',\n              'symbol-spacing',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n              ) *\n                label.length) /\n                wrappedLabel.length,\n            );\n            text.setRotateWithView(false);\n          }\n          text.setTextAlign(textAlign);\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0],\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1],\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            ),\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            opacity,\n          );\n          if (haloColor && textHaloWidth > 0) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize,\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if ('set' in feature) {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n    return undefined;\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n  return styleFunction;\n}\n\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nexport function getStyleForLayer(feature, resolution, olLayer, layerId) {\n  const evaluateStyle = olLayer.getStyleFunction();\n  if (evaluateStyle.length === 3) {\n    // @ts-ignore\n    return evaluateStyle(feature, resolution, layerId);\n  }\n  return undefined;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image ? null : this.image.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection),\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection,\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image = null;\n          }\n        }\n      } else {\n        this.image = null;\n      }\n    }\n\n    return !!this.image;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image.getExtent();\n    const img = this.image.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth),\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight),\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const image = this.image;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const context = this.getRenderContext(frameState);\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection,\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY,\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      if (opacity !== 1) {\n        context.save();\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.restore();\n      }\n    }\n    this.postRender(this.context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","\nconst SHIFT_LEFT_32 = (1 << 16) * (1 << 16);\nconst SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nconst TEXT_DECODER_MIN_LENGTH = 12;\nconst utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8');\n\nconst PBF_VARINT  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nconst PBF_FIXED64 = 1; // 64-bit: double, fixed64, sfixed64\nconst PBF_BYTES   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nconst PBF_FIXED32 = 5; // 32-bit: float, fixed32, sfixed32\n\nexport default class Pbf {\n    /**\n     * @param {Uint8Array | ArrayBuffer} [buf]\n     */\n    constructor(buf = new Uint8Array(16)) {\n        this.buf = ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf);\n        this.dataView = new DataView(this.buf.buffer);\n        this.pos = 0;\n        this.type = 0;\n        this.length = this.buf.length;\n    }\n\n    // === READING =================================================================\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     * @param {number} [end]\n     */\n    readFields(readField, result, end = this.length) {\n        while (this.pos < end) {\n            const val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    }\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     */\n    readMessage(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    }\n\n    readFixed32() {\n        const val = this.dataView.getUint32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readSFixed32() {\n        const val = this.dataView.getInt32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getUint32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readSFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getInt32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readFloat() {\n        const val = this.dataView.getFloat32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readDouble() {\n        const val = this.dataView.getFloat64(this.pos, true);\n        this.pos += 8;\n        return val;\n    }\n\n    /**\n     * @param {boolean} [isSigned]\n     */\n    readVarint(isSigned) {\n        const buf = this.buf;\n        let val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    }\n\n    readVarint64() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    }\n\n    readSVarint() {\n        const num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    }\n\n    readBoolean() {\n        return Boolean(this.readVarint());\n    }\n\n    readString() {\n        const end = this.readVarint() + this.pos;\n        const pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return utf8TextDecoder.decode(this.buf.subarray(pos, end));\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    }\n\n    readBytes() {\n        const end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    }\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    /**\n     * @param {number[]} [arr]\n     * @param {boolean} [isSigned]\n     */\n    readPackedVarint(arr = [], isSigned) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSVarint(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    }\n    /** @param {boolean[]} [arr] */\n    readPackedBoolean(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFloat(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedDouble(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    }\n    readPackedEnd() {\n        return this.type === PBF_BYTES ? this.readVarint() + this.pos : this.pos + 1;\n    }\n\n    /** @param {number} val */\n    skip(val) {\n        const type = val & 0x7;\n        if (type === PBF_VARINT) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === PBF_BYTES) this.pos = this.readVarint() + this.pos;\n        else if (type === PBF_FIXED32) this.pos += 4;\n        else if (type === PBF_FIXED64) this.pos += 8;\n        else throw new Error(`Unimplemented type: ${type}`);\n    }\n\n    // === WRITING =================================================================\n\n    /**\n     * @param {number} tag\n     * @param {number} type\n     */\n    writeTag(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    }\n\n    /** @param {number} min */\n    realloc(min) {\n        let length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            const buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.dataView = new DataView(buf.buffer);\n            this.length = length;\n        }\n    }\n\n    finish() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    }\n\n    /** @param {number} val */\n    writeFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeSFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeSFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeVarint(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    }\n\n    /** @param {number} val */\n    writeSVarint(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    }\n\n    /** @param {boolean} val */\n    writeBoolean(val) {\n        this.writeVarint(+val);\n    }\n\n    /** @param {string} str */\n    writeString(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        const startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /** @param {number} val */\n    writeFloat(val) {\n        this.realloc(4);\n        this.dataView.setFloat32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeDouble(val) {\n        this.realloc(8);\n        this.dataView.setFloat64(this.pos, val, true);\n        this.pos += 8;\n    }\n\n    /** @param {Uint8Array} buffer */\n    writeBytes(buffer) {\n        const len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (let i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    }\n\n    /**\n     * @template T\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeRawMessage(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        const startPos = this.pos;\n        fn(obj, this);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /**\n     * @template T\n     * @param {number} tag\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeMessage(tag, fn, obj) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeRawMessage(fn, obj);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean[]} arr\n     */\n    writePackedBoolean(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFloat(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFloat, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedDouble(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedDouble, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {Uint8Array} buffer\n     */\n    writeBytesField(tag, buffer) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeBytes(buffer);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeSFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeSFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeSVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {string} str\n     */\n    writeStringField(tag, str) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeString(str);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFloatField(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFloat(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeDoubleField(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeDouble(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean} val\n     */\n    writeBooleanField(tag, val) {\n        this.writeVarintField(tag, +val);\n    }\n};\n\n/**\n * @param {number} l\n * @param {boolean | undefined} s\n * @param {Pbf} p\n */\nfunction readVarintRemainder(l, s, p) {\n    const buf = p.buf;\n    let h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {boolean} [isSigned]\n */\nfunction toNum(low, high, isSigned) {\n    return isSigned ? high * 0x100000000 + (low >>> 0) : ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\n/**\n * @param {number} val\n * @param {Pbf} pbf\n */\nfunction writeBigVarint(val, pbf) {\n    let low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\n/**\n * @param {number} high\n * @param {number} low\n * @param {Pbf} pbf\n */\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\n/**\n * @param {number} high\n * @param {Pbf} pbf\n */\nfunction writeBigVarintHigh(high, pbf) {\n    const lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\n/**\n * @param {number} startPos\n * @param {number} len\n * @param {Pbf} pbf\n */\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    const extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (let i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFloat(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedDouble(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);\n}\n/**\n * @param {boolean[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedBoolean(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]);\n}\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\n/**\n * @param {Uint8Array} buf\n * @param {number} pos\n * @param {number} end\n */\nfunction readUtf8(buf, pos, end) {\n    let str = '';\n    let i = pos;\n\n    while (i < end) {\n        const b0 = buf[i];\n        let c = null; // codepoint\n        let bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        let b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\n/**\n * @param {Uint8Array} buf\n * @param {string} str\n * @param {number} pos\n */\nfunction writeUtf8(buf, str, pos) {\n    for (let i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=RenderFeature]\n * @extends {FeatureFormat<FeatureType>}\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    this.featureClass = options.featureClass\n      ? options.featureClass\n      : /** @type {import('./Feature.js').FeatureToFeatureClass<FeatureType>} */ (\n          RenderFeature\n        );\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1],\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {FeatureType|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass === RenderFeature) {\n      feature =\n        new /** @type {import('./Feature.js').FeatureToFeatureClass<RenderFeature>} */ (\n          this.featureClass\n        )(geometryType, flatCoordinates, ends, 2, values, id);\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n              ? new LineString(flatCoordinates, 'XY')\n              : geometryType === 'MultiPoint'\n                ? new MultiPoint(flatCoordinates, 'XY')\n                : geometryType === 'MultiLineString'\n                  ? new MultiLineString(flatCoordinates, 'XY', ends)\n                  : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return /** @type {FeatureType} */ (feature);\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return /** @type {Array<FeatureType>} */ (features);\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n            ? pbf.readFloat()\n            : tag === 3\n              ? pbf.readDouble()\n              : tag === 4\n                ? pbf.readVarint64()\n                : tag === 5\n                  ? pbf.readVarint()\n                  : tag === 6\n                    ? pbf.readSVarint()\n                    : tag === 7\n                      ? pbf.readBoolean()\n                      : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageState from './ImageState.js';\nimport ImageWrapper from './Image.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   * @override\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate,\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution,\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   * @override\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_,\n        true,\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          (e) => {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (\n        this.sourceListenerKey_\n      ),\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\nimport {ceil} from '../math.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.wantedProjection_ = null;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate(),\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (this.wantedProjection_ === projection &&\n            ((this.wantedExtent_ &&\n              containsExtent(this.wantedExtent_, requestExtent)) ||\n              containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedProjection_ = projection;\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader,\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this),\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @override\n   */\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   * @override\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = new ImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height,\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'})),\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.imageOps_ = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this.imageOps_) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this.onWorkerMessage_.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this.onWorkerMessage_.bind(this, 0),\n      );\n    }\n    /**\n     * @type {Array<Worker>}\n     * @private\n     */\n    this.workers_ = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this.queue_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxQueueLength_ = config.queue || Infinity;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.running_ = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this.dataLookup_ = {};\n\n    /**\n     * @type {Job|null}\n     * @private\n     */\n    this.job_ = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this.enqueue_({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this.dispatch_();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  enqueue_(job) {\n    this.queue_.push(job);\n    while (this.queue_.length > this.maxQueueLength_) {\n      this.queue_.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  dispatch_() {\n    if (this.running_ || this.queue_.length === 0) {\n      return;\n    }\n\n    const job = this.queue_.shift();\n    this.job_ = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this.workers_.length;\n    this.running_ = threads;\n    if (threads === 1) {\n      this.workers_[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this.imageOps_,\n          width: width,\n          height: height,\n        },\n        buffers,\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this.workers_[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this.imageOps_,\n          width: width,\n          height: height,\n        },\n        slices,\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  onWorkerMessage_(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this.dataLookup_[index] = event.data;\n    --this.running_;\n    if (this.running_ === 0) {\n      this.resolveJob_();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  resolveJob_() {\n    const job = this.job_;\n    const threads = this.workers_.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this.dataLookup_[0]['buffer']);\n      meta = this.dataLookup_[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this.dataLookup_[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this.dataLookup_[i]['meta'];\n      }\n    }\n    this.job_ = null;\n    this.dataLookup_ = {};\n    job.callback(\n      null,\n      new ImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta,\n    );\n    this.dispatch_();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   * @override\n   */\n  disposeInternal() {\n    for (let i = 0; i < this.workers_.length; ++i) {\n      this.workers_[i].terminate();\n    }\n    this.workers_.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     * @private\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutter: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      /** @type {Array<string>} */\n      const attributions = [];\n      for (let i = 0, iMax = options.sources.length; i < iMax; ++i) {\n        const sourceOrLayer = options.sources[i];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const sourceAttributions = source.getAttributions()?.(frameState);\n        if (typeof sourceAttributions === 'string') {\n          attributions.push(sourceAttributions);\n        } else if (sourceAttributions !== undefined) {\n          attributions.push(...sourceAttributions);\n        }\n      }\n      return attributions;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   * @override\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data),\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState),\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas,\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data),\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {renderXYZTemplate} from './uri.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * TODO: Update ol-mapbox-style to import this from the uri.js module.\n */\nexport {expandUrl} from './uri.js';\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @override\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   * @override\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   * @override\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @override\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      const tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n\n    let tile = this.tileCache.get(tileCoordKey);\n    if (tile.key != key) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.replace(tileCoordKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection,\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D|null}\n     */\n    this.context_ = null;\n\n    /**\n     * Executor groups. Read/written by the renderer.\n     * @type {Array<import(\"./render/canvas/ExecutorGroup.js\").default>}\n     */\n    this.executorGroups = [];\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext() {\n    if (!this.context_) {\n      this.context_ = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_;\n  }\n\n  /**\n   * @return {boolean} Tile has a rendering context.\n   */\n  hasContext() {\n    return !!this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.hasContext() ? this.getContext().canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   * @override\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    releaseCanvas(this.context_);\n    canvasPool.push(this.context_.canvas);\n    this.context_ = null;\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getCacheKeyForTileKey} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options<FeatureType>} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache_ = new TileCache(128);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   * @override\n   */\n  clear() {\n    this.sourceTileCache_.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   * @override\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache_.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection,\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection,\n        );\n        const sourceTile = this.sourceTileCache_.containsKey(tileUrl)\n          ? this.sourceTileCache_.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction,\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR,\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0],\n          );\n          this.sourceTileCache_.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR,\n          )\n            ? TileState.ERROR\n            : TileState.LOADED,\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection),\n    );\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   * @override\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   * @override\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @param {import(\"../VectorTile.js\").default<FeatureType>} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile),\n      );\n    },\n  );\n}\n","/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nexport function hillshade(inputs, data) {\n  const elevationImage = inputs[0];\n  const width = elevationImage.width;\n  const height = elevationImage.height;\n  const elevationData = elevationImage.data;\n  const shadeData = new Uint8ClampedArray(elevationData.length);\n  const dp = data.resolution * 2;\n  const maxX = width - 1;\n  const maxY = height - 1;\n  const pixel = [0, 0, 0, 0];\n  const twoPi = 2 * Math.PI;\n  const halfPi = Math.PI / 2;\n  const sunEl = (Math.PI * data.sunEl) / 180;\n  const sunAz = (Math.PI * data.sunAz) / 180;\n  const cosSunEl = Math.cos(sunEl);\n  const sinSunEl = Math.sin(sunEl);\n  const highlightColor = data.highlightColor;\n  const shadowColor = data.shadowColor;\n  const accentColor = data.accentColor;\n  const encoding = data.encoding;\n\n  let pixelX,\n    pixelY,\n    x0,\n    x1,\n    y0,\n    y1,\n    offset,\n    z0,\n    z1,\n    dzdx,\n    dzdy,\n    slope,\n    aspect,\n    accent,\n    scaled,\n    shade,\n    scaledAccentColor,\n    compositeShadeColor,\n    clamp,\n    slopeScaleBase,\n    scaledSlope,\n    cosIncidence;\n\n  function calculateElevation(pixel, encoding = 'mapbox') {\n    // The method used to extract elevations from the DEM.\n    //\n    // The supported methods are the Mapbox format\n    // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n    // and the Terrarium format\n    // (red * 256 + green + blue / 256) - 32768\n    //\n    if (encoding === 'mapbox') {\n      return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n    }\n    if (encoding === 'terrarium') {\n      return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n    }\n  }\n  for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n    y0 = pixelY === 0 ? 0 : pixelY - 1;\n    y1 = pixelY === maxY ? maxY : pixelY + 1;\n    for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n      x0 = pixelX === 0 ? 0 : pixelX - 1;\n      x1 = pixelX === maxX ? maxX : pixelX + 1;\n\n      // determine elevation for (x0, pixelY)\n      offset = (pixelY * width + x0) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (x1, pixelY)\n      offset = (pixelY * width + x1) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdx = (z1 - z0) / dp;\n\n      // determine elevation for (pixelX, y0)\n      offset = (y0 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (pixelX, y1)\n      offset = (y1 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdy = (z1 - z0) / dp;\n\n      aspect = Math.atan2(dzdy, -dzdx);\n      if (aspect < 0) {\n        aspect = halfPi - aspect;\n      } else if (aspect > halfPi) {\n        aspect = twoPi - aspect + halfPi;\n      } else {\n        aspect = halfPi - aspect;\n      }\n\n      // Bootstrap slope and corresponding incident values\n      slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n      cosIncidence =\n        sinSunEl * Math.cos(slope) +\n        cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n      accent = Math.cos(slope);\n      // 255 for Hex colors\n      scaled = 255 * cosIncidence;\n\n      /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n\n      // Forces given value to stay between two given extremes\n      clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n\n      // Intensity basis for hillshade opacity\n      slopeScaleBase = 1.875 - data.opacity * 1.75;\n      // Intensity interpolation so that higher intensity values create more opaque hillshading\n      scaledSlope =\n        data.opacity !== 0.5\n          ? halfPi *\n            ((Math.pow(slopeScaleBase, slope) - 1) /\n              (Math.pow(slopeScaleBase, halfPi) - 1))\n          : slope;\n\n      // Accent hillshade color with given accentColor to emphasize rougher terrain\n      scaledAccentColor = {\n        r: (1 - accent) * accentColor.r * clamp * 255,\n        g: (1 - accent) * accentColor.g * clamp * 255,\n        b: (1 - accent) * accentColor.b * clamp * 255,\n        a: (1 - accent) * accentColor.a * clamp * 255,\n      };\n\n      // Allows highlight vs shadow discrimination\n      shade = Math.abs((((aspect + sunAz) / Math.PI + 0.5) % 2) - 1);\n      // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n      compositeShadeColor = {\n        r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n        g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n        b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n        a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled,\n      };\n\n      // Fill in result color value\n      offset = (pixelY * width + pixelX) * 4;\n      shadeData[offset] =\n        scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n      shadeData[offset + 1] =\n        scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n      shadeData[offset + 2] =\n        scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n      // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n      shadeData[offset + 3] =\n        elevationData[offset + 3] *\n        data.opacity *\n        clamp *\n        Math.sin(scaledSlope);\n    }\n  }\n\n  return new ImageData(shadeData, width, height);\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, {defaultLoadFunction} from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport {METERS_PER_UNIT} from 'ol/proj/Units.js';\nimport {\n  _colorWithOpacity,\n  stylefunction as applyStylefunction,\n  getValue,\n  styleFunctionArgs,\n} from './stylefunction.js';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy.js';\nimport {createXYZ} from 'ol/tilegrid.js';\nimport {\n  defaultResolutions,\n  fetchResource,\n  getFilterCache,\n  getFunctionCache,\n  getGlStyle,\n  getResolutionForZoom,\n  getStyleFunctionKey,\n  getTileJson,\n  getZoomForResolution,\n} from './util.js';\nimport {\n  equivalent,\n  fromLonLat,\n  getPointResolution,\n  get as getProjection,\n  getUserProjection,\n} from 'ol/proj.js';\nimport {getCenter, getTopLeft} from 'ol/extent.js';\nimport {getFonts} from './text.js';\nimport {hillshade} from './shaders.js';\nimport {\n  normalizeSourceUrl,\n  normalizeSpriteUrl,\n  normalizeStyleUrl,\n} from './mapbox.js';\n\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, import(\"./util.js\").ResourceType): (Request|string|Promise<Request|string>|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` or a url `string`, or a promise tehereof.\n * Without a return value the original request will not be modified.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {string} [webfonts] Template for resolving webfonts. Can be used to specify where to fetch\n * web fonts when no `ol:webfonts` metadata is set in the style object. See `getFonts()` and the\n * \"Font handling\" section in `README.md` for details.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n  return projection.getExtent()\n    ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22,\n      }).getResolutions()\n    : defaultResolutions;\n}\n\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n  if (!options.accessToken) {\n    options = Object.assign({}, options);\n    const searchParams = new URL(styleUrl).searchParams;\n    // The last search parameter is the access token\n    searchParams.forEach((value, key) => {\n      options.accessToken = value;\n      options.accessTokenParam = key;\n    });\n  }\n  return options;\n}\n\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nexport function applyStyle(\n  layer,\n  glStyle,\n  sourceOrLayersOrOptions = '',\n  optionsOrPath = {},\n  resolutions = undefined,\n) {\n  let styleUrl, sourceId;\n  /** @type {Options&ApplyStyleOptions} */\n  let options;\n  let sourceOrLayers;\n  let updateSource = true;\n  if (\n    typeof sourceOrLayersOrOptions !== 'string' &&\n    !Array.isArray(sourceOrLayersOrOptions)\n  ) {\n    options = sourceOrLayersOrOptions;\n    sourceOrLayers = options.source || options.layers;\n    optionsOrPath = options;\n  } else {\n    sourceOrLayers = sourceOrLayersOrOptions;\n  }\n  if (typeof optionsOrPath === 'string') {\n    styleUrl = optionsOrPath;\n    options = {};\n  } else {\n    styleUrl = optionsOrPath.styleUrl;\n    options = optionsOrPath;\n  }\n  if (options.updateSource === false) {\n    updateSource = false;\n  }\n  if (!resolutions) {\n    resolutions = options.resolutions;\n  }\n  if (\n    !styleUrl &&\n    typeof glStyle === 'string' &&\n    !glStyle.trim().startsWith('{')\n  ) {\n    styleUrl = glStyle;\n  }\n  if (styleUrl) {\n    styleUrl = styleUrl.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(styleUrl, options.accessToken);\n    options = completeOptions(styleUrl, options);\n  }\n\n  return new Promise(function (resolve, reject) {\n    // TODO: figure out where best place to check source type is\n    // Note that the source arg is an array of gl layer ids and each must be\n    // dereferenced to get source type to validate\n    getGlStyle(glStyle, options)\n      .then(function (glStyle) {\n        if (glStyle.version != 8) {\n          return reject(new Error('glStyle version 8 required.'));\n        }\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          return reject(\n            new Error('Can only apply to VectorLayer or VectorTileLayer'),\n          );\n        }\n\n        const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n        if (!sourceOrLayers) {\n          sourceId = Object.keys(glStyle.sources).find(function (key) {\n            return glStyle.sources[key].type === type;\n          });\n          sourceOrLayers = sourceId;\n        } else if (Array.isArray(sourceOrLayers)) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.id === sourceOrLayers[0];\n          }).source;\n        } else {\n          sourceId = sourceOrLayers;\n        }\n        if (!sourceId) {\n          return reject(new Error(`No ${type} source found in the glStyle.`));\n        }\n\n        function assignSource() {\n          if (!updateSource) {\n            return Promise.resolve();\n          }\n          if (layer instanceof VectorTileLayer) {\n            return setupVectorSource(\n              glStyle.sources[sourceId],\n              styleUrl,\n              options,\n            ).then(function (source) {\n              const targetSource = layer.getSource();\n              if (!targetSource) {\n                layer.setSource(source);\n              } else if (source !== targetSource) {\n                targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                if (\n                  typeof targetSource.setUrls === 'function' &&\n                  typeof source.getUrls === 'function'\n                ) {\n                  // to get correct keys for tile cache and queue\n                  targetSource.setUrls(source.getUrls());\n                }\n                //@ts-ignore\n                if (!targetSource.format_) {\n                  //@ts-ignore\n                  targetSource.format_ = source.format_;\n                }\n                if (!targetSource.getAttributions()) {\n                  targetSource.setAttributions(source.getAttributions());\n                }\n                if (\n                  targetSource.getTileLoadFunction() === defaultLoadFunction\n                ) {\n                  targetSource.setTileLoadFunction(\n                    source.getTileLoadFunction(),\n                  );\n                }\n                if (\n                  equivalent(\n                    targetSource.getProjection(),\n                    source.getProjection(),\n                  )\n                ) {\n                  targetSource.tileGrid = source.getTileGrid();\n                }\n              }\n              const tileGrid = layer.getSource().getTileGrid();\n              if (\n                !isFinite(layer.getMaxResolution()) &&\n                !isFinite(layer.getMinZoom()) &&\n                tileGrid.getMinZoom() > 0\n              ) {\n                layer.setMaxResolution(\n                  getResolutionForZoom(\n                    Math.max(0, tileGrid.getMinZoom() - 1e-12),\n                    tileGrid.getResolutions(),\n                  ),\n                );\n              }\n            });\n          }\n          const glSource = glStyle.sources[sourceId];\n          let source = layer.getSource();\n          if (!source || source.get('mapbox-source') !== glSource) {\n            source = setupGeoJSONSource(glSource, styleUrl, options);\n          }\n          const targetSource = /** @type {VectorSource} */ (layer.getSource());\n          if (!targetSource) {\n            layer.setSource(source);\n          } else if (source !== targetSource) {\n            if (!targetSource.getAttributions()) {\n              targetSource.setAttributions(source.getAttributions());\n            }\n            //@ts-ignore\n            if (!targetSource.format_) {\n              //@ts-ignore\n              targetSource.format_ = source.getFormat();\n            }\n            //@ts-ignore\n            targetSource.url_ = source.getUrl();\n          }\n          return Promise.resolve();\n        }\n\n        let spriteScale, spriteData, spriteImageUrl, style;\n        function onChange() {\n          if (!style && (!glStyle.sprite || spriteData)) {\n            if (options.projection && !resolutions) {\n              const projection = getProjection(options.projection);\n              const units = projection.getUnits();\n              if (units !== 'm') {\n                resolutions = defaultResolutions.map(\n                  (resolution) => resolution / METERS_PER_UNIT[units],\n                );\n              }\n            }\n            style = applyStylefunction(\n              layer,\n              glStyle,\n              sourceOrLayers,\n              resolutions,\n              spriteData,\n              spriteImageUrl,\n              (fonts, templateUrl = options.webfonts) =>\n                getFonts(fonts, templateUrl),\n              options.getImage,\n            );\n            if (!layer.getStyle()) {\n              reject(new Error(`Nothing to show for source [${sourceId}]`));\n            } else {\n              assignSource().then(resolve).catch(reject);\n            }\n          } else if (style) {\n            layer.setStyle(style);\n            assignSource().then(resolve).catch(reject);\n          } else {\n            reject(new Error('Something went wrong trying to apply style.'));\n          }\n        }\n\n        if (glStyle.sprite) {\n          const sprite = new URL(\n            normalizeSpriteUrl(\n              glStyle.sprite,\n              options.accessToken,\n              styleUrl || location.href,\n            ),\n          );\n          spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n          const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n          let spriteUrl =\n            sprite.origin +\n            sprite.pathname +\n            sizeFactor +\n            '.json' +\n            sprite.search;\n\n          new Promise(function (resolve, reject) {\n            fetchResource('Sprite', spriteUrl, options)\n              .then(resolve)\n              .catch(function (error) {\n                spriteUrl =\n                  sprite.origin + sprite.pathname + '.json' + sprite.search;\n                fetchResource('Sprite', spriteUrl, options)\n                  .then(resolve)\n                  .catch(reject);\n              });\n          })\n            .then(function (spritesJson) {\n              if (spritesJson === undefined) {\n                reject(new Error('No sprites found.'));\n              }\n              spriteData = spritesJson;\n              spriteImageUrl =\n                sprite.origin +\n                sprite.pathname +\n                sizeFactor +\n                '.png' +\n                sprite.search;\n              if (options.transformRequest) {\n                const transformed =\n                  options.transformRequest(spriteImageUrl, 'SpriteImage') ||\n                  spriteImageUrl;\n                if (\n                  transformed instanceof Request ||\n                  transformed instanceof Promise\n                ) {\n                  spriteImageUrl = transformed;\n                }\n              }\n              onChange();\n            })\n            .catch(function (err) {\n              reject(\n                new Error(\n                  `Sprites cannot be loaded: ${spriteUrl}: ${err.message}`,\n                ),\n              );\n            });\n        } else {\n          onChange();\n        }\n      })\n      .catch(reject);\n  });\n}\n\nconst emptyObj = {};\n\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n  glStyle.layers.some(function (layer) {\n    if (layer.type === 'background') {\n      if (mapOrLayer instanceof Layer) {\n        mapOrLayer.setBackground(function (resolution) {\n          return getBackgroundColor(layer, resolution, options, {});\n        });\n        return true;\n      }\n      if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n        mapOrLayer\n          .getLayers()\n          .insertAt(0, setupBackgroundLayer(layer, options, {}));\n        return true;\n      }\n    }\n  });\n}\n\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nexport function applyBackground(mapOrLayer, glStyle, options = {}) {\n  return getGlStyle(glStyle, options).then(function (glStyle) {\n    setFirstBackground(mapOrLayer, glStyle, options);\n  });\n}\n\nfunction getSourceIdByRef(layers, ref) {\n  let sourceId;\n  layers.some(function (layer) {\n    if (layer.id == ref) {\n      sourceId = layer.source;\n      return true;\n    }\n  });\n  return sourceId;\n}\n\nfunction extentFromTileJSON(tileJSON, projection) {\n  const bounds = tileJSON.bounds;\n  if (bounds) {\n    const ll = fromLonLat([bounds[0], bounds[1]], projection);\n    const tr = fromLonLat([bounds[2], bounds[3]], projection);\n    return [ll[0], ll[1], tr[0], tr[1]];\n  }\n  return getProjection(projection).getExtent();\n}\n\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n  const tileJSONSource = new TileJSON({\n    tileJSON: tileJSON,\n    tileSize: glSource.tileSize || tileJSON.tileSize || 512,\n  });\n  const tileJSONDoc = tileJSONSource.getTileJSON();\n  const tileGrid = tileJSONSource.getTileGrid();\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const extent = extentFromTileJSON(tileJSONDoc, projection);\n  const projectionExtent = projection.getExtent();\n  const minZoom = tileJSONDoc.minzoom || 0;\n  const maxZoom = tileJSONDoc.maxzoom || 22;\n  /** @type {import(\"ol/source/VectorTile.js\").Options<import(\"ol/render/Feature.js\").default>} */\n  const sourceOptions = {\n    attributions: tileJSONSource.getAttributions(),\n    projection: projection,\n    tileGrid: new TileGrid({\n      origin: projectionExtent\n        ? getTopLeft(projectionExtent)\n        : tileGrid.getOrigin(0),\n      extent: extent || tileGrid.getExtent(),\n      minZoom: minZoom,\n      resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(\n        0,\n        maxZoom + 1,\n      ),\n      tileSize: tileGrid.getTileSize(0),\n    }),\n  };\n  if (Array.isArray(tileJSONDoc.tiles)) {\n    sourceOptions.urls = tileJSONDoc.tiles;\n  } else {\n    sourceOptions.url = tileJSONDoc.tiles;\n  }\n  return sourceOptions;\n}\n\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n  const background = {\n    id: glLayer.id,\n    type: glLayer.type,\n  };\n  const layout = glLayer.layout || {};\n  const paint = glLayer.paint || {};\n  background['paint'] = paint;\n  const zoom = getZoomForResolution(\n    resolution,\n    options.resolutions || defaultResolutions,\n  );\n  let opacity;\n  const bg = getValue(\n    background,\n    'paint',\n    'background-color',\n    zoom,\n    emptyObj,\n    functionCache,\n  );\n  if (paint['background-opacity'] !== undefined) {\n    opacity = getValue(\n      background,\n      'paint',\n      'background-opacity',\n      zoom,\n      emptyObj,\n      functionCache,\n    );\n  }\n  return layout.visibility == 'none'\n    ? undefined\n    : _colorWithOpacity(bg, opacity);\n}\n\n/**\n * @param {Object} glLayer Mapbox Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n  const div = document.createElement('div');\n  div.className = 'ol-mapbox-style-background';\n  div.style.position = 'absolute';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  return new Layer({\n    source: new Source({}),\n    render(frameState) {\n      const color = getBackgroundColor(\n        glLayer,\n        frameState.viewState.resolution,\n        options,\n        functionCache,\n      );\n      div.style.backgroundColor = color;\n      return div;\n    },\n  });\n}\n\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nexport function setupVectorSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function ({tileJson, tileLoadFunction}) {\n        const sourceOptions = sourceOptionsFromTileJSON(\n          glSource,\n          tileJson,\n          options,\n        );\n        sourceOptions.tileLoadFunction = tileLoadFunction;\n        sourceOptions.format = new MVT();\n        resolve(new VectorTileSource(sourceOptions));\n      })\n      .catch(reject);\n  });\n}\n\nfunction setupVectorLayer(glSource, styleUrl, options) {\n  const layer = new VectorTileLayer({\n    declutter: true,\n    visible: false,\n  });\n  setupVectorSource(glSource, styleUrl, options)\n    .then(function (source) {\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\nfunction getBboxTemplate(projection) {\n  const projCode = projection ? projection.getCode() : 'EPSG:3857';\n  return `{bbox-${projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')}}`;\n}\n\nfunction setupRasterSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function ({tileJson, tileLoadFunction}) {\n        const source = new TileJSON({\n          interpolate:\n            options.interpolate === undefined ? true : options.interpolate,\n          transition: 0,\n          crossOrigin: 'anonymous',\n          tileJSON: tileJson,\n        });\n        source.tileGrid = sourceOptionsFromTileJSON(\n          glSource,\n          tileJson,\n          options,\n        ).tileGrid;\n        if (options.projection) {\n          //@ts-ignore\n          source.projection = getProjection(options.projection);\n        }\n        const getTileUrl = source.getTileUrlFunction();\n        if (tileLoadFunction) {\n          source.setTileLoadFunction(tileLoadFunction);\n        }\n        source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n          const bboxTemplate = getBboxTemplate(projection);\n          let src = getTileUrl(tileCoord, pixelRatio, projection);\n          if (src.indexOf(bboxTemplate) != -1) {\n            const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n            src = src.replace(bboxTemplate, bbox.toString());\n          }\n          return src;\n        });\n        source.set('mapbox-source', glSource);\n        resolve(source);\n      })\n      .catch(function (error) {\n        reject(error);\n      });\n  });\n}\n\nfunction setupRasterLayer(glSource, styleUrl, options) {\n  const layer = new TileLayer();\n  setupRasterSource(glSource, styleUrl, options)\n    .then(function (source) {\n      layer.setSource(source);\n    })\n    .catch(function () {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n  const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n  /** @type {ImageLayer<Raster>} */\n  const layer = new ImageLayer({\n    source: new Raster({\n      operationType: 'image',\n      operation: hillshade,\n      sources: [tileLayer],\n    }),\n  });\n  return layer;\n}\n\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n  const geoJsonFormat = options.projection\n    ? new GeoJSON({dataProjection: options.projection})\n    : new GeoJSON();\n  const data = glSource.data;\n  const sourceOptions = {};\n  if (typeof data == 'string') {\n    const geoJsonUrl = normalizeSourceUrl(\n      data,\n      options.accessToken,\n      options.accessTokenParam || 'access_token',\n      styleUrl || location.href,\n    );\n    if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n      const extentUrl = (extent, resolution, projection) => {\n        const bboxTemplate = getBboxTemplate(projection);\n        return geoJsonUrl.replace(bboxTemplate, `${extent.join(',')}`);\n      };\n      const source = new VectorSource({\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n        loader: (extent, resolution, projection, success, failure) => {\n          const url =\n            typeof extentUrl === 'function'\n              ? extentUrl(extent, resolution, projection)\n              : extentUrl;\n          fetchResource('GeoJSON', url, options)\n            .then((json) => {\n              const features = /** @type {*} */ (\n                source\n                  .getFormat()\n                  .readFeatures(json, {featureProjection: projection})\n              );\n              source.addFeatures(features);\n              success(features);\n            })\n            .catch((response) => {\n              source.removeLoadedExtent(extent);\n              failure();\n            });\n        },\n        strategy: bboxStrategy,\n      });\n      source.set('mapbox-source', glSource);\n      return source;\n    }\n    const source = new VectorSource({\n      attributions: glSource.attribution,\n      format: geoJsonFormat,\n      url: geoJsonUrl,\n      loader: (extent, resolution, projection, success, failure) => {\n        fetchResource('GeoJSON', geoJsonUrl, options)\n          .then((json) => {\n            const features = /** @type {*} */ (\n              source\n                .getFormat()\n                .readFeatures(json, {featureProjection: projection})\n            );\n            source.addFeatures(features);\n            success(features);\n          })\n          .catch((response) => {\n            source.removeLoadedExtent(extent);\n            failure();\n          });\n      },\n    });\n    return source;\n  }\n  sourceOptions.features = geoJsonFormat.readFeatures(data, {\n    featureProjection: getUserProjection() || 'EPSG:3857',\n  });\n\n  const source = new VectorSource(\n    Object.assign(\n      {\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n      },\n      sourceOptions,\n    ),\n  );\n  source.set('mapbox-source', glSource);\n  return /** @type {VectorSource} */ (source);\n}\n\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n  return new VectorLayer({\n    declutter: true,\n    source: setupGeoJSONSource(glSource, styleUrl, options),\n    visible: false,\n  });\n}\n\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n  let zoom = null;\n  return function (event) {\n    if (\n      glLayer.paint &&\n      'raster-opacity' in glLayer.paint &&\n      event.frameState.viewState.zoom !== zoom\n    ) {\n      zoom = event.frameState.viewState.zoom;\n      delete functionCache[glLayer.id];\n      updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n    }\n  };\n}\n\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n  const opacity = getValue(\n    glLayer,\n    'paint',\n    'raster-opacity',\n    zoom,\n    emptyObj,\n    functionCache,\n  );\n  layer.setOpacity(opacity);\n}\n\nfunction manageVisibility(layer, mapOrGroup) {\n  function onChange() {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    if (!glStyle) {\n      return;\n    }\n    const mapboxLayers = derefLayers(glStyle.layers);\n    const layerMapboxLayerids = layer.get('mapbox-layers');\n    const visible = mapboxLayers\n      .filter(function (mapboxLayer) {\n        return layerMapboxLayerids.includes(mapboxLayer.id);\n      })\n      .some(function (mapboxLayer) {\n        return (\n          !mapboxLayer.layout ||\n          !mapboxLayer.layout.visibility ||\n          mapboxLayer.layout.visibility === 'visible'\n        );\n      });\n    if (layer.get('visible') !== visible) {\n      layer.setVisible(visible);\n    }\n  }\n  layer.on('change', onChange);\n  onChange();\n}\n\nexport function setupLayer(glStyle, styleUrl, glLayer, options) {\n  const functionCache = getFunctionCache(glStyle);\n  const glLayers = glStyle.layers;\n  const type = glLayer.type;\n\n  const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n  const glSource = glStyle.sources[id];\n  let layer;\n  if (type == 'background') {\n    layer = setupBackgroundLayer(glLayer, options, functionCache);\n  } else if (glSource.type == 'vector') {\n    layer = setupVectorLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster') {\n    layer = setupRasterLayer(glSource, styleUrl, options);\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true,\n    );\n    layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n  } else if (glSource.type == 'geojson') {\n    layer = setupGeoJSONLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n    const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n    layer = hillshadeLayer;\n    hillshadeLayer.getSource().on('beforeoperations', function (event) {\n      const data = event.data;\n      data.resolution = getPointResolution(\n        options.projection || 'EPSG:3857',\n        event.resolution,\n        getCenter(event.extent),\n        'm',\n      );\n      const zoom = getZoomForResolution(\n        event.resolution,\n        options.resolutions || defaultResolutions,\n      );\n      data.encoding = glSource.encoding;\n      data.vert =\n        5 *\n        getValue(\n          glLayer,\n          'paint',\n          'hillshade-exaggeration',\n          zoom,\n          emptyObj,\n          functionCache,\n        );\n      data.sunAz = getValue(\n        glLayer,\n        'paint',\n        'hillshade-illumination-direction',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n      data.sunEl = 35;\n      data.opacity = 0.3;\n      data.highlightColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-highlight-color',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n      data.shadowColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-shadow-color',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n      data.accentColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-accent-color',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n    });\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true,\n    );\n  }\n  const glSourceId = id;\n  if (layer) {\n    layer.set('mapbox-source', glSourceId);\n  }\n  return layer;\n}\n\n/**\n * @param {*} glStyle Mapbox Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n  const promises = [];\n\n  let view = null;\n  if (mapOrGroup instanceof Map) {\n    view = mapOrGroup.getView();\n    if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n      const projection = options.projection\n        ? getProjection(options.projection)\n        : view.getProjection();\n      view = new View(\n        Object.assign(view.getProperties(), {\n          maxResolution:\n            defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n          projection: options.projection || view.getProjection(),\n        }),\n      );\n      mapOrGroup.setView(view);\n    }\n\n    if ('center' in glStyle && !view.getCenter()) {\n      view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n    }\n    if ('zoom' in glStyle && view.getZoom() === undefined) {\n      view.setResolution(\n        defaultResolutions[0] /\n          METERS_PER_UNIT[view.getProjection().getUnits()] /\n          Math.pow(2, glStyle.zoom),\n      );\n    }\n    if (!view.getCenter() || view.getZoom() === undefined) {\n      view.fit(view.getProjection().getExtent(), {\n        nearest: true,\n        size: mapOrGroup.getSize(),\n      });\n    }\n  }\n  mapOrGroup.set('mapbox-style', glStyle);\n  mapOrGroup.set('mapbox-metadata', {styleUrl, options});\n\n  const glLayers = glStyle.layers;\n  let layerIds = [];\n\n  let layer, glSourceId, id;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    const type = glLayer.type;\n    if (type == 'heatmap') {\n      //FIXME Unsupported layer type\n      // eslint-disable-next-line no-console\n      console.debug(`layers[${i}].type \"${type}\" not supported`);\n      continue;\n    } else {\n      id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n      // this technique assumes gl layers will be in a particular order\n      if (!id || id != glSourceId) {\n        if (layerIds.length) {\n          promises.push(\n            finalizeLayer(\n              layer,\n              layerIds,\n              glStyle,\n              styleUrl,\n              mapOrGroup,\n              options,\n            ),\n          );\n          layerIds = [];\n        }\n\n        layer = setupLayer(glStyle, styleUrl, glLayer, options);\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          layerIds = [];\n        }\n        glSourceId = layer.get('mapbox-source');\n      }\n      layerIds.push(glLayer.id);\n    }\n  }\n  promises.push(\n    finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options),\n  );\n  return Promise.all(promises);\n}\n\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nexport function apply(mapOrGroupOrElement, style, options = {}) {\n  let promise;\n  /** @type {Map|LayerGroup} */\n  let mapOrGroup;\n  if (\n    typeof mapOrGroupOrElement === 'string' ||\n    mapOrGroupOrElement instanceof HTMLElement\n  ) {\n    mapOrGroup = new Map({\n      target: mapOrGroupOrElement,\n    });\n  } else {\n    mapOrGroup = mapOrGroupOrElement;\n  }\n\n  if (typeof style === 'string') {\n    const styleUrl = style.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(style, options.accessToken);\n    options = completeOptions(styleUrl, options);\n\n    promise = new Promise(function (resolve, reject) {\n      getGlStyle(style, options)\n        .then(function (glStyle) {\n          processStyle(glStyle, mapOrGroup, styleUrl, options)\n            .then(function () {\n              resolve(mapOrGroup);\n            })\n            .catch(reject);\n        })\n        .catch(function (err) {\n          reject(new Error(`Could not load ${style}: ${err.message}`));\n        });\n    });\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      processStyle(\n        style,\n        mapOrGroup,\n        !options.styleUrl || options.styleUrl.startsWith('data:')\n          ? location.href\n          : normalizeStyleUrl(options.styleUrl, options.accessToken),\n        options,\n      )\n        .then(function () {\n          resolve(mapOrGroup);\n        })\n        .catch(reject);\n    });\n  }\n\n  return promise;\n}\n\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nexport function finalizeLayer(\n  layer,\n  layerIds,\n  glStyle,\n  styleUrl,\n  mapOrGroup,\n  options = {},\n) {\n  let minZoom = 24;\n  let maxZoom = 0;\n  const glLayers = glStyle.layers;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    if (layerIds.indexOf(glLayer.id) !== -1) {\n      minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n      maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    const setStyle = function () {\n      const source = layer.getSource();\n      if (!source || source.getState() === 'error') {\n        reject(\n          new Error(\n            'Error accessing data for source ' + layer.get('mapbox-source'),\n          ),\n        );\n        return;\n      }\n      if ('getTileGrid' in source) {\n        const tileGrid =\n          /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */ (\n            source\n          ).getTileGrid();\n        if (tileGrid) {\n          const sourceMinZoom = tileGrid.getMinZoom();\n          if (minZoom > 0 || sourceMinZoom > 0) {\n            layer.setMaxResolution(\n              Math.min(\n                getResolutionForZoom(\n                  Math.max(0, minZoom - 1e-12),\n                  defaultResolutions,\n                ),\n                getResolutionForZoom(\n                  Math.max(0, sourceMinZoom - 1e-12),\n                  tileGrid.getResolutions(),\n                ),\n              ),\n            );\n          }\n          if (maxZoom < 24) {\n            layer.setMinResolution(\n              getResolutionForZoom(maxZoom, defaultResolutions),\n            );\n          }\n        }\n      } else {\n        if (minZoom > 0) {\n          layer.setMaxResolution(\n            getResolutionForZoom(\n              Math.max(0, minZoom - 1e-12),\n              defaultResolutions,\n            ),\n          );\n        }\n      }\n      if (\n        source instanceof VectorSource ||\n        source instanceof VectorTileSource\n      ) {\n        applyStyle(\n          /** @type {import(\"ol/layer/Vector\").default|import(\"ol/layer/VectorTile\").default} */ (\n            layer\n          ),\n          glStyle,\n          layerIds,\n          Object.assign({styleUrl: styleUrl}, options),\n        )\n          .then(function () {\n            manageVisibility(layer, mapOrGroup);\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        resolve();\n      }\n    };\n\n    layer.set('mapbox-layers', layerIds);\n    const layers = mapOrGroup.getLayers();\n    if (layers.getArray().indexOf(layer) === -1) {\n      layers.push(layer);\n    }\n\n    if (layer.getSource()) {\n      setStyle();\n    } else {\n      layer.once('change:source', setStyle);\n    }\n  });\n}\n\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nexport function getMapboxLayer(mapOrGroup, layerId) {\n  const style = mapOrGroup.get('mapbox-style');\n  const layerStyle = style.layers.find(function (layer) {\n    return layer.id === layerId;\n  });\n  return layerStyle;\n}\n\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nexport function addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  let spliceIndex;\n  let sourceIndex = -1;\n  if (beforeLayerId !== undefined) {\n    const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n    if (beforeMapboxLayer === undefined) {\n      throw new Error(`Layer with id \"${beforeLayerId}\" not found.`);\n    }\n    spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n  } else {\n    spliceIndex = mapboxLayers.length;\n  }\n  let sourceOffset;\n  if (\n    spliceIndex > 0 &&\n    mapboxLayers[spliceIndex - 1].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex - 1;\n    sourceOffset = -1;\n  } else if (\n    spliceIndex < mapboxLayers.length &&\n    mapboxLayers[spliceIndex].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex;\n    sourceOffset = 0;\n  }\n  if (sourceIndex === -1) {\n    const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n    const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n    if (beforeLayerId) {\n      const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n      const beforeLayerIndex = mapOrGroup\n        .getLayers()\n        .getArray()\n        .indexOf(beforeLayer);\n      mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n    }\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    return finalizeLayer(\n      layer,\n      [mapboxLayer.id],\n      glStyle,\n      styleUrl,\n      mapOrGroup,\n      options,\n    );\n  }\n\n  if (mapboxLayers.some((layer) => layer.id === mapboxLayer.id)) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" already exists.`);\n  }\n  const sourceLayerId = mapboxLayers[sourceIndex].id;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, sourceLayerId),\n      )\n    ];\n  mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n      sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n  }\n  return Promise.resolve();\n}\n\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nexport function updateMapboxLayer(mapOrGroup, mapboxLayer) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  const index = mapboxLayers.findIndex(function (layer) {\n    return layer.id === mapboxLayer.id;\n  });\n  if (index === -1) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" not found.`);\n  }\n  const oldLayer = mapboxLayers[index];\n  if (oldLayer.source !== mapboxLayer.source) {\n    throw new Error(\n      'Updated layer and previous version must use the same source.',\n    );\n  }\n  delete getFunctionCache(glStyle)[mapboxLayer.id];\n  delete getFilterCache(glStyle)[mapboxLayer.id];\n  mapboxLayers[index] = mapboxLayer;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, mapboxLayer.id),\n      )\n    ];\n  if (args) {\n    applyStylefunction.apply(undefined, args);\n  } else {\n    getLayer(mapOrGroup, mapboxLayer.id).changed();\n  }\n}\n\n/**\n * Updates a Mapbox source object in the style. The according OpenLayers source will be replaced\n * and the map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string} id Key of the source in the `sources` object literal.\n * @param {Object} mapboxSource Mapbox source object.\n * @return {Promise<Source>} Promise that resolves when the source has been updated.\n */\nexport function updateMapboxSource(mapOrGroup, id, mapboxSource) {\n  const currentSource = getSource(mapOrGroup, id);\n  const layers = /** @type {Array<VectorLayer|TileLayer|VectorTileLayer>} */ (\n    mapOrGroup\n      .getLayers()\n      .getArray()\n      .filter(function (layer) {\n        return (\n          (layer instanceof VectorLayer ||\n            layer instanceof TileLayer ||\n            layer instanceof VectorTileLayer) &&\n          layer.getSource() === currentSource\n        );\n      })\n  );\n  const metadata = mapOrGroup.get('mapbox-metadata');\n  let newSourcePromise;\n  switch (mapboxSource.type) {\n    case 'vector':\n      newSourcePromise = setupVectorSource(\n        mapboxSource,\n        metadata.styleUrl,\n        metadata.options,\n      );\n      break;\n    case 'geojson':\n      newSourcePromise = Promise.resolve(\n        setupGeoJSONSource(mapboxSource, metadata.styleUrl, metadata.options),\n      );\n      break;\n    case 'raster':\n    case 'raster-dem':\n      newSourcePromise = setupRasterSource(\n        mapboxSource,\n        metadata.styleUrl,\n        metadata.options,\n      );\n      break;\n    default:\n      return Promise.reject(\n        new Error('Unsupported source type ' + mapboxSource.type),\n      );\n  }\n  newSourcePromise.then(function (newSource) {\n    layers.forEach(function (layer) {\n      layer.setSource(newSource);\n    });\n  });\n  return newSourcePromise;\n}\n\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nexport function removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n  const mapboxLayerId =\n    typeof mapboxLayerIdOrLayer === 'string'\n      ? mapboxLayerIdOrLayer\n      : mapboxLayerIdOrLayer.id;\n  const layer = getLayer(mapOrGroup, mapboxLayerId);\n  /** @type {Array<Object>} */\n  const layerMapboxLayers = layer.get('mapbox-layers');\n  if (layerMapboxLayers.length === 1) {\n    throw new Error(\n      'Cannot remove last Mapbox layer from an OpenLayers layer.',\n    );\n  }\n  layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const layers = glStyle.layers;\n  layers.splice(\n    layers.findIndex((layer) => layer.id === mapboxLayerId),\n    1,\n  );\n  const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      sourceOrLayers.splice(\n        sourceOrLayers.findIndex((layer) => layer === mapboxLayerId),\n        1,\n      );\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayerId).changed();\n  }\n}\n\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nexport function getLayer(map, layerId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const mapboxLayers = layers[i].get('mapbox-layers');\n    if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n      return /** @type {Layer} */ (layers[i]);\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nexport function getLayers(map, sourceId) {\n  const result = [];\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    if (layers[i].get('mapbox-source') === sourceId) {\n      result.push(/** @type {Layer} */ (layers[i]));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nexport function getSource(map, sourceId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const source = /** @type {Layer} */ (layers[i]).getSource();\n    if (layers[i].get('mapbox-source') === sourceId) {\n      return source;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nexport function setFeatureState(mapOrLayer, feature, state) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState) {\n      if (state) {\n        featureState[feature.id] = state;\n      } else {\n        delete featureState[feature.id];\n      }\n      layers[i].changed();\n    } else {\n      throw new Error(`Map or layer for source \"${feature.source}\" not found.`);\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nexport function getFeatureState(mapOrLayer, feature) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState && featureState[feature.id]) {\n      return featureState[feature.id];\n    }\n  }\n  return undefined;\n}\n","import BaseEvent from 'ol/events/Event.js';\nimport EventType from 'ol/events/EventType.js';\nimport MVT from 'ol/format/MVT.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource from 'ol/source/VectorTile.js';\nimport {applyBackground, applyStyle} from './apply.js';\n\n/** @typedef {import(\"ol/Map.js\").default} Map */\n\n/**\n * @classdesc\n * Event emitted on configuration or loading error.\n */\nclass ErrorEvent extends BaseEvent {\n  /**\n   * @param {Error} error error object.\n   */\n  constructor(error) {\n    super(EventType.ERROR);\n\n    /**\n     * @type {Error}\n     */\n    this.error = error;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"ol/layer/Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox style object will be used. Set to `false` to prevent\n * the Mapbox style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"ol/extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"ol/render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"ol/layer/VectorTile.js\").VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"ol/Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use `map.addLayer()`.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * ```js\n * import {MapboxVectorLayer} from 'ol-mapbox-style';\n * ```\n * A vector tile layer based on a Mapbox style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here',\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * **Note for users of the full build**: The `MapboxVectorLayer` requires the\n * [ol-mapbox-style](https://github.com/openlayers/ol-mapbox-style) library to be loaded as well.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer<import(\"ol/source/VectorTile.js\").default>}\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nexport default class MapboxVectorLayer extends VectorTileLayer {\n  /**\n   * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n   * must be provided.\n   */\n  constructor(options) {\n    const declutter = 'declutter' in options ? options.declutter : true;\n    const source = new VectorTileSource({\n      state: 'loading',\n      format: new MVT(),\n    });\n\n    super({\n      source: source,\n      background: options.background === false ? null : options.background,\n      declutter: declutter,\n      className: options.className,\n      opacity: options.opacity,\n      visible: options.visible,\n      zIndex: options.zIndex,\n      minResolution: options.minResolution,\n      maxResolution: options.maxResolution,\n      minZoom: options.minZoom,\n      maxZoom: options.maxZoom,\n      renderOrder: options.renderOrder,\n      renderBuffer: options.renderBuffer,\n      renderMode: options.renderMode,\n      map: options.map,\n      updateWhileAnimating: options.updateWhileAnimating,\n      updateWhileInteracting: options.updateWhileInteracting,\n      preload: options.preload,\n      useInterimTilesOnError: options.useInterimTilesOnError,\n      properties: options.properties,\n    });\n\n    if (options.accessToken) {\n      this.accessToken = options.accessToken;\n    }\n    const url = options.styleUrl;\n    const promises = [\n      applyStyle(this, url, options.layers || options.source, {\n        accessToken: this.accessToken,\n      }),\n    ];\n    if (this.getBackground() === undefined) {\n      promises.push(\n        applyBackground(this, options.styleUrl, {\n          accessToken: this.accessToken,\n        }),\n      );\n    }\n    Promise.all(promises)\n      .then(() => {\n        source.setState('ready');\n      })\n      .catch((error) => {\n        this.dispatchEvent(new ErrorEvent(error));\n        const source = this.getSource();\n        source.setState('error');\n      });\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t76: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkol_mapbox_style\"] = self[\"webpackChunkol_mapbox_style\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));"],"names":["deferred","UnitBezier","p1x","p1y","p2x","p2y","this","cx","bx","ax","cy","by","ay","module","exports","prototype","sampleCurveX","t","sampleCurveY","sampleCurveDerivativeX","solveCurveX","x","epsilon","t0","t1","t2","x2","i","Math","abs","d2","solve","kCSSColorTable","clamp_css_byte","round","clamp_css_float","f","parse_css_int","str","length","parseFloat","parseInt","parse_css_float","css_hue_to_rgb","m1","m2","h","css_str","iv","replace","toLowerCase","slice","substr","op","indexOf","ep","fname","params","split","alpha","pop","s","l","e","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","black","fat","poster","sp","italicRE","fontCache","fonts","size","lineHeight","cssData","Array","isArray","haveWeight","haveStyle","weight","style","fontFamilies","ii","parts","maybeWeight","w","test","previousPart","startsWith","fontFamily","join","push","assert","m","err","AssertionError","Error","captureStackTrace","name","Property","CollectionEvent","constructor","type","element","index","super","Collection","array","options","on","once","un","unique_","unique","array_","assertUnique_","updateLength_","clear","getLength","extend","arr","forEach","getArray","item","get","insertAt","elem","splice","dispatchEvent","ADD","removeAt","n","remove","prev","REMOVE","setAt","set","except","disposed","dispose","disposeInternal","Feature","geometryOrProperties","id_","undefined","geometryName_","style_","styleFunction_","geometryChangeKey_","addChangeListener","handleGeometryChanged_","geometry","setGeometry","properties","setProperties","clone","hasProperties","getProperties","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","changed","CHANGE","obj","styles","createStyleFunction","setId","id","removeChangeListener","ImageWrapper","extent","resolution","pixelRatio","stateOrLoader","pixelRatio_","state","IDLE","image_","loader","getExtent","getImage","getPixelRatio","getResolution","getState","load","LOADING","requestResolution","then","image","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","LOADED","catch","error","ERROR","console","finally","setImage","setResolution","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","LOAD","src","decode","decodeFallback","Promise","resolve","reject","complete","width","handleLoad","unlisten","handleError","removeEventListener","addEventListener","EMPTY","ImageTile","tileCoord","crossOrigin","tileLoadFunction","crossOrigin_","src_","key","Image","unlisten_","tileLoadFunction_","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","canvas","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","bind","MapRenderer","Disposable","map","map_","dispatchRenderEvent","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","rotation","center","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","managed","feature","layer","call","projection","translatedCoordinate","offsets","canWrapX","projectionExtent","worldWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","distanceSq","sort","a","b","some","hasFeatureAtCoordinate","getMap","renderFrame","scheduleExpireIconCache","canExpireCache","postRenderFunctions","expireIconCache","expire","Map","fontChangeListenerKey_","ObjectEventType","PROPERTYCHANGE","redrawText","element_","document","createElement","position","height","zIndex","className","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","hasListener","event","display","PRECOMPOSE","BaseVector","getDeclutter","declutter","renderedLayerStates","previousElement","layerIndex","sourceState","getSourceState","unrender","render","POSTCOMPOSE","renderDeclutter","renderDeferred","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","TOUCHMOVE","passive","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","pointerId","target","Object","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","defineProperty","writable","value","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","Control","pointerEvents","target_","setTarget","setMap","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","String","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","layers","getAllLayers","visibleAttributions","from","Set","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","attributions","all","attribution","visible","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","compassClassName","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","getRotation","PI","animate","easing","setRotation","transform","contains","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","Interaction","handleEvent","setActive","getActive","mapBrowserEvent","active","zoomByDelta","anchor","newResolution","getResolutionForZoom","delta_","stopEvent","browserEvent","shiftKey","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","var_args","conditions","arguments","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroid","update","adjustCenterInternal","begin","end","distance","getDistance","angle","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","dest","getCoordinateFromPixelInternal","cos","sin","animateInternal","getConstrainedCenter","endInteraction","lastAngle_","getConstraints","getSize","offset","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","min","top","getOverlayContainer","removeChild","setPixels","createOrUpdateGeometry","setCoordinates","Polygon","DragBoxEventType","DragBoxEvent","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","scale","fitInternal","defaultCondition_","pixelDelta_","pixelDelta","KEYDOWN","keyEvent","Key","mapUnitsDelta","deltaX","deltaY","currentCenter","pan","platformModifierKey","KEYPRESS","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","y","Date","now","lastIndex","firstIndex","dx","dy","sqrt","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","WHEEL","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","getConstrainResolution","adjustZoom","timeLeft","max","handleWheelZoom_","setMouseAnchor","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","removeLayerMapProperty","Layer","setMapInternal","getLayers","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotate","rotateOptions","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","CollectionEventType","addOverlayInternal_","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","getTarget","getProjection","getOverlayById","setLayers","group","collection","getLoadingOrNotReady","getLayerStatesArray","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","propagationStopped","handlePostRender","tileQueue","isEmpty","maxTotalLoading","maxNewLoads","hints","viewHints","ViewHint","ANIMATING","INTERACTING","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","RENDERCOMPLETE","resolveConstraints","CONTEXTMENU","unobserve","ShadowRoot","host","setSize","Composite","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","Group","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","isDef","getHints","usedTiles","wantedTiles","mapId","renderTargets","nextCenter","nextResolution","isNaN","nextRotation","nextExtent","apply","getCount","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","offsetHeight","getClientRects","oldSize","setViewportSize","ObjectEvent","oldValue","BaseObject","values_","hasOwnProperty","getKeys","keys","assign","getPropertiesInternal","notify","listener","silent","applyProperties","unset","Observable","revision_","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","Tile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getTileCoord","getAlpha","start","inTransition","endTransition","DROP","Infinity","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","EventType","TileState","tileKey","newLoads","log","TileRange","minX","maxX","minY","maxY","containsXY","containsTileRange","tileRange","equals","getHeight","getWidth","intersects","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","cappedMaxRes","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","capped","z","floor","createSnapToResolutions","defaultMaxResolution","degrees","getMetersPerUnit","pow","defaultMinResolution","defaultMaxZoom","power","tolerance","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createRotationConstraint","constraints_","setCenterInternal","oldPadding","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","args","animationCount","animationCallback","series","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","jj","NaN","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","currentResolution","getCenter","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","getType","userProjection","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustResolution","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","linearFindNearest","candidate","reverseSubArray","tmp","data","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assertion","errorMessage","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","rgb","_xyz","white","r","g","arg","o","_u","_v","u","v","xn","yn","zn","luv","vn","yr","lchuv","hr","c","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","cstr","space","base","exec","dims","trim","shift","baseHues","endsWith","match","hsl","t3","val","asString","color","MAX_CACHE_SIZE","cache","cacheSize","withAlpha","output","rgbaToLcha","lchaToRgba","fromString","raw","Number","parsed","normalize","asArray","asColorLike","pattern","getPattern","cacheKey","canvasPattern","iconImage","getImageState","patternCanvasContext","drawImage","asCanvasPattern","levels","info","warn","level","coordinate1","coordinate2","wrapX","worldsAway","sourceExtentWidth","getWorldsAway","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","variant","families","family","createCanvasContext2D","canvasPool","settings","OffscreenCanvas","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeChildren","node","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","easeIn","easeOut","inAndOut","linear","listen","originalListener","eventsKey","listenOnce","unlistenByKey","BLUR","CLEAR","DRAGENTER","DRAGOVER","FOCUS","RESIZE","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","evt","dispatching","pendingRemovals","propagate","pr","getListeners","boundingExtent","extendCoordinate","buffer","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","createEmpty","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getForViewAndSize","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getRotatedViewport","getIntersection","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","GeometryCollection","Geometry","geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","closestPointXY","closestPoint","minSquaredDistance","computeExtent","getGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","simplifiedGeometry","intersectsExtent","sx","sy","setGeometries","setGeometriesArray","translate","defaultFeatureProjection","featureClass","supportedMediaTypes","getReadOptions","getUnits","setWorldExtent","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformed","fromProjection","toProjection","decimals","GeometryConstructor","Point","LineString","MultiPoint","MultiLineString","MultiPolygon","createRenderFeature","object","flat","geometryType","layout","ends","orient","orientFlatCoordinates","enableSimplifyTransformed","createGeometry","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","readGeometryInternal","readPointGeometry","readLineStringGeometry","deflate","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","getCoordinates","writePointGeometry","writeLineStringGeometry","right","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","featureObject","geometryObject","crs","objects","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","toPromise","getter","promiseGetter","tmpTransform","extent_","extentRevision_","simplifyTransformedInternal","revision","simplifyTransformed","coord","getClosestPoint","point","intersectsCoordinate","simplify","destination","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","flatMidpoint_","flatMidpointRevision_","maxDeltaRevision_","setFlatCoordinates","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","extrapolate","getCoordinateAt","getFlatMidpoint","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","setLayout","ends_","lineStrings","getLayout","appendLineString","multiLineString","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","appendPoint","multiPoint","squaredDistance","getPoint","getPoints","points","endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","polygons","thisEndss","polygon","appendPolygon","newEndss","multiPolygon","getOrientedFlatCoordinates","getEndss","getFlatInteriorPoints","flatCenters","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","getPolygons","lastEnds","LinearRing","SimpleGeometry","inflate","flatInteriorPointRevision_","flatInteriorPoint_","appendLinearRing","linearRing","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","fromExtent","getFirstCoordinate","getLastCoordinate","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","twiceArea","dx1","dy1","dx2","dy2","linearRingss","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","getInteriorPointOfArray","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","interpolatePoint","dimension","cumulativeLengths","lineStringCoordinateAtM","lo","hi","m0","lineStringsCoordinateAtM","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","lineStringLength","linearRingIsClockwise","edge","linearRingsAreOriented","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","inflateEnds","startOrientation","prevEndIndex","orientation","ret","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","snap","quantize","quantizeArray","quantizeMultiArray","transform2D","anchorX","anchorY","k","ua","navigator","userAgent","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","self","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","BaseLayer","background_","background","OPACITY","opacity","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","state_","getBackground","getClassName","getLayerState","getZIndex","getOpacity","getVisible","getLayersArray","states","EXTENT","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","newParsingContext","variables","featureId","encoded","expectedType","returnType","parser","parsers","parseCallExpression","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","createCallExpressionParser","hasArgsCount","argsCount","withNoArgs","withArgsOfType","withArgsOfReturnType","hasEvenArgs","inputType","input","fallback","message","interpolationType","interpolation","stop","operation","argCount","needleType","colors","parsedColors","minArgs","maxArgs","expression","argType","validators","computeGeometryType","substring","buildExpression","compileExpression","colorValue","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","atan","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","declutterMode","optionalDeclutterMode","text","Text","setText","setFill","setBackgroundFill","setStroke","setBackgroundStroke","setFont","setMaxAngle","setOffsetX","setOffsetY","setOverflow","placement","setPlacement","setRepeat","setScale","setRotateWithView","textAlign","setTextAlign","justify","setJustify","textBaseline","setTextBaseline","setPadding","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","property","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","icon","Icon","setDisplacement","setAnchor","buildIcon","pointsName","radiusName","requireNumber","radius","radius2","shape","RegularShape","buildShape","evaluateRadius","circle","Circle","setRadius","buildCircle","buildImage","evaluateZIndex","Style","empty","fill","stroke","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","Fill","setColor","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","Stroke","setWidth","lineCap","setLineCap","lineJoin","setLineJoin","setLineDash","setLineDashOffset","setMiterLimit","requireSize","BaseVectorLayer","baseOptions","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getFeatures","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","setRenderOrder","renderOrder","styleLike","toStyleLike","GroupEvent","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","pos","ownLayerState","defaultZIndex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","SOURCE","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","getData","isVisible","getMapInternal","find","layerExtent","inView","prepareFrame","MAP","arrayLayerState","createRenderer","PRELOAD","USE_INTERIM_TILES_ON_ERROR","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","opacity_","renderWorlds","executorGroup","declutterable","vectorSource","getLayer","snapToPixel","endWorld","world","getRenderTransform","execute","setDrawContext_","resetDrawContext_","globalAlpha","renderDeferredInternal","restore","prepareContainer","replayGroup","PRERENDER","POSTRENDER","preRender","clipUnrotated","postRender","transforms","featureCallback","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","userTransform","userExtent","loadFeatures","styleFunction","dirty","renderFeature","getFeaturesInExtent","replayGroupInstructions","finish","ExecutorGroup","getOverlaps","builderGroup","VectorLayer","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedOpacity_","tmpTransform_","tileClipContexts_","drawTile","updateExecutorGroup_","tileImageNeedsRender_","renderTileImage_","getTile","getOrCreateTile","wantedResolution","layerRevision","renderedTiles","builderState","getReplayState","renderedResolution","renderedRevision","renderedRenderOrder","sourceTileGrid","getTileGrid","tileExtent","getTileGridForProjection","getTileCoordExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","tempExtent","bufferedExtent","executorGroupInstructions","replayExtent","getRenderMode","renderingReplayGroup","tileGrid","hitExtent","declutteredFeatures","renderedProjection","getTileCoordForCoordAndResolution","loadingSourceTiles","tilePixel","reduce","accumulator","tileSize","getTileSize","getZForResolution","zDirection","getTileCoordCenter","tileCache","getTileCache","tileFeatures","hifi","tiles","getTileRenderTransform","acc","executorGroupZIndexContexts","getDeferredZIndexContexts","usedZIndices","executorGroupZindexContext","zIndexContexts","zIndexContext","getRenderedContext","tileClipContext","draw","worldOffset","inversePixelTransform","renderMode","replayTypes","tileSource","clips","clipZs","tileClipContexts","hasExecutors","currentZ","contextSaved","currentClip","getClipCoords","clipContext","ZIndexContext","clip","save","beginPath","moveTo","lineTo","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","getTilePixelSize","renderScale","canvasTransform","setTransform","pixelScale","VectorTileLayer","preload","useInterimTilesOnError","cacheSize_","renderMode_","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","bbox","clamp","squaredSegmentDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","modulo","lerp","toFixed","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","Projection","code","units","global","worldExtent","getPointResolution","cosh","PROJECTIONS","METERS_PER_UNIT","EPSG4326Projection","axisOrientation","metersPerUnit","sourceCode","getCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","projectionLike","pointResolution","getPointResolutionFunc","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","fromLonLat","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","transformExtent","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","projections2","forwardTransform","inverseTransform","exp","code_","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setGetPointResolution","RenderEvent","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","squaredTolerance_","stride_","simplifiedGeometry_","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","available","referenceFont","measureTextWidth","check","done","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","body","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","contextInstructions","executeLabelInstructions","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CUSTOM","endGeometry","BEGIN_GEOMETRY","reverseHitDetectionInstructions","reverse","instruction","END_GEOMETRY","fillStyleColor","getColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","lineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","createFill","fillInstruction","SET_FILL_STYLE","applyStroke","createStroke","SET_STROKE_STYLE","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","DRAW_IMAGE","filteredFlatCoordinates","sharedData","getAnchor","origin","getOrigin","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","MOVE_TO_LINE_TO","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","CIRCLE","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","maxAngle","segmentM","advance","beginX","beginY","startOffset","startLength","endM","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p1","p2","p3","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","line","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","fillStates","strokeStates","textStates","widths_","labels_","zIndexContext_","getZIndexContext","createLabel","textKey","fillKey","strokeKey","strokeState","fillState","textState","strokeWidth","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","strokeInstruction","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","box","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","baseline","execute_","declutterTree","pixelCoordinates","dd","prevX","prevY","roundX","roundY","d","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","BEGIN_PATH","arc","CLOSE_PATH","closePath","rotateWithView","labelWithAnchor","textOffsetX","textOffsetY","geometryWidths","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","collides","insert","DRAW_CHARS","measurePixelRatio","pixelRatioScale","textScale","cachedWidths","pathLength","textLength","drawChars","cc","part","FILL","STROKE","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","executors","instructionByZindex","candidates","contextSize","newContext","willReadFrequently","indexes","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","getImageData","idx","zs","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","pushFunction","deferredZIndexContexts","Instruction","beginPathInstruction","closePathInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","CanvasTextBuilder","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","textStrokeState_","textState_","textKey_","fillKey_","strokeKey_","beg","keep","saveTextStates_","p0","p","repeat","flatOffset","oo","chunk","chunkBegin","range","drawChars_","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","getOffsetX","getOffsetY","textRotateWithView","textRotation","getText","instructions_","offset_","context_","Proxy","pushMethodArgs_","instructionsAtIndex","instructionAtIndex","CanvasImmediateRenderer","VectorContext","transform_","transformRotation_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometryFunction","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","getImageSize","imgContext","getScale","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","getStaleKeys","prependStaleKey","unshift","ImageState","loadImage","imageState","pixelContext","tempTransform","pixelTransform","deferredContext_","containerReused","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","getRenderContext","asImageLike","disposedError","sharedContext","defaultSize","DataTile","loader_","data_","error_","size_","controller_","controller","getError","abort","Uint8ClampedArray","gutter_","reprojData_","reprojError_","reprojSize_","sourceTileGrid_","targetTileGrid_","targetTileGrid","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","sourceProjExtent","sourceTileGridExtent","clipExtent_","targetExtent","maxTargetExtent","maxSourceExtent","limitedTargetExtent","targetProj","errorThresholdInPixels","errorThreshold","triangulation_","Triangulation","getTriangles","sourceExtent","calculateSourceExtent","sourceRange","getTileRangeForExtentAndZ","getTileFunction","srcX","srcY","reproject_","dataSources","imageLike","tileData","arrayData","Uint8Array","Float32Array","DataView","toArray","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","clipExtent","dataType","targetWidth","targetHeight","dataR","dataU","reproj","sources","dataSource","createImageData","putImageData","ImageData","leftToLoad","sourceListenKey","unlistenSources_","getCacheKey","sourceKey","addTileToLookup","tilesByZ","existing","has","removeTileFromLookup","delete","getRenderExtent","gridExtent","CanvasTileLayerRenderer","tileLayer","extentChanged","renderComplete","renderedPixelRatio","renderedSourceKey_","renderedSourceRevision_","tempTileRange_","tempTileCoord_","tileCache_","LRUCache","containsKey","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getGutterForProjection","sourceRevision","enqueueTiles","initialZ","minZ","tileQueueKey","findStaleTile_","staleKeys","findAltTiles_","altZ","getTileRangeForTileCoordAndZ","covered","viewResolution","viewCenter","frameExtent","canvasExtent","targetZ","renderExtent","uid","tileState","parentZ","canvasScale","getInterpolate","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","xIndex","nextX","yIndex","nextY","updateUsedTiles","tilesCount","updateCacheSize","expireCache","tileCount","highWaterMark","getTileImage","alphaChanged","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","hasImage","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","loadingPromises","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","compensationFactor","calculateSourceExtentResolution","triangulation","renderEdges","drawSingle","pixelRound","globalCompositeOperation","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","ReprojTile","renderEdges_","canvas_","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","ERROR_THRESHOLD","createSnapToN","createSnapToZero","hasArea","toSize","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","attributionLike","maxEntries","rbush_","items_","extents","items","getAll","getInExtent","search","forEach_","forEachInExtent","toJSON","rbush","VectorSourceEvent","Event","VectorSource","format_","url_","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removeFeatures","removed","featureChangeKeys","idString","setLoader","setUrl","count_","entries_","oldest_","newest_","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","CircleStyle","displacement","getRadius","getDisplacement","patternImage_","color_","patternImage","calculateScale","wantedWidth","wantedHeight","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","iconImage_","offsetOrigin_","origin_","initialOptions_","unlistenImageChange","listenImageChange","getSrc","iconImageSize","taintedTestContext","IconImage","imageState_","tainted_","ready_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","onChange","shared","cache_","patternCache_","maxCacheSize_","createPattern","maxCacheSize","ImageStyle","scaleArray_","displacement_","canvases_","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getRadius2","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","createDefaultStyle","font_","textAlign_","justify_","repeat_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","getKeyZXY","getCacheKeyForTileKey","fromKey","hash","withinExtentAndZ","getFullTileRange","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","tmp_","create","reset","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","e2","f2","setFromArray","compose","makeInverse","det","matrixPrecision","abstract","uidCounter_","getUid","ol_uid","quickselect","quickselectStep","defaultCompare","sd","swap","RBush","_maxEntries","_minEntries","_all","toBBox","nodesToSearch","child","childBBox","leaf","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","goingUp","findItem","_condense","compareMinX","compareMinY","fromJSON","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","rgba","toArray01","toArray01PremultipliedAlpha","transparent","convertLiteral","getInterpolateOperator","parameters","colorSpace","getFallback","propertySpec","defaultValue","default","convertPropertyFunction","getFunctionType","appendStopPair","fixupDegenerateStepCurve","curve","isStep","interpolated","convertTokenString","re","literal","ParsingError","Scope","bindings","NullType","kind","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","itemType","valueMemberTypes","checkSubtype","memberType","isValidType","provided","allowedTypes","isValidNativeType","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","fontStack","textColor","sections","unformatted","section","factory","serialize","serialized","validateRGBA","isValue","mixed","typeOf","Literal","evaluate","eachChild","outputDefined","types","string","number","boolean","Assertion","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","Coercion","parseColor","num","geometryTypes","globals","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","canonicalID","distanceFromCenter","dX","dY","bearing","cached","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","signature","signatureContext","registry","scope","parsedArgs","argParseFailed","errors","signatures","stringifySignature","actualTypes","register","CollatorExpression","updateBBox","boxWithinBox","getTileCoordinates","lat","tilesAtZoom","onBoundary","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","twoSided","q1","q2","det1","det2","lineIntersectLine","vectorP","lineIntersectPolygon","lineStringWithinPolygon","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","Within","geojson","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","isStateConstant","isGlobalPropertyConstant","boundExpression","ParsingContext","expr","_parse","annotate","typeAnnotation","Expr","actual","isConstant","ec","isTypeAnnotation","childrenConstant","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labels","outputs","outputType","labelKey","valueKey","stopCount","to","Xn","Zn","deg2rad","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","forward","hcl","hclColor","interpolationFactor","lower","upper","exponentialInterpolation","controlPoints","rest","outputLower","outputUpper","lowerValue","upperValue","difference","needsAnnotation","firstImage","Let","binding","At","IndexOf","fromIndex","cases","otherwise","labelContext","MAX_SAFE_INTEGER","sortedLabels","groupedByOutput","outputLookup","outputIndex","coerceLabel","branches","_","Slice","beginIndex","endIndex","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","rt","Equals","NotEquals","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","unit","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","varargs","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","LN2","LN10","asin","isSupportedScript","toUpperCase","StyleExpression","spec","_warningHistory","_evaluator","_defaultValue","_enumValues","evaluateWithoutErrorHandling","createExpression","enum","formatted","resolvedImage","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","zoomStops","createPropertyExpression","isFeatureConstant","isZoomConstant","zoomCurve","findZoomCurve","childResult","deepUnbundle","unbundledValue","valueOf","unbundle","layerType","needGeometry","needFeature","isExpressionFilter","convertFilter","filterExp","staticFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","extractStaticFilter","filterSpec","latest","compiledStaticFilter","filterFunc","globalProperties","dynamicFilterFunc","compiledDynamicFilter","dynamicFilter","geometryNeeded","dynamicConditionExpressions","collapsedExpression","subExpression","isBranchingDynamically","convertComparisonOp","convertNegation","filters","convertInOp","convertHasOp","deref","derefLayers","ref","VectorTile","features_","onLoad","setFeatures","onError","zRegEx","xRegEx","yRegEx","dashYRegEx","expandUrl","urls","startCharCode","charCodeAt","stopCharCode","charCode","mapboxBaseUrl","getMapboxPath","normalizeStyleUrl","token","mapboxPath","decodeURI","URL","location","href","normalizeSourceUrl","tokenParam","styleUrl","urlObject","searchParams","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","functionCache","defaultResolutions","createCanvas","pendingRequests","fetchResource","resourceType","metadata","request","transformedRequest","transformRequest","pendingRequest","Request","headers","fetch","response","ok","json","getGlStyle","glStyleOrUrl","accessToken","tilejsonCache","getTileJson","glSource","promise","arrayBuffer","blob","createObjectURL","revokeObjectURL","normalizedSourceUrl","accessTokenParam","tileJson","tileUrl","scheme","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imageCanvas","imageContext","smoothstep","drawSDF","gamma","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","fontFamilyRegEx","stripQuotesRegEx","loadedFontFamilies","hasFontFamily","styleSheets","styleSheet","cssRules","cssRule","cssText","processedFontFamilies","expressionData","rawExpression","compiledExpression","emptyObj","zoomObj","renderFeatureCoordinates","getValue","layoutOrPaint","layerId","functions","isExpr","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","tokens","featureFunctionParameters","featureFunctionStops","convertZoomAndPropertyFunction","convertZoomFunction","convertFunction","evaluateFilter","filterCache","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","recordLayer","stylefunction","olLayer","sourceOrLayers","spriteData","spriteImageUrl","getFonts","version","spriteImageSize","spriteImageUnSDFed","blobUrl","worker","postMessage","action","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","onlyLayer","featureBelongsToLayer","stylesLength","layerData","paint","visibility","minzoom","maxzoom","strokeColor","fillIcon","icon_cache_key","iconImg","skipLabel","textLineHeight","textSize","maxTextWidth","placementAngle","styleGeom","imageElement","iconRotationAlignment","geom","xM","dotProduct","iconSize","iconColor","iconCacheKey","iconOptions","sdf","circleRadius","circleStrokeColor","circleTranslate","circleColor","circleStrokeWidth","cache_key","fontArray","textField","chunkFont","textTransform","wrappedLabel","setKeepUpright","keepUpright","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","BaseImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","imageExtent","imageMapWidth","imageMapHeight","imageResolution","imageResolutionX","imageResolutionY","clipped","dw","dh","BaseImage","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","Pbf","buf","ArrayBuffer","isView","dataView","readFields","readField","readVarint","tag","startPos","skip","readMessage","readFixed32","getUint32","readSFixed32","getInt32","readFixed64","readSFixed64","readFloat","getFloat32","readDouble","getFloat64","isSigned","toNum","readVarintRemainder","readVarint64","readSVarint","readBoolean","readString","subarray","b0","b3","bytesPerSequence","readUtf8","readBytes","readPackedVarint","readPackedEnd","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeVarint","realloc","writeFixed32","setInt32","writeSFixed32","writeFixed64","writeSFixed64","pbf","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeSVarint","writeBoolean","writeString","lead","writeUtf8","makeRoomForExtraLength","writeFloat","setFloat32","writeDouble","setFloat64","writeBytes","writeRawMessage","writeMessage","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","extraLen","MVT","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","pbfLayers","layersPBFReader","pbfLayer","readRawFeature","layerPBFReader","featurePBFReader","ImageCanvas","handleLoad_","fromResolutionLike","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","wantedProjection_","setResolutions","findNearestResolution","getImageInternal","requestExtent","requestWidth","requestHeight","getRequestExtent","handleImageChange","BaseTileLayer","getCacheSize","BaseTile","TileCache","pruneExceptNewestZ","tmpTileCoord","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tileCoordExtent","getTileCoordChildTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","getForProjection","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","half","TileSource","tilePixelRatio_","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileCoordForTileUrlFunction","useTile","TileSourceEvent","createMinion","buffers","meta","imageOps","numBuffers","numBytes","images","arrays","pixels","createWorker","config","onMessage","lib","Worker","Blob","Buffer","Processor","threads","imageOps_","workers","onWorkerMessage_","minion","terminated","terminate","createFauxWorker","workers_","queue_","maxQueueLength_","queue","running_","dataLookup_","job_","process","inputs","enqueue_","dispatch_","job","slices","resolveJob_","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","createLayer","createLayers","useResolutions_","processSources_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","sourceAttributions","setOperation","updateFrameState_","allSourcesReady_","imageDatas","onWorkerComplete_","layerOrSource","createFromTemplate","template","renderXYZTemplate","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","tileCoordKey","defaultTileLoadFunction","imageTile","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","tileJSON_","jsonp","errback","callbackParam","script","cleanup","async","timer","head","handleTileJSONResponse","handleTileJSONError","client","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","attributionExtent","VectorRenderTile","replayState_","errorTileKeys","hasContext","renderedTileZ","defaultLoadFunction","sourceTileCache_","tileGrids_","usedSourceTiles","sourceZ","sourceTileState","listenChange","sourceTileKey","hillshade","elevationImage","elevationData","shadeData","dp","twoPi","halfPi","sunEl","sunAz","cosSunEl","sinSunEl","highlightColor","shadowColor","accentColor","encoding","pixelX","pixelY","z0","z1","dzdx","dzdy","aspect","accent","scaled","shade","scaledAccentColor","compositeShadeColor","slopeScaleBase","scaledSlope","cosIncidence","calculateElevation","vert","getTileResolutions","completeOptions","applyStyle","sourceOrLayersOrOptions","optionsOrPath","sourceId","updateSource","Vector","assignSource","setupVectorSource","targetSource","setupGeoJSONSource","spriteScale","sprite","templateUrl","webfonts","fontsKey","fontDescriptions","cssFont","fontDescription","fontUrl","querySelector","markup","rel","normalizeSpriteUrl","sizeFactor","spriteUrl","pathname","spritesJson","applyBackground","mapOrLayer","getBackgroundColor","setupBackgroundLayer","setFirstBackground","getSourceIdByRef","sourceOptionsFromTileJSON","tileJSONSource","tileJSONDoc","bounds","tr","extentFromTileJSON","sourceOptions","glLayer","bg","div","getBboxTemplate","setupRasterLayer","getTileUrl","bboxTemplate","setupRasterSource","geoJsonFormat","GeoJSON","geoJsonUrl","extentUrl","setupLayer","glLayers","setupVectorLayer","updateRasterLayerProperties","prerenderRasterLayer","setupGeoJSONLayer","hillshadeLayer","Raster","setupHillshadeLayer","glSourceId","processStyle","mapOrGroup","promises","layerIds","finalizeLayer","debug","mapOrGroupOrElement","HTMLElement","sourceMinZoom","layerMapboxLayerids","mapboxLayer","manageVisibility","setFeatureState","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","O","chunkIds","notFulfilled","fulfilled","enumerable","prop","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal"],"sourceRoot":""}