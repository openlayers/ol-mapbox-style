{"version":3,"file":"olms.js","sources":["../node_modules/mapbox-to-css-font/index.js","../node_modules/@maplibre/maplibre-gl-style-spec/dist/index.mjs","../src/mapbox.js","../src/util.js","../src/text.js","../src/stylefunction.js","../src/shaders.js","../src/apply.js","../src/MapboxVectorLayer.js"],"sourcesContent":["var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 200,\n  'extra-light': 200,\n  light: 300,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  'extra-bold': 800,\n  'ultra-bold': 800,\n  heavy: 900,\n  black: 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900,\n  'ultra-black': 950,\n  'extra-black': 950\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\nmodule.exports = function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        haveStyle = true;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n        haveStyle = true;\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n        haveWeight = true;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n","var $version = 8;\nvar $root = {\n\tversion: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: [\n\t\t\t8\n\t\t]\n\t},\n\tname: {\n\t\ttype: \"string\"\n\t},\n\tmetadata: {\n\t\ttype: \"*\"\n\t},\n\tcenter: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\"\n\t},\n\tcenterAltitude: {\n\t\ttype: \"number\"\n\t},\n\tzoom: {\n\t\ttype: \"number\"\n\t},\n\tbearing: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\"\n\t},\n\tpitch: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"degrees\"\n\t},\n\troll: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"degrees\"\n\t},\n\tlight: {\n\t\ttype: \"light\"\n\t},\n\tsky: {\n\t\ttype: \"sky\"\n\t},\n\tprojection: {\n\t\ttype: \"projection\"\n\t},\n\tterrain: {\n\t\ttype: \"terrain\"\n\t},\n\tsources: {\n\t\trequired: true,\n\t\ttype: \"sources\"\n\t},\n\tsprite: {\n\t\ttype: \"sprite\"\n\t},\n\tglyphs: {\n\t\ttype: \"string\"\n\t},\n\ttransition: {\n\t\ttype: \"transition\"\n\t},\n\tlayers: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tvalue: \"layer\"\n\t}\n};\nvar sources = {\n\t\"*\": {\n\t\ttype: \"source\"\n\t}\n};\nvar source = [\n\t\"source_vector\",\n\t\"source_raster\",\n\t\"source_raster_dem\",\n\t\"source_geojson\",\n\t\"source_video\",\n\t\"source_image\"\n];\nvar source_vector = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvector: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tscheme: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\txyz: {\n\t\t\t},\n\t\t\ttms: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"xyz\"\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tpromoteId: {\n\t\ttype: \"promoteId\"\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_raster = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\traster: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\ttileSize: {\n\t\ttype: \"number\",\n\t\t\"default\": 512,\n\t\tunits: \"pixels\"\n\t},\n\tscheme: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\txyz: {\n\t\t\t},\n\t\t\ttms: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"xyz\"\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_raster_dem = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\t\"raster-dem\": {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\ttileSize: {\n\t\ttype: \"number\",\n\t\t\"default\": 512,\n\t\tunits: \"pixels\"\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tencoding: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tterrarium: {\n\t\t\t},\n\t\t\tmapbox: {\n\t\t\t},\n\t\t\tcustom: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"mapbox\"\n\t},\n\tredFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tblueFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tgreenFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tbaseShift: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_geojson = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tgeojson: {\n\t\t\t}\n\t\t}\n\t},\n\tdata: {\n\t\trequired: true,\n\t\ttype: \"*\"\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 18\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tbuffer: {\n\t\ttype: \"number\",\n\t\t\"default\": 128,\n\t\tmaximum: 512,\n\t\tminimum: 0\n\t},\n\tfilter: {\n\t\ttype: \"*\"\n\t},\n\ttolerance: {\n\t\ttype: \"number\",\n\t\t\"default\": 0.375\n\t},\n\tcluster: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tclusterRadius: {\n\t\ttype: \"number\",\n\t\t\"default\": 50,\n\t\tminimum: 0\n\t},\n\tclusterMaxZoom: {\n\t\ttype: \"number\"\n\t},\n\tclusterMinPoints: {\n\t\ttype: \"number\"\n\t},\n\tclusterProperties: {\n\t\ttype: \"*\"\n\t},\n\tlineMetrics: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tgenerateId: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tpromoteId: {\n\t\ttype: \"promoteId\"\n\t}\n};\nvar source_video = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvideo: {\n\t\t\t}\n\t\t}\n\t},\n\turls: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tcoordinates: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tlength: 4,\n\t\tvalue: {\n\t\t\ttype: \"array\",\n\t\t\tlength: 2,\n\t\t\tvalue: \"number\"\n\t\t}\n\t}\n};\nvar source_image = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\timage: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\trequired: true,\n\t\ttype: \"string\"\n\t},\n\tcoordinates: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tlength: 4,\n\t\tvalue: {\n\t\t\ttype: \"array\",\n\t\t\tlength: 2,\n\t\t\tvalue: \"number\"\n\t\t}\n\t}\n};\nvar layer = {\n\tid: {\n\t\ttype: \"string\",\n\t\trequired: true\n\t},\n\ttype: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tfill: {\n\t\t\t},\n\t\t\tline: {\n\t\t\t},\n\t\t\tsymbol: {\n\t\t\t},\n\t\t\tcircle: {\n\t\t\t},\n\t\t\theatmap: {\n\t\t\t},\n\t\t\t\"fill-extrusion\": {\n\t\t\t},\n\t\t\traster: {\n\t\t\t},\n\t\t\thillshade: {\n\t\t\t},\n\t\t\tbackground: {\n\t\t\t}\n\t\t},\n\t\trequired: true\n\t},\n\tmetadata: {\n\t\ttype: \"*\"\n\t},\n\tsource: {\n\t\ttype: \"string\"\n\t},\n\t\"source-layer\": {\n\t\ttype: \"string\"\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\tmaximum: 24\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\tmaximum: 24\n\t},\n\tfilter: {\n\t\ttype: \"filter\"\n\t},\n\tlayout: {\n\t\ttype: \"layout\"\n\t},\n\tpaint: {\n\t\ttype: \"paint\"\n\t}\n};\nvar layout = [\n\t\"layout_fill\",\n\t\"layout_line\",\n\t\"layout_circle\",\n\t\"layout_heatmap\",\n\t\"layout_fill-extrusion\",\n\t\"layout_symbol\",\n\t\"layout_raster\",\n\t\"layout_hillshade\",\n\t\"layout_background\"\n];\nvar layout_background = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_fill = {\n\t\"fill-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_circle = {\n\t\"circle-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_heatmap = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_line = {\n\t\"line-cap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tbutt: {\n\t\t\t},\n\t\t\tround: {\n\t\t\t},\n\t\t\tsquare: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"butt\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-join\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tbevel: {\n\t\t\t},\n\t\t\tround: {\n\t\t\t},\n\t\t\tmiter: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"miter\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-miter-limit\": {\n\t\ttype: \"number\",\n\t\t\"default\": 2,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"line-join\": \"miter\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-round-limit\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1.05,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"line-join\": \"round\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_symbol = {\n\t\"symbol-placement\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tpoint: {\n\t\t\t},\n\t\t\tline: {\n\t\t\t},\n\t\t\t\"line-center\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"point\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-spacing\": {\n\t\ttype: \"number\",\n\t\t\"default\": 250,\n\t\tminimum: 1,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"symbol-placement\": \"line\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-avoid-edges\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"symbol-z-order\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tauto: {\n\t\t\t},\n\t\t\t\"viewport-y\": {\n\t\t\t},\n\t\t\tsource: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-allow-overlap\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t{\n\t\t\t\t\"!\": \"icon-overlap\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-overlap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnever: {\n\t\t\t},\n\t\t\talways: {\n\t\t\t},\n\t\t\tcooperative: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-ignore-placement\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-optional\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-rotation-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-size\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tunits: \"factor of the original icon size\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-text-fit\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnone: {\n\t\t\t},\n\t\t\twidth: {\n\t\t\t},\n\t\t\theight: {\n\t\t\t},\n\t\t\tboth: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"none\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-text-fit-padding\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"icon-text-fit\": [\n\t\t\t\t\t\"both\",\n\t\t\t\t\t\"width\",\n\t\t\t\t\t\"height\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-image\": {\n\t\ttype: \"resolvedImage\",\n\t\ttokens: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-padding\": {\n\t\ttype: \"padding\",\n\t\t\"default\": [\n\t\t\t2\n\t\t],\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-keep-upright\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t{\n\t\t\t\t\"icon-rotation-alignment\": \"map\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-offset\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-rotation-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\t\"viewport-glyph\": {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-field\": {\n\t\ttype: \"formatted\",\n\t\t\"default\": \"\",\n\t\ttokens: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-font\": {\n\t\ttype: \"array\",\n\t\tvalue: \"string\",\n\t\t\"default\": [\n\t\t\t\"Open Sans Regular\",\n\t\t\t\"Arial Unicode MS Regular\"\n\t\t],\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-size\": {\n\t\ttype: \"number\",\n\t\t\"default\": 16,\n\t\tminimum: 0,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-max-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 10,\n\t\tminimum: 0,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-line-height\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1.2,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-letter-spacing\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-justify\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tauto: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-radial-offset\": {\n\t\ttype: \"number\",\n\t\tunits: \"ems\",\n\t\t\"default\": 0,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\t\"property-type\": \"data-driven\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t}\n\t},\n\t\"text-variable-anchor\": {\n\t\ttype: \"array\",\n\t\tvalue: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-variable-anchor-offset\": {\n\t\ttype: \"variableAnchorOffsetCollection\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-variable-anchor\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-max-angle\": {\n\t\ttype: \"number\",\n\t\t\"default\": 45,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-writing-mode\": {\n\t\ttype: \"array\",\n\t\tvalue: \"enum\",\n\t\tvalues: {\n\t\t\thorizontal: {\n\t\t\t},\n\t\t\tvertical: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-padding\": {\n\t\ttype: \"number\",\n\t\t\"default\": 2,\n\t\tminimum: 0,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-keep-upright\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"text-rotation-alignment\": \"map\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-transform\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnone: {\n\t\t\t},\n\t\t\tuppercase: {\n\t\t\t},\n\t\t\tlowercase: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"none\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-offset\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tunits: \"ems\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-radial-offset\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-allow-overlap\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-overlap\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-overlap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnever: {\n\t\t\t},\n\t\t\talways: {\n\t\t\t},\n\t\t\tcooperative: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-ignore-placement\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-optional\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_raster = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_hillshade = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar filter = {\n\ttype: \"array\",\n\tvalue: \"*\"\n};\nvar filter_operator = {\n\ttype: \"enum\",\n\tvalues: {\n\t\t\"==\": {\n\t\t},\n\t\t\"!=\": {\n\t\t},\n\t\t\">\": {\n\t\t},\n\t\t\">=\": {\n\t\t},\n\t\t\"<\": {\n\t\t},\n\t\t\"<=\": {\n\t\t},\n\t\t\"in\": {\n\t\t},\n\t\t\"!in\": {\n\t\t},\n\t\tall: {\n\t\t},\n\t\tany: {\n\t\t},\n\t\tnone: {\n\t\t},\n\t\thas: {\n\t\t},\n\t\t\"!has\": {\n\t\t}\n\t}\n};\nvar geometry_type = {\n\ttype: \"enum\",\n\tvalues: {\n\t\tPoint: {\n\t\t},\n\t\tLineString: {\n\t\t},\n\t\tPolygon: {\n\t\t}\n\t}\n};\nvar function_stop = {\n\ttype: \"array\",\n\tminimum: 0,\n\tmaximum: 24,\n\tvalue: [\n\t\t\"number\",\n\t\t\"color\"\n\t],\n\tlength: 2\n};\nvar expression$1 = {\n\ttype: \"array\",\n\tvalue: \"*\",\n\tminimum: 1\n};\nvar light = {\n\tanchor: {\n\t\ttype: \"enum\",\n\t\t\"default\": \"viewport\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t},\n\tposition: {\n\t\ttype: \"array\",\n\t\t\"default\": [\n\t\t\t1.15,\n\t\t\t210,\n\t\t\t30\n\t\t],\n\t\tlength: 3,\n\t\tvalue: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t},\n\tcolor: {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\tintensity: {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t}\n};\nvar sky = {\n\t\"sky-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#88C6FC\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"horizon-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"fog-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"fog-ground-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"horizon-fog-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"sky-horizon-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"atmosphere-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t}\n};\nvar terrain = {\n\tsource: {\n\t\ttype: \"string\",\n\t\trequired: true\n\t},\n\texaggeration: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\t\"default\": 1\n\t}\n};\nvar projection = {\n\ttype: {\n\t\ttype: \"projectionDefinition\",\n\t\t\"default\": \"mercator\",\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t}\n};\nvar paint = [\n\t\"paint_fill\",\n\t\"paint_line\",\n\t\"paint_circle\",\n\t\"paint_heatmap\",\n\t\"paint_fill-extrusion\",\n\t\"paint_symbol\",\n\t\"paint_raster\",\n\t\"paint_hillshade\",\n\t\"paint_background\"\n];\nvar paint_fill = {\n\t\"fill-antialias\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-outline-color\": {\n\t\ttype: \"color\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-pattern\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"fill-antialias\": true\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"fill-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t}\n};\nvar paint_line = {\n\t\"line-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"line-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-gap-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-offset\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-dasharray\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"line widths\",\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded\"\n\t},\n\t\"line-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t},\n\t\"line-gradient\": {\n\t\ttype: \"color\",\n\t\ttransition: false,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-dasharray\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsource: \"geojson\",\n\t\t\t\thas: {\n\t\t\t\t\tlineMetrics: true\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"line-progress\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"color-ramp\"\n\t}\n};\nvar paint_circle = {\n\t\"circle-radius\": {\n\t\ttype: \"number\",\n\t\t\"default\": 5,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"circle-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-pitch-scale\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"viewport\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-stroke-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-stroke-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-stroke-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t}\n};\nvar paint_heatmap = {\n\t\"heatmap-radius\": {\n\t\ttype: \"number\",\n\t\t\"default\": 30,\n\t\tminimum: 1,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"heatmap-weight\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"heatmap-intensity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"heatmap-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": [\n\t\t\t\"interpolate\",\n\t\t\t[\n\t\t\t\t\"linear\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"heatmap-density\"\n\t\t\t],\n\t\t\t0,\n\t\t\t\"rgba(0, 0, 255, 0)\",\n\t\t\t0.1,\n\t\t\t\"royalblue\",\n\t\t\t0.3,\n\t\t\t\"cyan\",\n\t\t\t0.5,\n\t\t\t\"lime\",\n\t\t\t0.7,\n\t\t\t\"yellow\",\n\t\t\t1,\n\t\t\t\"red\"\n\t\t],\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"heatmap-density\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"color-ramp\"\n\t},\n\t\"heatmap-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_symbol = {\n\t\"icon-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"rgba(0, 0, 0, 0)\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"icon-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\toverridable: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"rgba(0, 0, 0, 0)\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t\"text-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_raster = {\n\t\"raster-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-hue-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\ttransition: true,\n\t\tunits: \"degrees\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-brightness-min\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-brightness-max\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-saturation\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: -1,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-contrast\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: -1,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-resampling\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tlinear: {\n\t\t\t},\n\t\t\tnearest: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"linear\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-fade-duration\": {\n\t\ttype: \"number\",\n\t\t\"default\": 300,\n\t\tminimum: 0,\n\t\ttransition: false,\n\t\tunits: \"milliseconds\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_hillshade = {\n\t\"hillshade-illumination-direction\": {\n\t\ttype: \"number\",\n\t\t\"default\": 335,\n\t\tminimum: 0,\n\t\tmaximum: 359,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-illumination-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"viewport\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-exaggeration\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-shadow-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-highlight-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#FFFFFF\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-accent-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_background = {\n\t\"background-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"background-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"background-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded\"\n\t},\n\t\"background-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar transition = {\n\tduration: {\n\t\ttype: \"number\",\n\t\t\"default\": 300,\n\t\tminimum: 0,\n\t\tunits: \"milliseconds\"\n\t},\n\tdelay: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"milliseconds\"\n\t}\n};\nvar promoteId = {\n\t\"*\": {\n\t\ttype: \"string\"\n\t}\n};\nvar v8Spec = {\n\t$version: $version,\n\t$root: $root,\n\tsources: sources,\n\tsource: source,\n\tsource_vector: source_vector,\n\tsource_raster: source_raster,\n\tsource_raster_dem: source_raster_dem,\n\tsource_geojson: source_geojson,\n\tsource_video: source_video,\n\tsource_image: source_image,\n\tlayer: layer,\n\tlayout: layout,\n\tlayout_background: layout_background,\n\tlayout_fill: layout_fill,\n\tlayout_circle: layout_circle,\n\tlayout_heatmap: layout_heatmap,\n\t\"layout_fill-extrusion\": {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n},\n\tlayout_line: layout_line,\n\tlayout_symbol: layout_symbol,\n\tlayout_raster: layout_raster,\n\tlayout_hillshade: layout_hillshade,\n\tfilter: filter,\n\tfilter_operator: filter_operator,\n\tgeometry_type: geometry_type,\n\t\"function\": {\n\texpression: {\n\t\ttype: \"expression\"\n\t},\n\tstops: {\n\t\ttype: \"array\",\n\t\tvalue: \"function_stop\"\n\t},\n\tbase: {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0\n\t},\n\tproperty: {\n\t\ttype: \"string\",\n\t\t\"default\": \"$zoom\"\n\t},\n\ttype: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tidentity: {\n\t\t\t},\n\t\t\texponential: {\n\t\t\t},\n\t\t\tinterval: {\n\t\t\t},\n\t\t\tcategorical: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"exponential\"\n\t},\n\tcolorSpace: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\trgb: {\n\t\t\t},\n\t\t\tlab: {\n\t\t\t},\n\t\t\thcl: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"rgb\"\n\t},\n\t\"default\": {\n\t\ttype: \"*\",\n\t\trequired: false\n\t}\n},\n\tfunction_stop: function_stop,\n\texpression: expression$1,\n\tlight: light,\n\tsky: sky,\n\tterrain: terrain,\n\tprojection: projection,\n\tpaint: paint,\n\tpaint_fill: paint_fill,\n\t\"paint_fill-extrusion\": {\n\t\"fill-extrusion-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-extrusion-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"fill-extrusion-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t},\n\t\"fill-extrusion-height\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"meters\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-base\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"meters\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"fill-extrusion-height\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-vertical-gradient\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n},\n\tpaint_line: paint_line,\n\tpaint_circle: paint_circle,\n\tpaint_heatmap: paint_heatmap,\n\tpaint_symbol: paint_symbol,\n\tpaint_raster: paint_raster,\n\tpaint_hillshade: paint_hillshade,\n\tpaint_background: paint_background,\n\ttransition: transition,\n\t\"property-type\": {\n\t\"data-driven\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"cross-faded\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"cross-faded-data-driven\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"color-ramp\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"data-constant\": {\n\t\ttype: \"property-type\"\n\t},\n\tconstant: {\n\t\ttype: \"property-type\"\n\t}\n},\n\tpromoteId: promoteId\n};\n\nconst refProperties = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n\nfunction deref(layer, parent) {\n    const result = {};\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = parent[k];\n        }\n    });\n    return result;\n}\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n    layers = layers.slice();\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[layers[i].ref]);\n        }\n    }\n    return layers;\n}\n\n/**\n * Deeply compares two object literals.\n *\n * @private\n */\nfunction deepEqual(a, b) {\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b) || a.length !== b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            if (!deepEqual(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    if (typeof a === 'object' && a !== null && b !== null) {\n        if (!(typeof b === 'object'))\n            return false;\n        const keys = Object.keys(a);\n        if (keys.length !== Object.keys(b).length)\n            return false;\n        for (const key in a) {\n            if (!deepEqual(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a === b;\n}\n\n/**\n * The main reason for this method is to allow type check when adding a command to the array.\n * @param commands - The commands array to add to\n * @param command - The command to add\n */\nfunction addCommand(commands, command) {\n    commands.push(command);\n}\nfunction addSource(sourceId, after, commands) {\n    addCommand(commands, { command: 'addSource', args: [sourceId, after[sourceId]] });\n}\nfunction removeSource(sourceId, commands, sourcesRemoved) {\n    addCommand(commands, { command: 'removeSource', args: [sourceId] });\n    sourcesRemoved[sourceId] = true;\n}\nfunction updateSource(sourceId, after, commands, sourcesRemoved) {\n    removeSource(sourceId, commands, sourcesRemoved);\n    addSource(sourceId, after, commands);\n}\nfunction canUpdateGeoJSON(before, after, sourceId) {\n    let prop;\n    for (prop in before[sourceId]) {\n        if (!Object.prototype.hasOwnProperty.call(before[sourceId], prop))\n            continue;\n        if (prop !== 'data' && !deepEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    for (prop in after[sourceId]) {\n        if (!Object.prototype.hasOwnProperty.call(after[sourceId], prop))\n            continue;\n        if (prop !== 'data' && !deepEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction diffSources(before, after, commands, sourcesRemoved) {\n    before = before || {};\n    after = after || {};\n    let sourceId;\n    // look for sources to remove\n    for (sourceId in before) {\n        if (!Object.prototype.hasOwnProperty.call(before, sourceId))\n            continue;\n        if (!Object.prototype.hasOwnProperty.call(after, sourceId)) {\n            removeSource(sourceId, commands, sourcesRemoved);\n        }\n    }\n    // look for sources to add/update\n    for (sourceId in after) {\n        if (!Object.prototype.hasOwnProperty.call(after, sourceId))\n            continue;\n        if (!Object.prototype.hasOwnProperty.call(before, sourceId)) {\n            addSource(sourceId, after, commands);\n        }\n        else if (!deepEqual(before[sourceId], after[sourceId])) {\n            if (before[sourceId].type === 'geojson' && after[sourceId].type === 'geojson' && canUpdateGeoJSON(before, after, sourceId)) {\n                addCommand(commands, { command: 'setGeoJSONSourceData', args: [sourceId, after[sourceId].data] });\n            }\n            else {\n                // no update command, must remove then add\n                updateSource(sourceId, after, commands, sourcesRemoved);\n            }\n        }\n    }\n}\nfunction diffLayerPropertyChanges(before, after, commands, layerId, klass, command) {\n    before = before || {};\n    after = after || {};\n    for (const prop in before) {\n        if (!Object.prototype.hasOwnProperty.call(before, prop))\n            continue;\n        if (!deepEqual(before[prop], after[prop])) {\n            commands.push({ command, args: [layerId, prop, after[prop], klass] });\n        }\n    }\n    for (const prop in after) {\n        if (!Object.prototype.hasOwnProperty.call(after, prop) || Object.prototype.hasOwnProperty.call(before, prop))\n            continue;\n        if (!deepEqual(before[prop], after[prop])) {\n            commands.push({ command, args: [layerId, prop, after[prop], klass] });\n        }\n    }\n}\nfunction pluckId(layer) {\n    return layer.id;\n}\nfunction indexById(group, layer) {\n    group[layer.id] = layer;\n    return group;\n}\nfunction diffLayers(before, after, commands) {\n    before = before || [];\n    after = after || [];\n    // order of layers by id\n    const beforeOrder = before.map(pluckId);\n    const afterOrder = after.map(pluckId);\n    // index of layer by id\n    const beforeIndex = before.reduce(indexById, {});\n    const afterIndex = after.reduce(indexById, {});\n    // track order of layers as if they have been mutated\n    const tracker = beforeOrder.slice();\n    // layers that have been added do not need to be diffed\n    const clean = Object.create(null);\n    let layerId;\n    let beforeLayer;\n    let afterLayer;\n    let insertBeforeLayerId;\n    let prop;\n    // remove layers\n    for (let i = 0, d = 0; i < beforeOrder.length; i++) {\n        layerId = beforeOrder[i];\n        if (!Object.prototype.hasOwnProperty.call(afterIndex, layerId)) {\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            tracker.splice(tracker.indexOf(layerId, d), 1);\n        }\n        else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n    }\n    // add/reorder layers\n    for (let i = 0, d = 0; i < afterOrder.length; i++) {\n        // work backwards as insert is before an existing layer\n        layerId = afterOrder[afterOrder.length - 1 - i];\n        if (tracker[tracker.length - 1 - i] === layerId)\n            continue;\n        if (Object.prototype.hasOwnProperty.call(beforeIndex, layerId)) {\n            // remove the layer before we insert at the correct position\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            tracker.splice(tracker.lastIndexOf(layerId, tracker.length - d), 1);\n        }\n        else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n        // add layer at correct position\n        insertBeforeLayerId = tracker[tracker.length - i];\n        addCommand(commands, { command: 'addLayer', args: [afterIndex[layerId], insertBeforeLayerId] });\n        tracker.splice(tracker.length - i, 0, layerId);\n        clean[layerId] = true;\n    }\n    // update layers\n    for (let i = 0; i < afterOrder.length; i++) {\n        layerId = afterOrder[i];\n        beforeLayer = beforeIndex[layerId];\n        afterLayer = afterIndex[layerId];\n        // no need to update if previously added (new or moved)\n        if (clean[layerId] || deepEqual(beforeLayer, afterLayer))\n            continue;\n        // If source, source-layer, or type have changes, then remove the layer\n        // and add it back 'from scratch'.\n        if (!deepEqual(beforeLayer.source, afterLayer.source) || !deepEqual(beforeLayer['source-layer'], afterLayer['source-layer']) || !deepEqual(beforeLayer.type, afterLayer.type)) {\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            // we add the layer back at the same position it was already in, so\n            // there's no need to update the `tracker`\n            insertBeforeLayerId = tracker[tracker.lastIndexOf(layerId) + 1];\n            addCommand(commands, { command: 'addLayer', args: [afterLayer, insertBeforeLayerId] });\n            continue;\n        }\n        // layout, paint, filter, minzoom, maxzoom\n        diffLayerPropertyChanges(beforeLayer.layout, afterLayer.layout, commands, layerId, null, 'setLayoutProperty');\n        diffLayerPropertyChanges(beforeLayer.paint, afterLayer.paint, commands, layerId, null, 'setPaintProperty');\n        if (!deepEqual(beforeLayer.filter, afterLayer.filter)) {\n            addCommand(commands, { command: 'setFilter', args: [layerId, afterLayer.filter] });\n        }\n        if (!deepEqual(beforeLayer.minzoom, afterLayer.minzoom) || !deepEqual(beforeLayer.maxzoom, afterLayer.maxzoom)) {\n            addCommand(commands, { command: 'setLayerZoomRange', args: [layerId, afterLayer.minzoom, afterLayer.maxzoom] });\n        }\n        // handle all other layer props, including paint.*\n        for (prop in beforeLayer) {\n            if (!Object.prototype.hasOwnProperty.call(beforeLayer, prop))\n                continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom')\n                continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), 'setPaintProperty');\n            }\n            else if (!deepEqual(beforeLayer[prop], afterLayer[prop])) {\n                addCommand(commands, { command: 'setLayerProperty', args: [layerId, prop, afterLayer[prop]] });\n            }\n        }\n        for (prop in afterLayer) {\n            if (!Object.prototype.hasOwnProperty.call(afterLayer, prop) || Object.prototype.hasOwnProperty.call(beforeLayer, prop))\n                continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom')\n                continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), 'setPaintProperty');\n            }\n            else if (!deepEqual(beforeLayer[prop], afterLayer[prop])) {\n                addCommand(commands, { command: 'setLayerProperty', args: [layerId, prop, afterLayer[prop]] });\n            }\n        }\n    }\n}\n/**\n * Diff two stylesheet\n *\n * Creates semanticly aware diffs that can easily be applied at runtime.\n * Operations produced by the diff closely resemble the maplibre-gl-js API. Any\n * error creating the diff will fall back to the 'setStyle' operation.\n *\n * Example diff:\n * [\n *     { command: 'setConstant', args: ['@water', '#0000FF'] },\n *     { command: 'setPaintProperty', args: ['background', 'background-color', 'black'] }\n * ]\n *\n * @private\n * @param {*} [before] stylesheet to compare from\n * @param {*} after stylesheet to compare to\n * @returns Array list of changes\n */\nfunction diff(before, after) {\n    if (!before)\n        return [{ command: 'setStyle', args: [after] }];\n    let commands = [];\n    try {\n        // Handle changes to top-level properties\n        if (!deepEqual(before.version, after.version)) {\n            return [{ command: 'setStyle', args: [after] }];\n        }\n        if (!deepEqual(before.center, after.center)) {\n            commands.push({ command: 'setCenter', args: [after.center] });\n        }\n        if (!deepEqual(before.centerAltitude, after.centerAltitude)) {\n            commands.push({ command: 'setCenterAltitude', args: [after.centerAltitude] });\n        }\n        if (!deepEqual(before.zoom, after.zoom)) {\n            commands.push({ command: 'setZoom', args: [after.zoom] });\n        }\n        if (!deepEqual(before.bearing, after.bearing)) {\n            commands.push({ command: 'setBearing', args: [after.bearing] });\n        }\n        if (!deepEqual(before.pitch, after.pitch)) {\n            commands.push({ command: 'setPitch', args: [after.pitch] });\n        }\n        if (!deepEqual(before.roll, after.roll)) {\n            commands.push({ command: 'setRoll', args: [after.roll] });\n        }\n        if (!deepEqual(before.sprite, after.sprite)) {\n            commands.push({ command: 'setSprite', args: [after.sprite] });\n        }\n        if (!deepEqual(before.glyphs, after.glyphs)) {\n            commands.push({ command: 'setGlyphs', args: [after.glyphs] });\n        }\n        if (!deepEqual(before.transition, after.transition)) {\n            commands.push({ command: 'setTransition', args: [after.transition] });\n        }\n        if (!deepEqual(before.light, after.light)) {\n            commands.push({ command: 'setLight', args: [after.light] });\n        }\n        if (!deepEqual(before.terrain, after.terrain)) {\n            commands.push({ command: 'setTerrain', args: [after.terrain] });\n        }\n        if (!deepEqual(before.sky, after.sky)) {\n            commands.push({ command: 'setSky', args: [after.sky] });\n        }\n        if (!deepEqual(before.projection, after.projection)) {\n            commands.push({ command: 'setProjection', args: [after.projection] });\n        }\n        // Handle changes to `sources`\n        // If a source is to be removed, we also--before the removeSource\n        // command--need to remove all the style layers that depend on it.\n        const sourcesRemoved = {};\n        // First collect the {add,remove}Source commands\n        const removeOrAddSourceCommands = [];\n        diffSources(before.sources, after.sources, removeOrAddSourceCommands, sourcesRemoved);\n        // Push a removeLayer command for each style layer that depends on a\n        // source that's being removed.\n        // Also, exclude any such layers them from the input to `diffLayers`\n        // below, so that diffLayers produces the appropriate `addLayers`\n        // command\n        const beforeLayers = [];\n        if (before.layers) {\n            before.layers.forEach((layer) => {\n                if ('source' in layer && sourcesRemoved[layer.source]) {\n                    commands.push({ command: 'removeLayer', args: [layer.id] });\n                }\n                else {\n                    beforeLayers.push(layer);\n                }\n            });\n        }\n        commands = commands.concat(removeOrAddSourceCommands);\n        // Handle changes to `layers`\n        diffLayers(beforeLayers, after.layers, commands);\n    }\n    catch (e) {\n        // fall back to setStyle\n        console.warn('Unable to compute style diff:', e);\n        commands = [{ command: 'setStyle', args: [after] }];\n    }\n    return commands;\n}\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\nclass ValidationError {\n    constructor(key, value, message, identifier) {\n        this.message = (key ? `${key}: ` : '') + message;\n        if (identifier)\n            this.identifier = identifier;\n        if (value !== null && value !== undefined && value.__line__) {\n            this.line = value.__line__;\n        }\n    }\n}\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\nclass ParsingError {\n    constructor(error) {\n        this.error = error;\n        this.message = error.message;\n        const match = error.message.match(/line (\\d+)/);\n        this.line = match ? parseInt(match[1], 10) : 0;\n    }\n}\n\nfunction extendBy(output, ...inputs) {\n    for (const input of inputs) {\n        for (const k in input) {\n            output[k] = input[k];\n        }\n    }\n    return output;\n}\n\nclass ExpressionParsingError extends Error {\n    constructor(key, message) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    constructor(parent, bindings = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n    concat(bindings) {\n        return new Scope(this, bindings);\n    }\n    get(name) {\n        if (this.bindings[name]) {\n            return this.bindings[name];\n        }\n        if (this.parent) {\n            return this.parent.get(name);\n        }\n        throw new Error(`${name} not found in scope.`);\n    }\n    has(name) {\n        if (this.bindings[name])\n            return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nconst NullType = { kind: 'null' };\nconst NumberType = { kind: 'number' };\nconst StringType = { kind: 'string' };\nconst BooleanType = { kind: 'boolean' };\nconst ColorType = { kind: 'color' };\nconst ProjectionDefinitionType = { kind: 'projectionDefinition' };\nconst ObjectType = { kind: 'object' };\nconst ValueType = { kind: 'value' };\nconst ErrorType = { kind: 'error' };\nconst CollatorType = { kind: 'collator' };\nconst FormattedType = { kind: 'formatted' };\nconst PaddingType = { kind: 'padding' };\nconst ResolvedImageType = { kind: 'resolvedImage' };\nconst VariableAnchorOffsetCollectionType = { kind: 'variableAnchorOffsetCollection' };\nfunction array(itemType, N) {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\nfunction typeToString(type) {\n    if (type.kind === 'array') {\n        const itemType = typeToString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    }\n    else {\n        return type.kind;\n    }\n}\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ProjectionDefinitionType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    PaddingType,\n    ResolvedImageType,\n    VariableAnchorOffsetCollectionType\n];\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nfunction checkSubtype(expected, t) {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    }\n    else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    }\n    else if (expected.kind === t.kind) {\n        return null;\n    }\n    else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n    return `Expected ${typeToString(expected)} but found ${typeToString(t)} instead.`;\n}\nfunction isValidType(provided, allowedTypes) {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\nfunction isValidNativeType(provided, allowedTypes) {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        }\n        else if (t === 'array') {\n            return Array.isArray(provided);\n        }\n        else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        }\n        else {\n            return t === typeof provided;\n        }\n    });\n}\n/**\n * Verify whether the specified type is of the same type as the specified sample.\n *\n * @param provided Type to verify\n * @param sample Sample type to reference\n * @returns `true` if both objects are of the same type, `false` otherwise\n * @example basic types\n * if (verifyType(outputType, ValueType)) {\n *     // type narrowed to:\n *     outputType.kind; // 'value'\n * }\n * @example array types\n * if (verifyType(outputType, array(NumberType))) {\n *     // type narrowed to:\n *     outputType.kind; // 'array'\n *     outputType.itemType; // NumberTypeT\n *     outputType.itemType.kind; // 'number'\n * }\n */\nfunction verifyType(provided, sample) {\n    if (provided.kind === 'array' && sample.kind === 'array') {\n        return provided.itemType.kind === sample.itemType.kind && typeof provided.N === 'number';\n    }\n    return provided.kind === sample.kind;\n}\n\n// See https://observablehq.com/@mbostock/lab-and-rgb\nconst Xn = 0.96422, Yn = 1, Zn = 0.82521, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1, deg2rad = Math.PI / 180, rad2deg = 180 / Math.PI;\nfunction constrainAngle(angle) {\n    angle = angle % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nfunction rgbToLab([r, g, b, alpha]) {\n    r = rgb2xyz(r);\n    g = rgb2xyz(g);\n    b = rgb2xyz(b);\n    let x, z;\n    const y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn);\n    if (r === g && g === b) {\n        x = z = y;\n    }\n    else {\n        x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n        z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n    }\n    const l = 116 * y - 16;\n    return [(l < 0) ? 0 : l, 500 * (x - y), 200 * (y - z), alpha];\n}\nfunction rgb2xyz(x) {\n    return (x <= 0.04045) ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\nfunction xyz2lab(t) {\n    return (t > t3) ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\nfunction labToRgb([l, a, b, alpha]) {\n    let y = (l + 16) / 116, x = isNaN(a) ? y : y + a / 500, z = isNaN(b) ? y : y - b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return [\n        xyz2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), // D50 -> sRGB\n        xyz2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n        xyz2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n        alpha,\n    ];\n}\nfunction xyz2rgb(x) {\n    x = (x <= 0.00304) ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055;\n    return (x < 0) ? 0 : (x > 1) ? 1 : x; // clip to 0..1 range\n}\nfunction lab2xyz(t) {\n    return (t > t1) ? t * t * t : t2 * (t - t0);\n}\nfunction rgbToHcl(rgbColor) {\n    const [l, a, b, alpha] = rgbToLab(rgbColor);\n    const c = Math.sqrt(a * a + b * b);\n    const h = Math.round(c * 10000) ? constrainAngle(Math.atan2(b, a) * rad2deg) : NaN;\n    return [h, c, l, alpha];\n}\nfunction hclToRgb([h, c, l, alpha]) {\n    h = isNaN(h) ? 0 : h * deg2rad;\n    return labToRgb([l, Math.cos(h) * c, Math.sin(h) * c, alpha]);\n}\n// https://drafts.csswg.org/css-color-4/#hsl-to-rgb\nfunction hslToRgb([h, s, l, alpha]) {\n    h = constrainAngle(h);\n    s /= 100;\n    l /= 100;\n    function f(n) {\n        const k = (n + h / 30) % 12;\n        const a = s * Math.min(l, 1 - l);\n        return l - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\n    }\n    return [f(0), f(8), f(4), alpha];\n}\n\n/**\n * CSS color parser compliant with CSS Color 4 Specification.\n * Supports: named colors, `transparent` keyword, all rgb hex notations,\n * rgb(), rgba(), hsl() and hsla() functions.\n * Does not round the parsed values to integers from the range 0..255.\n *\n * Syntax:\n *\n * <alpha-value> = <number> | <percentage>\n *         <hue> = <number> | <angle>\n *\n *         rgb() = rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? )\n *         rgb() = rgb( <percentage>#{3} , <alpha-value>? )    | rgb( <number>#{3} , <alpha-value>? )\n *\n *         hsl() = hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? )\n *         hsl() = hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )\n *\n * Caveats:\n *   - <angle> - <number> with optional `deg` suffix; `grad`, `rad`, `turn` are not supported\n *   - `none` keyword is not supported\n *   - comments inside rgb()/hsl() are not supported\n *   - legacy color syntax rgba() is supported with an identical grammar and behavior to rgb()\n *   - legacy color syntax hsla() is supported with an identical grammar and behavior to hsl()\n *\n * @param input CSS color string to parse.\n * @returns Color in sRGB color space, with `red`, `green`, `blue`\n * and `alpha` channels normalized to the range 0..1,\n * or `undefined` if the input is not a valid color string.\n */\nfunction parseCssColor(input) {\n    input = input.toLowerCase().trim();\n    if (input === 'transparent') {\n        return [0, 0, 0, 0];\n    }\n    // 'white', 'black', 'blue'\n    const namedColorsMatch = namedColors[input];\n    if (namedColorsMatch) {\n        const [r, g, b] = namedColorsMatch;\n        return [r / 255, g / 255, b / 255, 1];\n    }\n    // #f0c, #f0cf, #ff00cc, #ff00ccff\n    if (input.startsWith('#')) {\n        const hexRegexp = /^#(?:[0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})$/;\n        if (hexRegexp.test(input)) {\n            const step = input.length < 6 ? 1 : 2;\n            let i = 1;\n            return [\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i + step) || 'ff'),\n            ];\n        }\n    }\n    // rgb(128 0 0), rgb(50% 0% 0%), rgba(255,0,255,0.6), rgb(255 0 255 / 60%), rgb(100% 0% 100% /.6)\n    if (input.startsWith('rgb')) {\n        const rgbRegExp = /^rgba?\\(\\s*([\\de.+-]+)(%)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)(%)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)(%)?(?:\\s*([,\\/])\\s*([\\de.+-]+)(%)?)?\\s*\\)$/;\n        const rgbMatch = input.match(rgbRegExp);\n        if (rgbMatch) {\n            const [_, // eslint-disable-line @typescript-eslint/no-unused-vars\n            r, // <numeric>\n            rp, // %         (optional)\n            f1, // ,         (optional)\n            g, // <numeric>\n            gp, // %         (optional)\n            f2, // ,         (optional)\n            b, // <numeric>\n            bp, // %         (optional)\n            f3, // ,|/       (optional)\n            a, // <numeric> (optional)\n            ap, // %         (optional)\n            ] = rgbMatch;\n            const argFormat = [f1 || ' ', f2 || ' ', f3].join('');\n            if (argFormat === '  ' ||\n                argFormat === '  /' ||\n                argFormat === ',,' ||\n                argFormat === ',,,') {\n                const valFormat = [rp, gp, bp].join('');\n                const maxValue = (valFormat === '%%%') ? 100 :\n                    (valFormat === '') ? 255 : 0;\n                if (maxValue) {\n                    const rgba = [\n                        clamp(+r / maxValue, 0, 1),\n                        clamp(+g / maxValue, 0, 1),\n                        clamp(+b / maxValue, 0, 1),\n                        a ? parseAlpha(+a, ap) : 1,\n                    ];\n                    if (validateNumbers(rgba)) {\n                        return rgba;\n                    }\n                    // invalid numbers\n                }\n                // values must be all numbers or all percentages\n            }\n            return; // comma optional syntax requires no commas at all\n        }\n    }\n    // hsl(120 50% 80%), hsla(120deg,50%,80%,.9), hsl(12e1 50% 80% / 90%)\n    const hslRegExp = /^hsla?\\(\\s*([\\de.+-]+)(?:deg)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)%(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)%(?:\\s*([,\\/])\\s*([\\de.+-]+)(%)?)?\\s*\\)$/;\n    const hslMatch = input.match(hslRegExp);\n    if (hslMatch) {\n        const [_, // eslint-disable-line @typescript-eslint/no-unused-vars\n        h, // <numeric>\n        f1, // ,         (optional)\n        s, // <numeric>\n        f2, // ,         (optional)\n        l, // <numeric>\n        f3, // ,|/       (optional)\n        a, // <numeric> (optional)\n        ap, // %         (optional)\n        ] = hslMatch;\n        const argFormat = [f1 || ' ', f2 || ' ', f3].join('');\n        if (argFormat === '  ' ||\n            argFormat === '  /' ||\n            argFormat === ',,' ||\n            argFormat === ',,,') {\n            const hsla = [\n                +h,\n                clamp(+s, 0, 100),\n                clamp(+l, 0, 100),\n                a ? parseAlpha(+a, ap) : 1,\n            ];\n            if (validateNumbers(hsla)) {\n                return hslToRgb(hsla);\n            }\n            // invalid numbers\n        }\n        // comma optional syntax requires no commas at all\n    }\n}\nfunction parseHex(hex) {\n    return parseInt(hex.padEnd(2, hex), 16) / 255;\n}\nfunction parseAlpha(a, asPercentage) {\n    return clamp(asPercentage ? (a / 100) : a, 0, 1);\n}\nfunction clamp(n, min, max) {\n    return Math.min(Math.max(min, n), max);\n}\n/**\n * The regular expression for numeric values is not super specific, and it may\n * happen that it will accept a value that is not a valid number. In order to\n * detect and eliminate such values this function exists.\n *\n * @param array Array of uncertain numbers.\n * @returns `true` if the specified array contains only valid numbers, `false` otherwise.\n */\nfunction validateNumbers(array) {\n    return !array.some(Number.isNaN);\n}\n/**\n * To generate:\n * - visit {@link https://www.w3.org/TR/css-color-4/#named-colors}\n * - run in the console:\n * @example\n * copy(`{\\n${[...document.querySelector('.named-color-table tbody').children].map((tr) => `${tr.cells[2].textContent.trim()}: [${tr.cells[4].textContent.trim().split(/\\s+/).join(', ')}],`).join('\\n')}\\n}`);\n */\nconst namedColors = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50],\n};\n\nfunction interpolateNumber(from, to, t) {\n    return from + t * (to - from);\n}\nfunction interpolateArray(from, to, t) {\n    return from.map((d, i) => {\n        return interpolateNumber(d, to[i], t);\n    });\n}\n\n/**\n * Checks whether the specified color space is one of the supported interpolation color spaces.\n *\n * @param colorSpace Color space key to verify.\n * @returns `true` if the specified color space is one of the supported\n * interpolation color spaces, `false` otherwise\n */\nfunction isSupportedInterpolationColorSpace(colorSpace) {\n    return colorSpace === 'rgb' || colorSpace === 'hcl' || colorSpace === 'lab';\n}\n/**\n * Color representation used by WebGL.\n * Defined in sRGB color space and pre-blended with alpha.\n * @private\n */\nclass Color {\n    /**\n     * @param r Red component premultiplied by `alpha` 0..1\n     * @param g Green component premultiplied by `alpha` 0..1\n     * @param b Blue component premultiplied by `alpha` 0..1\n     * @param [alpha=1] Alpha component 0..1\n     * @param [premultiplied=true] Whether the `r`, `g` and `b` values have already\n     * been multiplied by alpha. If `true` nothing happens if `false` then they will\n     * be multiplied automatically.\n     */\n    constructor(r, g, b, alpha = 1, premultiplied = true) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = alpha;\n        if (!premultiplied) {\n            this.r *= alpha;\n            this.g *= alpha;\n            this.b *= alpha;\n            if (!alpha) {\n                // alpha = 0 erases completely rgb channels. This behavior is not desirable\n                // if this particular color is later used in color interpolation.\n                // Because of that, a reference to original color is saved.\n                this.overwriteGetter('rgb', [r, g, b, alpha]);\n            }\n        }\n    }\n    /**\n     * Parses CSS color strings and converts colors to sRGB color space if needed.\n     * Officially supported color formats:\n     * - keyword, e.g. 'aquamarine' or 'steelblue'\n     * - hex (with 3, 4, 6 or 8 digits), e.g. '#f0f' or '#e9bebea9'\n     * - rgb and rgba, e.g. 'rgb(0,240,120)' or 'rgba(0%,94%,47%,0.1)' or 'rgb(0 240 120 / .3)'\n     * - hsl and hsla, e.g. 'hsl(0,0%,83%)' or 'hsla(0,0%,83%,.5)' or 'hsl(0 0% 83% / 20%)'\n     *\n     * @param input CSS color string to parse.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input) {\n        // in zoom-and-property function input could be an instance of Color class\n        if (input instanceof Color) {\n            return input;\n        }\n        if (typeof input !== 'string') {\n            return;\n        }\n        const rgba = parseCssColor(input);\n        if (rgba) {\n            return new Color(...rgba, false);\n        }\n    }\n    /**\n     * Used in color interpolation and by 'to-rgba' expression.\n     *\n     * @returns Gien color, with reversed alpha blending, in sRGB color space.\n     */\n    get rgb() {\n        const { r, g, b, a } = this;\n        const f = a || Infinity; // reverse alpha blending factor\n        return this.overwriteGetter('rgb', [r / f, g / f, b / f, a]);\n    }\n    /**\n     * Used in color interpolation.\n     *\n     * @returns Gien color, with reversed alpha blending, in HCL color space.\n     */\n    get hcl() {\n        return this.overwriteGetter('hcl', rgbToHcl(this.rgb));\n    }\n    /**\n     * Used in color interpolation.\n     *\n     * @returns Gien color, with reversed alpha blending, in LAB color space.\n     */\n    get lab() {\n        return this.overwriteGetter('lab', rgbToLab(this.rgb));\n    }\n    /**\n     * Lazy getter pattern. When getter is called for the first time lazy value\n     * is calculated and then overwrites getter function in given object instance.\n     *\n     * @example:\n     * const redColor = Color.parse('red');\n     * let x = redColor.hcl; // this will invoke `get hcl()`, which will calculate\n     * // the value of red in HCL space and invoke this `overwriteGetter` function\n     * // which in turn will set a field with a key 'hcl' in the `redColor` object.\n     * // In other words it will override `get hcl()` from its `Color` prototype\n     * // with its own property: hcl = [calculated red value in hcl].\n     * let y = redColor.hcl; // next call will no longer invoke getter but simply\n     * // return the previously calculated value\n     * x === y; // true - `x` is exactly the same object as `y`\n     *\n     * @param getterKey Getter key\n     * @param lazyValue Lazily calculated value to be memoized by current instance\n     * @private\n     */\n    overwriteGetter(getterKey, lazyValue) {\n        Object.defineProperty(this, getterKey, { value: lazyValue });\n        return lazyValue;\n    }\n    /**\n     * Used by 'to-string' expression.\n     *\n     * @returns Serialized color in format `rgba(r,g,b,a)`\n     * where r,g,b are numbers within 0..255 and alpha is number within 1..0\n     *\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString() {\n        const [r, g, b, a] = this.rgb;\n        return `rgba(${[r, g, b].map(n => Math.round(n * 255)).join(',')},${a})`;\n    }\n    static interpolate(from, to, t, spaceKey = 'rgb') {\n        switch (spaceKey) {\n            case 'rgb': {\n                const [r, g, b, alpha] = interpolateArray(from.rgb, to.rgb, t);\n                return new Color(r, g, b, alpha, false);\n            }\n            case 'hcl': {\n                const [hue0, chroma0, light0, alphaF] = from.hcl;\n                const [hue1, chroma1, light1, alphaT] = to.hcl;\n                // https://github.com/gka/chroma.js/blob/cd1b3c0926c7a85cbdc3b1453b3a94006de91a92/src/interpolator/_hsx.js\n                let hue, chroma;\n                if (!isNaN(hue0) && !isNaN(hue1)) {\n                    let dh = hue1 - hue0;\n                    if (hue1 > hue0 && dh > 180) {\n                        dh -= 360;\n                    }\n                    else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                        dh += 360;\n                    }\n                    hue = hue0 + t * dh;\n                }\n                else if (!isNaN(hue0)) {\n                    hue = hue0;\n                    if (light1 === 1 || light1 === 0)\n                        chroma = chroma0;\n                }\n                else if (!isNaN(hue1)) {\n                    hue = hue1;\n                    if (light0 === 1 || light0 === 0)\n                        chroma = chroma1;\n                }\n                else {\n                    hue = NaN;\n                }\n                const [r, g, b, alpha] = hclToRgb([\n                    hue,\n                    chroma !== null && chroma !== undefined ? chroma : interpolateNumber(chroma0, chroma1, t),\n                    interpolateNumber(light0, light1, t),\n                    interpolateNumber(alphaF, alphaT, t),\n                ]);\n                return new Color(r, g, b, alpha, false);\n            }\n            case 'lab': {\n                const [r, g, b, alpha] = labToRgb(interpolateArray(from.lab, to.lab, t));\n                return new Color(r, g, b, alpha, false);\n            }\n        }\n    }\n}\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\nclass Collator {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [], { sensitivity: this.sensitivity, usage: 'search' });\n    }\n    compare(lhs, rhs) {\n        return this.collator.compare(lhs, rhs);\n    }\n    resolvedLocale() {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n\nconst VERTICAL_ALIGN_OPTIONS = ['bottom', 'center', 'top'];\nclass FormattedSection {\n    constructor(text, image, scale, fontStack, textColor, verticalAlign) {\n        this.text = text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n        this.verticalAlign = verticalAlign;\n    }\n}\nclass Formatted {\n    constructor(sections) {\n        this.sections = sections;\n    }\n    static fromString(unformatted) {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null, null)]);\n    }\n    isEmpty() {\n        if (this.sections.length === 0)\n            return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n            (section.image && section.image.name.length !== 0));\n    }\n    static factory(text) {\n        if (text instanceof Formatted) {\n            return text;\n        }\n        else {\n            return Formatted.fromString(text);\n        }\n    }\n    toString() {\n        if (this.sections.length === 0)\n            return '';\n        return this.sections.map(section => section.text).join('');\n    }\n}\n\n/**\n * A set of four numbers representing padding around a box. Create instances from\n * bare arrays or numeric values using the static method `Padding.parse`.\n * @private\n */\nclass Padding {\n    constructor(values) {\n        this.values = values.slice();\n    }\n    /**\n     * Numeric padding values\n     * @param input A padding value\n     * @returns A `Padding` instance, or `undefined` if the input is not a valid padding value.\n     */\n    static parse(input) {\n        if (input instanceof Padding) {\n            return input;\n        }\n        // Backwards compatibility: bare number is treated the same as array with single value.\n        // Padding applies to all four sides.\n        if (typeof input === 'number') {\n            return new Padding([input, input, input, input]);\n        }\n        if (!Array.isArray(input)) {\n            return undefined;\n        }\n        if (input.length < 1 || input.length > 4) {\n            return undefined;\n        }\n        for (const val of input) {\n            if (typeof val !== 'number') {\n                return undefined;\n            }\n        }\n        // Expand shortcut properties into explicit 4-sided values\n        switch (input.length) {\n            case 1:\n                input = [input[0], input[0], input[0], input[0]];\n                break;\n            case 2:\n                input = [input[0], input[1], input[0], input[1]];\n                break;\n            case 3:\n                input = [input[0], input[1], input[2], input[1]];\n                break;\n        }\n        return new Padding(input);\n    }\n    toString() {\n        return JSON.stringify(this.values);\n    }\n    static interpolate(from, to, t) {\n        return new Padding(interpolateArray(from.values, to.values, t));\n    }\n}\n\nclass RuntimeError {\n    constructor(message) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n    toJSON() {\n        return this.message;\n    }\n}\n\n/** Set of valid anchor positions, as a set for validation */\nconst anchors = new Set(['center', 'left', 'right', 'top', 'bottom', 'top-left', 'top-right', 'bottom-left', 'bottom-right']);\n/**\n * Utility class to assist managing values for text-variable-anchor-offset property. Create instances from\n * bare arrays using the static method `VariableAnchorOffsetCollection.parse`.\n * @private\n */\nclass VariableAnchorOffsetCollection {\n    constructor(values) {\n        this.values = values.slice();\n    }\n    static parse(input) {\n        if (input instanceof VariableAnchorOffsetCollection) {\n            return input;\n        }\n        if (!Array.isArray(input) ||\n            input.length < 1 ||\n            input.length % 2 !== 0) {\n            return undefined;\n        }\n        for (let i = 0; i < input.length; i += 2) {\n            // Elements in even positions should be anchor positions; Elements in odd positions should be offset values\n            const anchorValue = input[i];\n            const offsetValue = input[i + 1];\n            if (typeof anchorValue !== 'string' || !anchors.has(anchorValue)) {\n                return undefined;\n            }\n            if (!Array.isArray(offsetValue) || offsetValue.length !== 2 || typeof offsetValue[0] !== 'number' || typeof offsetValue[1] !== 'number') {\n                return undefined;\n            }\n        }\n        return new VariableAnchorOffsetCollection(input);\n    }\n    toString() {\n        return JSON.stringify(this.values);\n    }\n    static interpolate(from, to, t) {\n        const fromValues = from.values;\n        const toValues = to.values;\n        if (fromValues.length !== toValues.length) {\n            throw new RuntimeError(`Cannot interpolate values of different length. from: ${from.toString()}, to: ${to.toString()}`);\n        }\n        const output = [];\n        for (let i = 0; i < fromValues.length; i += 2) {\n            // Anchor entries must match\n            if (fromValues[i] !== toValues[i]) {\n                throw new RuntimeError(`Cannot interpolate values containing mismatched anchors. from[${i}]: ${fromValues[i]}, to[${i}]: ${toValues[i]}`);\n            }\n            output.push(fromValues[i]);\n            // Interpolate the offset values for each anchor\n            const [fx, fy] = fromValues[i + 1];\n            const [tx, ty] = toValues[i + 1];\n            output.push([interpolateNumber(fx, tx, t), interpolateNumber(fy, ty, t)]);\n        }\n        return new VariableAnchorOffsetCollection(output);\n    }\n}\n\nclass ResolvedImage {\n    constructor(options) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n    toString() {\n        return this.name;\n    }\n    static fromString(name) {\n        if (!name)\n            return null; // treat empty values as no image\n        return new ResolvedImage({ name, available: false });\n    }\n}\n\nclass ProjectionDefinition {\n    constructor(from, to, transition) {\n        this.from = from;\n        this.to = to;\n        this.transition = transition;\n    }\n    static interpolate(from, to, t) {\n        return new ProjectionDefinition(from, to, t);\n    }\n    static parse(input) {\n        if (input instanceof ProjectionDefinition) {\n            return input;\n        }\n        if (Array.isArray(input) && input.length === 3 && typeof input[0] === 'string' && typeof input[1] === 'string' && typeof input[2] === 'number') {\n            return new ProjectionDefinition(input[0], input[1], input[2]);\n        }\n        if (typeof input === 'object' && typeof input.from === 'string' && typeof input.to === 'string' && typeof input.transition === 'number') {\n            return new ProjectionDefinition(input.from, input.to, input.transition);\n        }\n        if (typeof input === 'string') {\n            return new ProjectionDefinition(input, input, 1);\n        }\n        return undefined;\n    }\n}\n\nfunction validateRGBA(r, g, b, a) {\n    if (!(typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255)) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n    if (!(typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1))) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n    return null;\n}\nfunction isValue(mixed) {\n    if (mixed === null ||\n        typeof mixed === 'string' ||\n        typeof mixed === 'boolean' ||\n        typeof mixed === 'number' ||\n        mixed instanceof ProjectionDefinition ||\n        mixed instanceof Color ||\n        mixed instanceof Collator ||\n        mixed instanceof Formatted ||\n        mixed instanceof Padding ||\n        mixed instanceof VariableAnchorOffsetCollection ||\n        mixed instanceof ResolvedImage) {\n        return true;\n    }\n    else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction typeOf(value) {\n    if (value === null) {\n        return NullType;\n    }\n    else if (typeof value === 'string') {\n        return StringType;\n    }\n    else if (typeof value === 'boolean') {\n        return BooleanType;\n    }\n    else if (typeof value === 'number') {\n        return NumberType;\n    }\n    else if (value instanceof Color) {\n        return ColorType;\n    }\n    else if (value instanceof ProjectionDefinition) {\n        return ProjectionDefinitionType;\n    }\n    else if (value instanceof Collator) {\n        return CollatorType;\n    }\n    else if (value instanceof Formatted) {\n        return FormattedType;\n    }\n    else if (value instanceof Padding) {\n        return PaddingType;\n    }\n    else if (value instanceof VariableAnchorOffsetCollection) {\n        return VariableAnchorOffsetCollectionType;\n    }\n    else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    }\n    else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType;\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            }\n            else if (itemType === t) {\n                continue;\n            }\n            else {\n                itemType = ValueType;\n                break;\n            }\n        }\n        return array(itemType || ValueType, length);\n    }\n    else {\n        return ObjectType;\n    }\n}\nfunction valueToString(value) {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    }\n    else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    }\n    else if (value instanceof Color || value instanceof ProjectionDefinition || value instanceof Formatted || value instanceof Padding || value instanceof VariableAnchorOffsetCollection || value instanceof ResolvedImage) {\n        return value.toString();\n    }\n    else {\n        return JSON.stringify(value);\n    }\n}\n\nclass Literal {\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (!isValue(args[1]))\n            return context.error('invalid value');\n        const value = args[1];\n        let type = typeOf(value);\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)) {\n            type = expected;\n        }\n        return new Literal(type, value);\n    }\n    evaluate() {\n        return this.value;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nconst types$1 = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\nclass Assertion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error('Expected at least one argument.');\n        let i = 1;\n        let type;\n        const name = args[0];\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types$1) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types$1[type];\n                i++;\n            }\n            else {\n                itemType = ValueType;\n            }\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n            type = array(itemType, N);\n        }\n        else {\n            if (!types$1[name])\n                throw new Error(`Types doesn't contain name = ${name}`);\n            type = types$1[name];\n        }\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Assertion(type, parsed);\n    }\n    evaluate(ctx) {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            }\n            else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${typeToString(this.type)}, but found ${typeToString(typeOf(value))} instead.`);\n            }\n        }\n        throw new Error();\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error('Expected at least one argument.');\n        const name = args[0];\n        if (!types[name])\n            throw new Error(`Can't parse ${name} as it is not part of the known types`);\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error('Expected one argument.');\n        const type = types[name];\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Coercion(type, parsed);\n    }\n    evaluate(ctx) {\n        switch (this.type.kind) {\n            case 'boolean':\n                return Boolean(this.args[0].evaluate(ctx));\n            case 'color': {\n                let input;\n                let error;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    error = null;\n                    if (input instanceof Color) {\n                        return input;\n                    }\n                    else if (typeof input === 'string') {\n                        const c = ctx.parseColor(input);\n                        if (c)\n                            return c;\n                    }\n                    else if (Array.isArray(input)) {\n                        if (input.length < 3 || input.length > 4) {\n                            error = `Invalid rgba value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                        }\n                        else {\n                            error = validateRGBA(input[0], input[1], input[2], input[3]);\n                        }\n                        if (!error) {\n                            return new Color(input[0] / 255, input[1] / 255, input[2] / 255, input[3]);\n                        }\n                    }\n                }\n                throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'padding': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    const pad = Padding.parse(input);\n                    if (pad) {\n                        return pad;\n                    }\n                }\n                throw new RuntimeError(`Could not parse padding from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'variableAnchorOffsetCollection': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    const coll = VariableAnchorOffsetCollection.parse(input);\n                    if (coll) {\n                        return coll;\n                    }\n                }\n                throw new RuntimeError(`Could not parse variableAnchorOffsetCollection from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'number': {\n                let value = null;\n                for (const arg of this.args) {\n                    value = arg.evaluate(ctx);\n                    if (value === null)\n                        return 0;\n                    const num = Number(value);\n                    if (isNaN(num))\n                        continue;\n                    return num;\n                }\n                throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n            }\n            case 'formatted':\n                // There is no explicit 'to-formatted' but this coercion can be implicitly\n                // created by properties that expect the 'formatted' type.\n                return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n            case 'resolvedImage':\n                return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n            case 'projectionDefinition':\n                return this.args[0].evaluate(ctx);\n            default:\n                return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\nclass EvaluationContext {\n    constructor() {\n        this.globals = null;\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n    }\n    id() {\n        return this.feature && 'id' in this.feature ? this.feature.id : null;\n    }\n    geometryType() {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n    geometry() {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n    canonicalID() {\n        return this.canonical;\n    }\n    properties() {\n        return this.feature && this.feature.properties || {};\n    }\n    parseColor(input) {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    constructor(registry, isConstantFunc, path = [], expectedType, scope = new Scope(), errors = []) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n        this._isConstant = isConstantFunc;\n    }\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(expr, index, expectedType, bindings, options = {}) {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n    _parse(expr, options) {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n        function annotate(parsed, type, typeAnnotation) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            }\n            else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            }\n            else {\n                return parsed;\n            }\n        }\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error('Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].');\n            }\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed)\n                    return null;\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    }\n                    else if ((expected.kind === 'projectionDefinition') && (actual.kind === 'string' || actual.kind === 'array')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if (expected.kind === 'padding' && (actual.kind === 'value' || actual.kind === 'number' || actual.kind === 'array')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if (expected.kind === 'variableAnchorOffsetCollection' && (actual.kind === 'value' || actual.kind === 'array')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && this._isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    }\n                    catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n                return parsed;\n            }\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        else if (typeof expr === 'undefined') {\n            return this.error('\\'undefined\\' value invalid. Use null instead.');\n        }\n        else if (typeof expr === 'object') {\n            return this.error('Bare objects invalid. Use [\"literal\", {...}] instead.');\n        }\n        else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index, expectedType, bindings) {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(this.registry, this._isConstant, path, expectedType || null, scope, this.errors);\n    }\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error, ...keys) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ExpressionParsingError(key, error));\n    }\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     * @param expected The expected type\n     * @param t The actual type\n     * @returns null if `t` is a subtype of `expected`; otherwise returns an error message\n     */\n    checkSubtype(expected, t) {\n        const error = checkSubtype(expected, t);\n        if (error)\n            this.error(error);\n        return error;\n    }\n}\n\nclass Let {\n    constructor(bindings, result) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n    evaluate(ctx) {\n        return this.result.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n        const bindings = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error('Variable names must contain only alphanumeric characters or \\'_\\'.', i);\n            }\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value)\n                return null;\n            bindings.push([name, value]);\n        }\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result)\n            return null;\n        return new Let(bindings, result);\n    }\n    outputDefined() {\n        return this.result.outputDefined();\n    }\n}\n\nclass Var {\n    constructor(name, boundExpression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n    static parse(args, context) {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error('\\'var\\' expression requires exactly one string literal argument.');\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n        return new Var(name, context.scope.get(name));\n    }\n    evaluate(ctx) {\n        return this.boundExpression.evaluate(ctx);\n    }\n    eachChild() { }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass At {\n    constructor(type, index, input) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n        if (!index || !input)\n            return null;\n        const t = input.type;\n        return new At(t.itemType, index, input);\n    }\n    evaluate(ctx) {\n        const index = this.index.evaluate(ctx);\n        const array = this.input.evaluate(ctx);\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n        return array[index];\n    }\n    eachChild(fn) {\n        fn(this.index);\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass In {\n    constructor(needle, haystack) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n    static parse(args, context) {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(needle.type)} instead`);\n        }\n        return new In(needle, haystack);\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!haystack)\n            return false;\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(typeOf(needle))} instead.`);\n        }\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${typeToString(typeOf(haystack))} instead.`);\n        }\n        return haystack.indexOf(needle) >= 0;\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n    outputDefined() {\n        return true;\n    }\n}\n\nclass IndexOf {\n    constructor(needle, haystack, fromIndex) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(needle.type)} instead`);\n        }\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex)\n                return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        }\n        else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(typeOf(needle))} instead.`);\n        }\n        let fromIndex;\n        if (this.fromIndex) {\n            fromIndex = this.fromIndex.evaluate(ctx);\n        }\n        if (isValidNativeType(haystack, ['string'])) {\n            const rawIndex = haystack.indexOf(needle, fromIndex);\n            if (rawIndex === -1) {\n                return -1;\n            }\n            else {\n                // The index may be affected by surrogate pairs, so get the length of the preceding substring.\n                return [...haystack.slice(0, rawIndex)].length;\n            }\n        }\n        else if (isValidNativeType(haystack, ['array'])) {\n            return haystack.indexOf(needle, fromIndex);\n        }\n        else {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${typeToString(typeOf(haystack))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass Match {\n    constructor(inputType, outputType, input, cases, outputs, otherwise) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error('Expected an even number of arguments.');\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error('Branch labels must be numbers or strings.');\n                }\n                else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n                }\n                else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error('Numeric branch labels must be integer values.');\n                }\n                else if (!inputType) {\n                    inputType = typeOf(label);\n                }\n                else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n                cases[String(label)] = outputs.length;\n            }\n            const result = context.parse(value, i, outputType);\n            if (!result)\n                return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input)\n            return null;\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype(inputType, input.type)) {\n            return null;\n        }\n        return new Match(inputType, outputType, input, cases, outputs, otherwise);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n}\n\nclass Case {\n    constructor(type, branches, otherwise) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error('Expected an odd number of arguments.');\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test)\n                return null;\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result)\n                return null;\n            branches.push([test, result]);\n            outputType = outputType || result.type;\n        }\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (!outputType)\n            throw new Error('Can\\'t infer output type');\n        return new Case(outputType, branches, otherwise);\n    }\n    evaluate(ctx) {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n}\n\nclass Slice {\n    constructor(type, input, beginIndex, endIndex) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n        if (!input || !beginIndex)\n            return null;\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${typeToString(input.type)} instead`);\n        }\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex)\n                return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        }\n        else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const beginIndex = this.beginIndex.evaluate(ctx);\n        let endIndex;\n        if (this.endIndex) {\n            endIndex = this.endIndex.evaluate(ctx);\n        }\n        if (isValidNativeType(input, ['string'])) {\n            // Indices may be affected by surrogate pairs.\n            return [...input].slice(beginIndex, endIndex).join('');\n        }\n        else if (isValidNativeType(input, ['array'])) {\n            return input.slice(beginIndex, endIndex);\n        }\n        else {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${typeToString(typeOf(input))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nfunction findStopLessThanOrEqualTo(stops, input) {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n            lowerIndex = currentIndex + 1;\n        }\n        else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        }\n        else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n    return 0;\n}\n\nclass Step {\n    constructor(type, input, stops) {\n        this.type = type;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static parse(args, context) {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error('Expected an even number of arguments.');\n        }\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n            const labelKey = i;\n            const valueKey = i + 1;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n        return new Step(outputType, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar unitbezier;\nvar hasRequiredUnitbezier;\n\nfunction requireUnitbezier () {\n\tif (hasRequiredUnitbezier) return unitbezier;\n\thasRequiredUnitbezier = 1;\n\n\tunitbezier = UnitBezier;\n\n\tfunction UnitBezier(p1x, p1y, p2x, p2y) {\n\t    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n\t    this.cx = 3.0 * p1x;\n\t    this.bx = 3.0 * (p2x - p1x) - this.cx;\n\t    this.ax = 1.0 - this.cx - this.bx;\n\n\t    this.cy = 3.0 * p1y;\n\t    this.by = 3.0 * (p2y - p1y) - this.cy;\n\t    this.ay = 1.0 - this.cy - this.by;\n\n\t    this.p1x = p1x;\n\t    this.p1y = p1y;\n\t    this.p2x = p2x;\n\t    this.p2y = p2y;\n\t}\n\n\tUnitBezier.prototype = {\n\t    sampleCurveX: function (t) {\n\t        // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n\t        return ((this.ax * t + this.bx) * t + this.cx) * t;\n\t    },\n\n\t    sampleCurveY: function (t) {\n\t        return ((this.ay * t + this.by) * t + this.cy) * t;\n\t    },\n\n\t    sampleCurveDerivativeX: function (t) {\n\t        return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n\t    },\n\n\t    solveCurveX: function (x, epsilon) {\n\t        if (epsilon === undefined) epsilon = 1e-6;\n\n\t        if (x < 0.0) return 0.0;\n\t        if (x > 1.0) return 1.0;\n\n\t        var t = x;\n\n\t        // First try a few iterations of Newton's method - normally very fast.\n\t        for (var i = 0; i < 8; i++) {\n\t            var x2 = this.sampleCurveX(t) - x;\n\t            if (Math.abs(x2) < epsilon) return t;\n\n\t            var d2 = this.sampleCurveDerivativeX(t);\n\t            if (Math.abs(d2) < 1e-6) break;\n\n\t            t = t - x2 / d2;\n\t        }\n\n\t        // Fall back to the bisection method for reliability.\n\t        var t0 = 0.0;\n\t        var t1 = 1.0;\n\t        t = x;\n\n\t        for (i = 0; i < 20; i++) {\n\t            x2 = this.sampleCurveX(t);\n\t            if (Math.abs(x2 - x) < epsilon) break;\n\n\t            if (x > x2) {\n\t                t0 = t;\n\t            } else {\n\t                t1 = t;\n\t            }\n\n\t            t = (t1 - t0) * 0.5 + t0;\n\t        }\n\n\t        return t;\n\t    },\n\n\t    solve: function (x, epsilon) {\n\t        return this.sampleCurveY(this.solveCurveX(x, epsilon));\n\t    }\n\t};\n\treturn unitbezier;\n}\n\nvar unitbezierExports = requireUnitbezier();\nvar UnitBezier = /*@__PURE__*/getDefaultExportFromCjs(unitbezierExports);\n\nclass Interpolate {\n    constructor(type, operator, interpolation, input, stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static interpolationFactor(interpolation, input, lower, upper) {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        }\n        else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        }\n        else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n    static parse(args, context) {\n        let [operator, interpolation, input, ...rest] = args;\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error('Expected an interpolation type expression.', 1);\n        }\n        if (interpolation[0] === 'linear') {\n            interpolation = { name: 'linear' };\n        }\n        else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error('Exponential interpolation requires a numeric base.', 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        }\n        else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: controlPoints\n            };\n        }\n        else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error('Expected an even number of arguments.');\n        }\n        input = context.parse(input, 2, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        }\n        else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n        if (!verifyType(outputType, NumberType) &&\n            !verifyType(outputType, ProjectionDefinitionType) &&\n            !verifyType(outputType, ColorType) &&\n            !verifyType(outputType, PaddingType) &&\n            !verifyType(outputType, VariableAnchorOffsetCollectionType) &&\n            !verifyType(outputType, array(NumberType))) {\n            return context.error(`Type ${typeToString(outputType)} is not interpolatable.`);\n        }\n        return new Interpolate(outputType, operator, interpolation, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n        switch (this.operator) {\n            case 'interpolate':\n                switch (this.type.kind) {\n                    case 'number':\n                        return interpolateNumber(outputLower, outputUpper, t);\n                    case 'color':\n                        return Color.interpolate(outputLower, outputUpper, t);\n                    case 'padding':\n                        return Padding.interpolate(outputLower, outputUpper, t);\n                    case 'variableAnchorOffsetCollection':\n                        return VariableAnchorOffsetCollection.interpolate(outputLower, outputUpper, t);\n                    case 'array':\n                        return interpolateArray(outputLower, outputUpper, t);\n                    case 'projectionDefinition':\n                        return ProjectionDefinition.interpolate(outputLower, outputUpper, t);\n                }\n            case 'interpolate-hcl':\n                return Color.interpolate(outputLower, outputUpper, t, 'hcl');\n            case 'interpolate-lab':\n                return Color.interpolate(outputLower, outputUpper, t, 'lab');\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    }\n    else if (base === 1) {\n        return progress / difference;\n    }\n    else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\nconst interpolateFactory = {\n    color: Color.interpolate,\n    number: interpolateNumber,\n    padding: Padding.interpolate,\n    variableAnchorOffsetCollection: VariableAnchorOffsetCollection.interpolate,\n    array: interpolateArray\n};\n\nclass Coalesce {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expected at least one argument.');\n        }\n        let outputType = null;\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, { typeAnnotation: 'omit' });\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        if (!outputType)\n            throw new Error('No output type');\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce(outputType, parsedArgs);\n    }\n    evaluate(ctx) {\n        let result = null;\n        let argCount = 0;\n        let requestedImageName;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image name so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                if (!requestedImageName) {\n                    requestedImageName = result.name;\n                }\n                result = null;\n                if (argCount === this.args.length) {\n                    result = requestedImageName;\n                }\n            }\n            if (result !== null)\n                break;\n        }\n        return result;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nfunction isComparableType(op, type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    }\n    else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\nfunction eq(ctx, a, b) { return a === b; }\nfunction neq(ctx, a, b) { return a !== b; }\nfunction lt(ctx, a, b) { return a < b; }\nfunction gt(ctx, a, b) { return a > b; }\nfunction lteq(ctx, a, b) { return a <= b; }\nfunction gteq(ctx, a, b) { return a >= b; }\nfunction eqCollate(ctx, a, b, c) { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx, a, b, c) { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx, a, b, c) { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx, a, b, c) { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx, a, b, c) { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx, a, b, c) { return c.compare(a, b) >= 0; }\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op, compareBasic, compareWithCollator) {\n    const isOrderComparison = op !== '==' && op !== '!=';\n    return class Comparison {\n        constructor(lhs, rhs, collator) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n        static parse(args, context) {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error('Expected two or three arguments.');\n            const op = args[0];\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs)\n                return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${typeToString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs)\n                return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${typeToString(rhs.type)}'.`);\n            }\n            if (lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value') {\n                return context.error(`Cannot compare types '${typeToString(lhs.type)}' and '${typeToString(rhs.type)}'.`);\n            }\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                }\n                else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n            let collator = null;\n            if (args.length === 4) {\n                if (lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value') {\n                    return context.error('Cannot use collator to compare non-string types.');\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator)\n                    return null;\n            }\n            return new Comparison(lhs, rhs, collator);\n        }\n        evaluate(ctx) {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n        eachChild(fn) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n        outputDefined() {\n            return true;\n        }\n    };\n}\nconst Equals = makeComparison('==', eq, eqCollate);\nconst NotEquals = makeComparison('!=', neq, neqCollate);\nconst LessThan = makeComparison('<', lt, ltCollate);\nconst GreaterThan = makeComparison('>', gt, gtCollate);\nconst LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nconst GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n\nclass CollatorExpression {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error('Expected one argument.');\n        const options = args[1];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error('Collator options argument must be an object.');\n        const caseSensitive = context.parse(options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive)\n            return null;\n        const diacriticSensitive = context.parse(options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive)\n            return null;\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n    evaluate(ctx) {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n    eachChild(fn) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n    outputDefined() {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n}\n\nclass NumberFormat {\n    constructor(number, locale, currency, minFractionDigits, maxFractionDigits) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error('Expected two arguments.');\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number)\n            return null;\n        const options = args[2];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error('NumberFormat options argument must be an object.');\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency)\n                return null;\n        }\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits)\n                return null;\n        }\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits)\n                return null;\n        }\n        return new NumberFormat(number, locale, currency, minFractionDigits, maxFractionDigits);\n    }\n    evaluate(ctx) {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [], {\n            style: this.currency ? 'currency' : 'decimal',\n            currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n            minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n            maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n        }).format(this.number.evaluate(ctx));\n    }\n    eachChild(fn) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass FormatExpression {\n    constructor(sections) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expected at least one argument.');\n        }\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object') {\n            return context.error('First argument must be an image or text section.');\n        }\n        const sections = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = args[i];\n            if (nextTokenMayBeObject && typeof arg === 'object' && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale)\n                        return null;\n                }\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font)\n                        return null;\n                }\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor)\n                        return null;\n                }\n                let verticalAlign = null;\n                if (arg['vertical-align']) {\n                    if (typeof arg['vertical-align'] === 'string' && !VERTICAL_ALIGN_OPTIONS.includes(arg['vertical-align'])) {\n                        return context.error(`'vertical-align' must be one of: 'bottom', 'center', 'top' but found '${arg['vertical-align']}' instead.`);\n                    }\n                    verticalAlign = context.parse(arg['vertical-align'], 1, StringType);\n                    if (!verticalAlign)\n                        return null;\n                }\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n                lastExpression.verticalAlign = verticalAlign;\n            }\n            else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content)\n                    return null;\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error('Formatted text type must be \\'string\\', \\'value\\', \\'image\\' or \\'null\\'.');\n                nextTokenMayBeObject = true;\n                sections.push({ content, scale: null, font: null, textColor: null, verticalAlign: null });\n            }\n        }\n        return new FormatExpression(sections);\n    }\n    evaluate(ctx) {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null, section.verticalAlign ? section.verticalAlign.evaluate(ctx) : null);\n            }\n            return new FormattedSection(valueToString(evaluatedContent), null, section.scale ? section.scale.evaluate(ctx) : null, section.font ? section.font.evaluate(ctx).join(',') : null, section.textColor ? section.textColor.evaluate(ctx) : null, section.verticalAlign ? section.verticalAlign.evaluate(ctx) : null);\n        };\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n    eachChild(fn) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n            if (section.verticalAlign) {\n                fn(section.verticalAlign);\n            }\n        }\n    }\n    outputDefined() {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n}\n\nclass ImageExpression {\n    constructor(input) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2) {\n            return context.error('Expected two arguments.');\n        }\n        const name = context.parse(args[1], 1, StringType);\n        if (!name)\n            return context.error('No image name provided.');\n        return new ImageExpression(name);\n    }\n    evaluate(ctx) {\n        const evaluatedImageName = this.input.evaluate(ctx);\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages)\n            value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n        return value;\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n}\n\nclass Length {\n    constructor(input) {\n        this.type = NumberType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n        const input = context.parse(args[1], 1);\n        if (!input)\n            return null;\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${typeToString(input.type)} instead.`);\n        return new Length(input);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            // The length may be affected by surrogate pairs.\n            return [...input].length;\n        }\n        else if (Array.isArray(input)) {\n            return input.length;\n        }\n        else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${typeToString(typeOf(input))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nconst EXTENT = 8192;\nfunction getTileCoordinates(p, canonical) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\nfunction getLngLatFromTileCoord(coord, canonical) {\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    const x = (coord[0] / EXTENT + canonical.x) / tilesAtZoom;\n    const y = (coord[1] / EXTENT + canonical.y) / tilesAtZoom;\n    return [lngFromMercatorXfromLng(x), latFromMercatorY(y)];\n}\nfunction mercatorXfromLng(lng) {\n    return (180 + lng) / 360;\n}\nfunction lngFromMercatorXfromLng(mercatorX) {\n    return mercatorX * 360 - 180;\n}\nfunction mercatorYfromLat(lat) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\nfunction latFromMercatorY(mercatorY) {\n    return 360 / Math.PI * Math.atan(Math.exp((180 - mercatorY * 360) * Math.PI / 180)) - 90;\n}\nfunction updateBBox(bbox, coord) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\nfunction boxWithinBox(bbox1, bbox2) {\n    if (bbox1[0] <= bbox2[0])\n        return false;\n    if (bbox1[2] >= bbox2[2])\n        return false;\n    if (bbox1[1] <= bbox2[1])\n        return false;\n    if (bbox1[3] >= bbox2[3])\n        return false;\n    return true;\n}\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\nfunction pointOnBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction segmentIntersectSegment(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0)\n        return false;\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b))\n        return true;\n    return false;\n}\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (segmentIntersectSegment(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings, trueIfOnBoundary = false) {\n    let inside = false;\n    for (const ring of rings) {\n        for (let j = 0; j < ring.length - 1; j++) {\n            if (pointOnBoundary(point, ring[j], ring[j + 1]))\n                return trueIfOnBoundary;\n            if (rayIntersect(point, ring[j], ring[j + 1]))\n                inside = !inside;\n        }\n    }\n    return inside;\n}\nfunction pointWithinPolygons(point, polygons) {\n    for (const polygon of polygons) {\n        if (pointWithinPolygon(point, polygon))\n            return true;\n    }\n    return false;\n}\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (const point of line) {\n        if (!pointWithinPolygon(point, polygon)) {\n            return false;\n        }\n    }\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction lineStringWithinPolygons(line, polygons) {\n    for (const polygon of polygons) {\n        if (lineStringWithinPolygon(line, polygon))\n            return true;\n    }\n    return false;\n}\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 = (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0))\n        return true;\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox, canonical) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\nfunction getTilePolygons(coordinates, bbox, canonical) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\nfunction pointsWithinPolygons(ctx, polygonGeometry) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const canonical = ctx.canonicalID();\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nfunction linesWithinPolygons(ctx, polygonGeometry) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const canonical = ctx.canonicalID();\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nclass Within {\n    constructor(geojson, geometries) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                const polygonsCoords = [];\n                for (const polygon of geojson.features) {\n                    const { type, coordinates } = polygon.geometry;\n                    if (type === 'Polygon') {\n                        polygonsCoords.push(coordinates);\n                    }\n                    if (type === 'MultiPolygon') {\n                        polygonsCoords.push(...coordinates);\n                    }\n                }\n                if (polygonsCoords.length) {\n                    const multipolygonWrapper = {\n                        type: 'MultiPolygon',\n                        coordinates: polygonsCoords\n                    };\n                    return new Within(geojson, multipolygonWrapper);\n                }\n            }\n            else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            }\n            else if (geojson.type === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error('\\'within\\' expression requires valid geojson object that contains polygon geometry type.');\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nclass TinyQueue {\n    constructor(data = [], compare = (a, b) => (a < b ? -1 : a > b ? 1 : 0)) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this._up(this.length++);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n\n        if (--this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let bestChild = (pos << 1) + 1; // initially it is the left child\n            const right = bestChild + 1;\n\n            if (right < this.length && compare(data[right], data[bestChild]) < 0) {\n                bestChild = right;\n            }\n            if (compare(data[bestChild], item) >= 0) break;\n\n            data[pos] = data[bestChild];\n            pos = bestChild;\n        }\n\n        data[pos] = item;\n    }\n}\n\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nfunction quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * Classifies an array of rings into polygons with outer rings and holes\n * @param rings - the rings to classify\n * @param maxRings - the maximum number of rings to include in a polygon, use 0 to include all rings\n * @returns an array of polygons with internal rings as holes\n */\nfunction classifyRings(rings, maxRings) {\n    const len = rings.length;\n    if (len <= 1)\n        return [rings];\n    const polygons = [];\n    let polygon;\n    let ccw;\n    for (const ring of rings) {\n        const area = calculateSignedArea(ring);\n        if (area === 0)\n            continue;\n        ring.area = Math.abs(area);\n        if (ccw === undefined)\n            ccw = area < 0;\n        if (ccw === area < 0) {\n            if (polygon)\n                polygons.push(polygon);\n            polygon = [ring];\n        }\n        else {\n            polygon.push(ring);\n        }\n    }\n    if (polygon)\n        polygons.push(polygon);\n    // Earcut performance degrades with the # of rings in a polygon. For this\n    // reason, we limit strip out all but the `maxRings` largest rings.\n    if (maxRings > 1) {\n        for (let j = 0; j < polygons.length; j++) {\n            if (polygons[j].length <= maxRings)\n                continue;\n            quickselect(polygons[j], maxRings, 1, polygons[j].length - 1, compareAreas);\n            polygons[j] = polygons[j].slice(0, maxRings);\n        }\n    }\n    return polygons;\n}\nfunction compareAreas(a, b) {\n    return b.area - a.area;\n}\n/**\n * Returns the signed area for the polygon ring.  Positive areas are exterior rings and\n * have a clockwise winding.  Negative areas are interior rings and have a counter clockwise\n * ordering.\n *\n * @param ring - Exterior or interior ring\n * @returns Signed area\n */\nfunction calculateSignedArea(ring) {\n    let sum = 0;\n    for (let i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n\n// This is taken from https://github.com/mapbox/cheap-ruler/ in order to take only the relevant parts\n// Values that define WGS84 ellipsoid model of the Earth\nconst RE = 6378.137; // equatorial radius\nconst FE = 1 / 298.257223563; // flattening\nconst E2 = FE * (2 - FE);\nconst RAD = Math.PI / 180;\nclass CheapRuler {\n    constructor(lat) {\n        // Curvature formulas from https://en.wikipedia.org/wiki/Earth_radius#Meridional\n        const m = RAD * RE * 1000;\n        const coslat = Math.cos(lat * RAD);\n        const w2 = 1 / (1 - E2 * (1 - coslat * coslat));\n        const w = Math.sqrt(w2);\n        // multipliers for converting longitude and latitude degrees into distance\n        this.kx = m * w * coslat; // based on normal radius of curvature\n        this.ky = m * w * w2 * (1 - E2); // based on meridional radius of curvature\n    }\n    /**\n     * Given two points of the form [longitude, latitude], returns the distance.\n     *\n     * @param a - point [longitude, latitude]\n     * @param b - point [longitude, latitude]\n     * @returns distance\n     * @example\n     * const distance = ruler.distance([30.5, 50.5], [30.51, 50.49]);\n     * //=distance\n     */\n    distance(a, b) {\n        const dx = this.wrap(a[0] - b[0]) * this.kx;\n        const dy = (a[1] - b[1]) * this.ky;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n    /**\n     * Returns an object of the form {point, index, t}, where point is closest point on the line\n     * from the given point, index is the start index of the segment with the closest point,\n     * and t is a parameter from 0 to 1 that indicates where the closest point is on that segment.\n     *\n     * @param line - an array of points that form the line\n     * @param p - point [longitude, latitude]\n     * @returns the nearest point, its index in the array and the proportion along the line\n     * @example\n     * const point = ruler.pointOnLine(line, [-67.04, 50.5]).point;\n     * //=point\n     */\n    pointOnLine(line, p) {\n        let minDist = Infinity;\n        let minX, minY, minI, minT;\n        for (let i = 0; i < line.length - 1; i++) {\n            let x = line[i][0];\n            let y = line[i][1];\n            let dx = this.wrap(line[i + 1][0] - x) * this.kx;\n            let dy = (line[i + 1][1] - y) * this.ky;\n            let t = 0;\n            if (dx !== 0 || dy !== 0) {\n                t = (this.wrap(p[0] - x) * this.kx * dx + (p[1] - y) * this.ky * dy) / (dx * dx + dy * dy);\n                if (t > 1) {\n                    x = line[i + 1][0];\n                    y = line[i + 1][1];\n                }\n                else if (t > 0) {\n                    x += (dx / this.kx) * t;\n                    y += (dy / this.ky) * t;\n                }\n            }\n            dx = this.wrap(p[0] - x) * this.kx;\n            dy = (p[1] - y) * this.ky;\n            const sqDist = dx * dx + dy * dy;\n            if (sqDist < minDist) {\n                minDist = sqDist;\n                minX = x;\n                minY = y;\n                minI = i;\n                minT = t;\n            }\n        }\n        return {\n            point: [minX, minY],\n            index: minI,\n            t: Math.max(0, Math.min(1, minT))\n        };\n    }\n    wrap(deg) {\n        while (deg < -180)\n            deg += 360;\n        while (deg > 180)\n            deg -= 360;\n        return deg;\n    }\n}\n\nconst MinPointsSize = 100;\nconst MinLinePointsSize = 50;\nfunction compareDistPair(a, b) {\n    return b[0] - a[0];\n}\nfunction getRangeSize(range) {\n    return range[1] - range[0] + 1;\n}\nfunction isRangeSafe(range, threshold) {\n    return range[1] >= range[0] && range[1] < threshold;\n}\nfunction splitRange(range, isLine) {\n    if (range[0] > range[1]) {\n        return [null, null];\n    }\n    const size = getRangeSize(range);\n    if (isLine) {\n        if (size === 2) {\n            return [range, null];\n        }\n        const size1 = Math.floor(size / 2);\n        return [[range[0], range[0] + size1],\n            [range[0] + size1, range[1]]];\n    }\n    if (size === 1) {\n        return [range, null];\n    }\n    const size1 = Math.floor(size / 2) - 1;\n    return [[range[0], range[0] + size1],\n        [range[0] + size1 + 1, range[1]]];\n}\nfunction getBBox(coords, range) {\n    if (!isRangeSafe(range, coords.length)) {\n        return [Infinity, Infinity, -Infinity, -Infinity];\n    }\n    const bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    for (let i = range[0]; i <= range[1]; ++i) {\n        updateBBox(bbox, coords[i]);\n    }\n    return bbox;\n}\nfunction getPolygonBBox(polygon) {\n    const bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    for (const ring of polygon) {\n        for (const coord of ring) {\n            updateBBox(bbox, coord);\n        }\n    }\n    return bbox;\n}\nfunction isValidBBox(bbox) {\n    return bbox[0] !== -Infinity && bbox[1] !== -Infinity && bbox[2] !== Infinity && bbox[3] !== Infinity;\n}\n// Calculate the distance between two bounding boxes.\n// Calculate the delta in x and y direction, and use two fake points {0.0, 0.0}\n// and {dx, dy} to calculate the distance. Distance will be 0.0 if bounding box are overlapping.\nfunction bboxToBBoxDistance(bbox1, bbox2, ruler) {\n    if (!isValidBBox(bbox1) || !isValidBBox(bbox2)) {\n        return NaN;\n    }\n    let dx = 0.0;\n    let dy = 0.0;\n    // bbox1 in left side\n    if (bbox1[2] < bbox2[0]) {\n        dx = bbox2[0] - bbox1[2];\n    }\n    // bbox1 in right side\n    if (bbox1[0] > bbox2[2]) {\n        dx = bbox1[0] - bbox2[2];\n    }\n    // bbox1 in above side\n    if (bbox1[1] > bbox2[3]) {\n        dy = bbox1[1] - bbox2[3];\n    }\n    // bbox1 in down side\n    if (bbox1[3] < bbox2[1]) {\n        dy = bbox2[1] - bbox1[3];\n    }\n    return ruler.distance([0.0, 0.0], [dx, dy]);\n}\nfunction pointToLineDistance(point, line, ruler) {\n    const nearestPoint = ruler.pointOnLine(line, point);\n    return ruler.distance(point, nearestPoint.point);\n}\nfunction segmentToSegmentDistance(p1, p2, q1, q2, ruler) {\n    const dist1 = Math.min(pointToLineDistance(p1, [q1, q2], ruler), pointToLineDistance(p2, [q1, q2], ruler));\n    const dist2 = Math.min(pointToLineDistance(q1, [p1, p2], ruler), pointToLineDistance(q2, [p1, p2], ruler));\n    return Math.min(dist1, dist2);\n}\nfunction lineToLineDistance(line1, range1, line2, range2, ruler) {\n    const rangeSafe = isRangeSafe(range1, line1.length) && isRangeSafe(range2, line2.length);\n    if (!rangeSafe) {\n        return Infinity;\n    }\n    let dist = Infinity;\n    for (let i = range1[0]; i < range1[1]; ++i) {\n        const p1 = line1[i];\n        const p2 = line1[i + 1];\n        for (let j = range2[0]; j < range2[1]; ++j) {\n            const q1 = line2[j];\n            const q2 = line2[j + 1];\n            if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                return 0.0;\n            }\n            dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n        }\n    }\n    return dist;\n}\nfunction pointsToPointsDistance(points1, range1, points2, range2, ruler) {\n    const rangeSafe = isRangeSafe(range1, points1.length) && isRangeSafe(range2, points2.length);\n    if (!rangeSafe) {\n        return NaN;\n    }\n    let dist = Infinity;\n    for (let i = range1[0]; i <= range1[1]; ++i) {\n        for (let j = range2[0]; j <= range2[1]; ++j) {\n            dist = Math.min(dist, ruler.distance(points1[i], points2[j]));\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n    }\n    return dist;\n}\nfunction pointToPolygonDistance(point, polygon, ruler) {\n    if (pointWithinPolygon(point, polygon, true)) {\n        return 0.0;\n    }\n    let dist = Infinity;\n    for (const ring of polygon) {\n        const front = ring[0];\n        const back = ring[ring.length - 1];\n        if (front !== back) {\n            dist = Math.min(dist, pointToLineDistance(point, [back, front], ruler));\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n        const nearestPoint = ruler.pointOnLine(ring, point);\n        dist = Math.min(dist, ruler.distance(point, nearestPoint.point));\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction lineToPolygonDistance(line, range, polygon, ruler) {\n    if (!isRangeSafe(range, line.length)) {\n        return NaN;\n    }\n    for (let i = range[0]; i <= range[1]; ++i) {\n        if (pointWithinPolygon(line[i], polygon, true)) {\n            return 0.0;\n        }\n    }\n    let dist = Infinity;\n    for (let i = range[0]; i < range[1]; ++i) {\n        const p1 = line[i];\n        const p2 = line[i + 1];\n        for (const ring of polygon) {\n            for (let j = 0, len = ring.length, k = len - 1; j < len; k = j++) {\n                const q1 = ring[k];\n                const q2 = ring[j];\n                if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                    return 0.0;\n                }\n                dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n            }\n        }\n    }\n    return dist;\n}\nfunction polygonIntersect(poly1, poly2) {\n    for (const ring of poly1) {\n        for (const point of ring) {\n            if (pointWithinPolygon(point, poly2, true)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction polygonToPolygonDistance(polygon1, polygon2, ruler, currentMiniDist = Infinity) {\n    const bbox1 = getPolygonBBox(polygon1);\n    const bbox2 = getPolygonBBox(polygon2);\n    if (currentMiniDist !== Infinity && bboxToBBoxDistance(bbox1, bbox2, ruler) >= currentMiniDist) {\n        return currentMiniDist;\n    }\n    if (boxWithinBox(bbox1, bbox2)) {\n        if (polygonIntersect(polygon1, polygon2)) {\n            return 0.0;\n        }\n    }\n    else if (polygonIntersect(polygon2, polygon1)) {\n        return 0.0;\n    }\n    let dist = Infinity;\n    for (const ring1 of polygon1) {\n        for (let i = 0, len1 = ring1.length, l = len1 - 1; i < len1; l = i++) {\n            const p1 = ring1[l];\n            const p2 = ring1[i];\n            for (const ring2 of polygon2) {\n                for (let j = 0, len2 = ring2.length, k = len2 - 1; j < len2; k = j++) {\n                    const q1 = ring2[k];\n                    const q2 = ring2[j];\n                    if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                        return 0.0;\n                    }\n                    dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n                }\n            }\n        }\n    }\n    return dist;\n}\nfunction updateQueue(distQueue, miniDist, ruler, points, polyBBox, rangeA) {\n    if (!rangeA) {\n        return;\n    }\n    const tempDist = bboxToBBoxDistance(getBBox(points, rangeA), polyBBox, ruler);\n    // Insert new pair to the queue if the bbox distance is less than\n    // miniDist, The pair with biggest distance will be at the top\n    if (tempDist < miniDist) {\n        distQueue.push([tempDist, rangeA, [0, 0]]);\n    }\n}\nfunction updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, range1, range2) {\n    if (!range1 || !range2) {\n        return;\n    }\n    const tempDist = bboxToBBoxDistance(getBBox(pointSet1, range1), getBBox(pointSet2, range2), ruler);\n    // Insert new pair to the queue if the bbox distance is less than\n    // miniDist, The pair with biggest distance will be at the top\n    if (tempDist < miniDist) {\n        distQueue.push([tempDist, range1, range2]);\n    }\n}\n// Divide and conquer, the time complexity is O(n*lgn), faster than Brute force\n// O(n*n) Most of the time, use index for in-place processing.\nfunction pointsToPolygonDistance(points, isLine, polygon, ruler, currentMiniDist = Infinity) {\n    let miniDist = Math.min(ruler.distance(points[0], polygon[0][0]), currentMiniDist);\n    if (miniDist === 0.0) {\n        return miniDist;\n    }\n    const distQueue = new TinyQueue([[0, [0, points.length - 1], [0, 0]]], compareDistPair);\n    const polyBBox = getPolygonBBox(polygon);\n    while (distQueue.length > 0) {\n        const distPair = distQueue.pop();\n        if (distPair[0] >= miniDist) {\n            continue;\n        }\n        const range = distPair[1];\n        // In case the set size are relatively small, we could use brute-force directly\n        const threshold = isLine ? MinLinePointsSize : MinPointsSize;\n        if (getRangeSize(range) <= threshold) {\n            if (!isRangeSafe(range, points.length)) {\n                return NaN;\n            }\n            if (isLine) {\n                const tempDist = lineToPolygonDistance(points, range, polygon, ruler);\n                if (isNaN(tempDist) || tempDist === 0.0) {\n                    return tempDist;\n                }\n                miniDist = Math.min(miniDist, tempDist);\n            }\n            else {\n                for (let i = range[0]; i <= range[1]; ++i) {\n                    const tempDist = pointToPolygonDistance(points[i], polygon, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return 0.0;\n                    }\n                }\n            }\n        }\n        else {\n            const newRangesA = splitRange(range, isLine);\n            updateQueue(distQueue, miniDist, ruler, points, polyBBox, newRangesA[0]);\n            updateQueue(distQueue, miniDist, ruler, points, polyBBox, newRangesA[1]);\n        }\n    }\n    return miniDist;\n}\nfunction pointSetToPointSetDistance(pointSet1, isLine1, pointSet2, isLine2, ruler, currentMiniDist = Infinity) {\n    let miniDist = Math.min(currentMiniDist, ruler.distance(pointSet1[0], pointSet2[0]));\n    if (miniDist === 0.0) {\n        return miniDist;\n    }\n    const distQueue = new TinyQueue([[0, [0, pointSet1.length - 1], [0, pointSet2.length - 1]]], compareDistPair);\n    while (distQueue.length > 0) {\n        const distPair = distQueue.pop();\n        if (distPair[0] >= miniDist) {\n            continue;\n        }\n        const rangeA = distPair[1];\n        const rangeB = distPair[2];\n        const threshold1 = isLine1 ? MinLinePointsSize : MinPointsSize;\n        const threshold2 = isLine2 ? MinLinePointsSize : MinPointsSize;\n        // In case the set size are relatively small, we could use brute-force directly\n        if (getRangeSize(rangeA) <= threshold1 && getRangeSize(rangeB) <= threshold2) {\n            if (!isRangeSafe(rangeA, pointSet1.length) && isRangeSafe(rangeB, pointSet2.length)) {\n                return NaN;\n            }\n            let tempDist;\n            if (isLine1 && isLine2) {\n                tempDist = lineToLineDistance(pointSet1, rangeA, pointSet2, rangeB, ruler);\n                miniDist = Math.min(miniDist, tempDist);\n            }\n            else if (isLine1 && !isLine2) {\n                const sublibe = pointSet1.slice(rangeA[0], rangeA[1] + 1);\n                for (let i = rangeB[0]; i <= rangeB[1]; ++i) {\n                    tempDist = pointToLineDistance(pointSet2[i], sublibe, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return miniDist;\n                    }\n                }\n            }\n            else if (!isLine1 && isLine2) {\n                const sublibe = pointSet2.slice(rangeB[0], rangeB[1] + 1);\n                for (let i = rangeA[0]; i <= rangeA[1]; ++i) {\n                    tempDist = pointToLineDistance(pointSet1[i], sublibe, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return miniDist;\n                    }\n                }\n            }\n            else {\n                tempDist = pointsToPointsDistance(pointSet1, rangeA, pointSet2, rangeB, ruler);\n                miniDist = Math.min(miniDist, tempDist);\n            }\n        }\n        else {\n            const newRangesA = splitRange(rangeA, isLine1);\n            const newRangesB = splitRange(rangeB, isLine2);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[0]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[1]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[0]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[1]);\n        }\n    }\n    return miniDist;\n}\nfunction pointToGeometryDistance(ctx, geometries) {\n    const tilePoints = ctx.geometry();\n    const pointPosition = tilePoints.flat().map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n    if (tilePoints.length === 0) {\n        return NaN;\n    }\n    const ruler = new CheapRuler(pointPosition[0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        switch (geometry.type) {\n            case 'Point':\n                dist = Math.min(dist, pointSetToPointSetDistance(pointPosition, false, [geometry.coordinates], false, ruler, dist));\n                break;\n            case 'LineString':\n                dist = Math.min(dist, pointSetToPointSetDistance(pointPosition, false, geometry.coordinates, true, ruler, dist));\n                break;\n            case 'Polygon':\n                dist = Math.min(dist, pointsToPolygonDistance(pointPosition, false, geometry.coordinates, ruler, dist));\n                break;\n        }\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction lineStringToGeometryDistance(ctx, geometries) {\n    const tileLine = ctx.geometry();\n    const linePositions = tileLine.flat().map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n    if (tileLine.length === 0) {\n        return NaN;\n    }\n    const ruler = new CheapRuler(linePositions[0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        switch (geometry.type) {\n            case 'Point':\n                dist = Math.min(dist, pointSetToPointSetDistance(linePositions, true, [geometry.coordinates], false, ruler, dist));\n                break;\n            case 'LineString':\n                dist = Math.min(dist, pointSetToPointSetDistance(linePositions, true, geometry.coordinates, true, ruler, dist));\n                break;\n            case 'Polygon':\n                dist = Math.min(dist, pointsToPolygonDistance(linePositions, true, geometry.coordinates, ruler, dist));\n                break;\n        }\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction polygonToGeometryDistance(ctx, geometries) {\n    const tilePolygon = ctx.geometry();\n    if (tilePolygon.length === 0 || tilePolygon[0].length === 0) {\n        return NaN;\n    }\n    const polygons = classifyRings(tilePolygon, 0).map(polygon => {\n        return polygon.map(ring => {\n            return ring.map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n        });\n    });\n    const ruler = new CheapRuler(polygons[0][0][0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        for (const polygon of polygons) {\n            switch (geometry.type) {\n                case 'Point':\n                    dist = Math.min(dist, pointsToPolygonDistance([geometry.coordinates], false, polygon, ruler, dist));\n                    break;\n                case 'LineString':\n                    dist = Math.min(dist, pointsToPolygonDistance(geometry.coordinates, true, polygon, ruler, dist));\n                    break;\n                case 'Polygon':\n                    dist = Math.min(dist, polygonToPolygonDistance(polygon, geometry.coordinates, ruler, dist));\n                    break;\n            }\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n    }\n    return dist;\n}\nfunction toSimpleGeometry(geometry) {\n    if (geometry.type === 'MultiPolygon') {\n        return geometry.coordinates.map(polygon => {\n            return {\n                type: 'Polygon',\n                coordinates: polygon\n            };\n        });\n    }\n    if (geometry.type === 'MultiLineString') {\n        return geometry.coordinates.map(lineString => {\n            return {\n                type: 'LineString',\n                coordinates: lineString\n            };\n        });\n    }\n    if (geometry.type === 'MultiPoint') {\n        return geometry.coordinates.map(point => {\n            return {\n                type: 'Point',\n                coordinates: point\n            };\n        });\n    }\n    return [geometry];\n}\nclass Distance {\n    constructor(geojson, geometries) {\n        this.type = NumberType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'distance' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                return new Distance(geojson, geojson.features.map(feature => toSimpleGeometry(feature.geometry)).flat());\n            }\n            else if (geojson.type === 'Feature') {\n                return new Distance(geojson, toSimpleGeometry(geojson.geometry));\n            }\n            else if ('type' in geojson && 'coordinates' in geojson) {\n                return new Distance(geojson, toSimpleGeometry(geojson));\n            }\n        }\n        return context.error('\\'distance\\' expression requires valid geojson object that contains polygon geometry type.');\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointToGeometryDistance(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'LineString') {\n                return lineStringToGeometryDistance(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'Polygon') {\n                return polygonToGeometryDistance(ctx, this.geometries);\n            }\n        }\n        return NaN;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nconst expressions$1 = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within,\n    'distance': Distance\n};\n\nclass CompoundExpression {\n    constructor(name, type, evaluate, args) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n    evaluate(ctx) {\n        return this._evaluate(ctx, this.args);\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return false;\n    }\n    static parse(args, context) {\n        const op = args[0];\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n        const overloads = availableOverloads.filter(([signature]) => (!Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n        let signatureContext = null;\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, isExpressionConstant, context.path, null, context.scope);\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        }\n        else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed)\n                    return null;\n                actualTypes.push(typeToString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n        return null;\n    }\n    static register(registry, definitions) {\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error)\n        throw new RuntimeError(error);\n    return new Color(r / 255, g / 255, b / 255, alpha, false);\n}\nfunction has(key, obj) {\n    return key in obj;\n}\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\nfunction varargs(type) {\n    return { type };\n}\nCompoundExpression.register(expressions$1, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            const [r, g, b, a] = v.evaluate(ctx).rgb;\n            return [r * 255, g * 255, b * 255, a];\n        },\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[k.value] === v.value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === v.value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === v.value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => k.value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => v.value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => v.value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => v.value.indexOf(ctx.properties()[k.value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[k.value], v.value, 0, v.value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\nfunction stringifySignature(signature) {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(typeToString).join(', ')})`;\n    }\n    else {\n        return `(${typeToString(signature.type)}...)`;\n    }\n}\nfunction isExpressionConstant(expression) {\n    if (expression instanceof Var) {\n        return isExpressionConstant(expression.boundExpression);\n    }\n    else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    }\n    else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    }\n    else if (expression instanceof Within) {\n        return false;\n    }\n    else if (expression instanceof Distance) {\n        return false;\n    }\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isExpressionConstant(child);\n        }\n        else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'accumulated', 'is-supported-script']);\n}\nfunction isFeatureConstant(e) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        }\n        else if (e.name === 'feature-state') {\n            return false;\n        }\n        else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        }\n        else if (e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id') {\n            return false;\n        }\n        else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n    if (e instanceof Within) {\n        return false;\n    }\n    if (e instanceof Distance) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isStateConstant(e) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isGlobalPropertyConstant(e, properties) {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) {\n        return false;\n    }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) {\n            result = false;\n        }\n    });\n    return result;\n}\n\nfunction success(value) {\n    return { result: 'success', value };\n}\nfunction error(value) {\n    return { result: 'error', value };\n}\n\nfunction supportsPropertyExpression(spec) {\n    return spec['property-type'] === 'data-driven' || spec['property-type'] === 'cross-faded-data-driven';\n}\nfunction supportsZoomExpression(spec) {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\nfunction supportsInterpolation(spec) {\n    return !!spec.expression && spec.expression.interpolated;\n}\n\nfunction getType(val) {\n    if (val instanceof Number) {\n        return 'number';\n    }\n    else if (val instanceof String) {\n        return 'string';\n    }\n    else if (val instanceof Boolean) {\n        return 'boolean';\n    }\n    else if (Array.isArray(val)) {\n        return 'array';\n    }\n    else if (val === null) {\n        return 'null';\n    }\n    else {\n        return typeof val;\n    }\n}\n\nfunction isFunction$1(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\nfunction identityFunction(x) {\n    return x;\n}\nfunction createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n    if (isColor || propertySpec.type === 'padding') {\n        const parseFn = isColor ? Color.parse : Padding.parse;\n        parameters = extendBy({}, parameters);\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], parseFn(stop[1])];\n            });\n        }\n        if (parameters.default) {\n            parameters.default = parseFn(parameters.default);\n        }\n        else {\n            parameters.default = parseFn(propertySpec.default);\n        }\n    }\n    if (parameters.colorSpace && !isSupportedInterpolationColorSpace(parameters.colorSpace)) {\n        throw new Error(`Unknown color space: \"${parameters.colorSpace}\"`);\n    }\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    }\n    else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    }\n    else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n    }\n    else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    }\n    else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n        const interpolationType = { name: 'linear' };\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({ zoom }, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    }\n    else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            { name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1 } : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({ zoom }) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    }\n    else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce$1(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\nfunction coalesce$1(a, b, c) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n    if (c !== undefined)\n        return c;\n}\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce$1(evaluated, parameters.default, propertySpec.default);\n}\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number')\n        return coalesce$1(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1)\n        return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0])\n        return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0])\n        return parameters.stops[n - 1][1];\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    return parameters.stops[index][1];\n}\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n    // Edge cases\n    if (getType(input) !== 'number')\n        return coalesce$1(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1)\n        return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0])\n        return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0])\n        return parameters.stops[n - 1][1];\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(input, base, parameters.stops[index][0], parameters.stops[index + 1][0]);\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    const interp = interpolateFactory[propertySpec.type] || identityFunction;\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t, parameters.colorSpace);\n            }\n        };\n    }\n    return interp(outputLower, outputUpper, t, parameters.colorSpace);\n}\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    switch (propertySpec.type) {\n        case 'color':\n            input = Color.parse(input);\n            break;\n        case 'formatted':\n            input = Formatted.fromString(input.toString());\n            break;\n        case 'resolvedImage':\n            input = ResolvedImage.fromString(input.toString());\n            break;\n        case 'padding':\n            input = Padding.parse(input);\n            break;\n        default:\n            if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n                input = undefined;\n            }\n    }\n    return coalesce$1(input, parameters.default, propertySpec.default);\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    }\n    else if (base === 1) {\n        return progress / difference;\n    }\n    else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nclass StyleExpression {\n    constructor(expression, propertySpec) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        return this.expression.evaluate(this._evaluator);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        }\n        catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\nfunction isExpression(expression) {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in expressions$1;\n}\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nfunction createExpression(expression, propertySpec) {\n    const parser = new ParsingContext(expressions$1, isExpressionConstant, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined, propertySpec && propertySpec.type === 'string' ? { typeAnnotation: 'coerce' } : undefined);\n    if (!parsed) {\n        return error(parser.errors);\n    }\n    return success(new StyleExpression(parsed, propertySpec));\n}\nclass ZoomConstantExpression {\n    constructor(kind, expression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'constant' && !isStateConstant(expression.expression);\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\nclass ZoomDependentExpression {\n    constructor(kind, expression, zoomStops, interpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'camera' && !isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    interpolationFactor(input, lower, upper) {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        }\n        else {\n            return 0;\n        }\n    }\n}\nfunction isZoomExpression(expression) {\n    return expression._styleExpression !== undefined;\n}\nfunction createPropertyExpression(expressionInput, propertySpec) {\n    const expression = createExpression(expressionInput, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n    const parsed = expression.value.expression;\n    const isFeatureConstantResult = isFeatureConstant(parsed);\n    if (!isFeatureConstantResult && !supportsPropertyExpression(propertySpec)) {\n        return error([new ExpressionParsingError('', 'data expressions not supported')]);\n    }\n    const isZoomConstant = isGlobalPropertyConstant(parsed, ['zoom']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ExpressionParsingError('', 'zoom expressions not supported')]);\n    }\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ExpressionParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    }\n    else if (zoomCurve instanceof ExpressionParsingError) {\n        return error([zoomCurve]);\n    }\n    else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ExpressionParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n    if (!zoomCurve) {\n        return success(isFeatureConstantResult ?\n            new ZoomConstantExpression('constant', expression.value) :\n            new ZoomConstantExpression('source', expression.value));\n    }\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n    return success(isFeatureConstantResult ?\n        new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType) :\n        new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType));\n}\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nclass StylePropertyFunction {\n    constructor(parameters, specification) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extendBy(this, createFunction(this._parameters, this._specification));\n    }\n    static deserialize(serialized) {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n    static serialize(input) {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\nfunction normalizePropertyExpression(value, specification) {\n    if (isFunction$1(value)) {\n        return new StylePropertyFunction(value, specification);\n    }\n    else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n    }\n    else {\n        let constant = value;\n        if (specification.type === 'color' && typeof value === 'string') {\n            constant = Color.parse(value);\n        }\n        else if (specification.type === 'padding' && (typeof value === 'number' || Array.isArray(value))) {\n            constant = Padding.parse(value);\n        }\n        else if (specification.type === 'variableAnchorOffsetCollection' && Array.isArray(value)) {\n            constant = VariableAnchorOffsetCollection.parse(value);\n        }\n        else if (specification.type === 'projectionDefinition' && typeof value === 'string') {\n            constant = ProjectionDefinition.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression) {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n    }\n    else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n    }\n    else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n        result = expression;\n    }\n    if (result instanceof ExpressionParsingError) {\n        return result;\n    }\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ExpressionParsingError) {\n            result = childResult;\n        }\n        else if (!result && childResult) {\n            result = new ExpressionParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        }\n        else if (result && childResult && result !== childResult) {\n            result = new ExpressionParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n    return result;\n}\nfunction getExpectedType(spec) {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        padding: PaddingType,\n        projectionDefinition: ProjectionDefinitionType,\n        resolvedImage: ResolvedImageType,\n        variableAnchorOffsetCollection: VariableAnchorOffsetCollectionType\n    };\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n    return types[spec.type];\n}\nfunction getDefaultValue(spec) {\n    if (spec.type === 'color' && isFunction$1(spec.default)) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    }\n    else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    }\n    else if (spec.type === 'padding') {\n        return Padding.parse(spec.default) || null;\n    }\n    else if (spec.type === 'variableAnchorOffsetCollection') {\n        return VariableAnchorOffsetCollection.parse(spec.default) || null;\n    }\n    else if (spec.type === 'projectionDefinition') {\n        return ProjectionDefinition.parse(spec.default) || null;\n    }\n    else if (spec.default === undefined) {\n        return null;\n    }\n    else {\n        return spec.default;\n    }\n}\n\nfunction isExpressionFilter(filter) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n        case 'has':\n            return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n        case 'in':\n            return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n        case '!in':\n        case '!has':\n        case 'none':\n            return false;\n        case '==':\n        case '!=':\n        case '>':\n        case '>=':\n        case '<':\n        case '<=':\n            return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n        case 'any':\n        case 'all':\n            for (const f of filter.slice(1)) {\n                if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                    return false;\n                }\n            }\n            return true;\n        default:\n            return true;\n    }\n}\nconst filterSpec = {\n    'type': 'boolean',\n    'default': false,\n    'transition': false,\n    'property-type': 'data-driven',\n    'expression': {\n        'interpolated': false,\n        'parameters': ['zoom', 'feature']\n    }\n};\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter MapLibre filter\n * @returns {Function} filter-evaluating function\n */\nfunction featureFilter(filter) {\n    if (filter === null || filter === undefined) {\n        return { filter: () => true, needGeometry: false };\n    }\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter$1(filter);\n    }\n    const compiled = createExpression(filter, filterSpec);\n    if (compiled.result === 'error') {\n        throw new Error(compiled.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    }\n    else {\n        const needGeometry = geometryNeeded(filter);\n        return { filter: (globalProperties, feature, canonical) => compiled.value.evaluate(globalProperties, feature, {}, canonical),\n            needGeometry };\n    }\n}\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter))\n        return false;\n    if (filter[0] === 'within' || filter[0] === 'distance')\n        return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index]))\n            return true;\n    }\n    return false;\n}\nfunction convertFilter$1(filter) {\n    if (!filter)\n        return true;\n    const op = filter[0];\n    if (filter.length <= 1)\n        return (op !== 'any');\n    const converted = op === '==' ? convertComparisonOp$1(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp$1(filter[1], filter[2], '==')) :\n            op === '<' ||\n                op === '>' ||\n                op === '<=' ||\n                op === '>=' ? convertComparisonOp$1(filter[1], filter[2], op) :\n                op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n                    op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter$1)) :\n                        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter$1).map(convertNegation)) :\n                            op === 'in' ? convertInOp$1(filter[1], filter.slice(2)) :\n                                op === '!in' ? convertNegation(convertInOp$1(filter[1], filter.slice(2))) :\n                                    op === 'has' ? convertHasOp$1(filter[1]) :\n                                        op === '!has' ? convertNegation(convertHasOp$1(filter[1])) :\n                                            true;\n    return converted;\n}\nfunction convertComparisonOp$1(property, value, op) {\n    switch (property) {\n        case '$type':\n            return [`filter-type-${op}`, value];\n        case '$id':\n            return [`filter-id-${op}`, value];\n        default:\n            return [`filter-${op}`, property, value];\n    }\n}\nfunction convertDisjunctionOp(filters) {\n    return ['any'].concat(filters.map(convertFilter$1));\n}\nfunction convertInOp$1(property, values) {\n    if (values.length === 0) {\n        return false;\n    }\n    switch (property) {\n        case '$type':\n            return ['filter-type-in', ['literal', values]];\n        case '$id':\n            return ['filter-id-in', ['literal', values]];\n        default:\n            if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n                return ['filter-in-large', property, ['literal', values.sort(compare)]];\n            }\n            else {\n                return ['filter-in-small', property, ['literal', values]];\n            }\n    }\n}\nfunction convertHasOp$1(property) {\n    switch (property) {\n        case '$type':\n            return true;\n        case '$id':\n            return ['filter-has-id'];\n        default:\n            return ['filter-has', property];\n    }\n}\nfunction convertNegation(filter) {\n    return ['!', filter];\n}\n\n/*\n * Convert the given filter to an expression, storing the expected types for\n * any feature properties referenced in expectedTypes.\n *\n * These expected types are needed in order to construct preflight type checks\n * needed for handling 'any' filters. A preflight type check is necessary in\n * order to mimic legacy filters' semantics around expected type mismatches.\n * For example, consider the legacy filter:\n *\n *     [\"any\", [\"all\", [\">\", \"y\", 0], [\">\", \"y\", 0]], [\">\", \"x\", 0]]\n *\n * Naively, we might convert this to the expression:\n *\n *     [\"any\", [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]], [\">\", [\"get\", \"x\"], 0]]\n *\n * But if we tried to evaluate this against, say `{x: 1, y: null, z: 0}`, the\n * [\">\", [\"get\", \"y\"], 0] would cause an evaluation error, leading to the\n * entire filter returning false. Legacy filter semantics, though, ask for\n * [\">\", \"y\", 0] to simply return `false` when `y` is of the wrong type,\n * allowing the subsequent terms of the outer \"any\" expression to be evaluated\n * (resulting, in this case, in a `true` value, because x > 0).\n *\n * We account for this by inserting a preflight type-checking expression before\n * each \"any\" term, allowing us to avoid evaluating the actual converted filter\n * if any type mismatches would cause it to produce an evaluation error:\n *\n *     [\"any\",\n *       [\"case\",\n *         [\"all\", [\"==\", [\"typeof\", [\"get\", \"y\"]], \"number\"], [\"==\", [\"typeof\", [\"get\", \"z\"], \"number]],\n *         [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]],\n *         false\n *       ],\n *       [\"case\",\n *         [\"==\", [\"typeof\", [\"get\", \"x\"], \"number\"]],\n *         [\">\", [\"get\", \"x\"], 0],\n *         false\n *       ]\n *     ]\n *\n * An alternative, possibly more direct approach would be to use type checks\n * in the conversion of each comparison operator, so that the converted version\n * of each individual ==, >=, etc. would mimic the legacy filter semantics. The\n * downside of this approach is that it can lead to many more type checks than\n * would otherwise be necessary: outside the context of an \"any\" expression,\n * bailing out due to a runtime type error (expression semantics) and returning\n * false (legacy filter semantics) are equivalent: they cause the filter to\n * produce a `false` result.\n */\nfunction convertFilter(filter, expectedTypes = {}) {\n    if (isExpressionFilter(filter))\n        return filter;\n    if (!filter)\n        return true;\n    const legacyFilter = filter;\n    const legacyOp = legacyFilter[0];\n    if (filter.length <= 1)\n        return (legacyOp !== 'any');\n    switch (legacyOp) {\n        case '==':\n        case '!=':\n        case '<':\n        case '>':\n        case '<=':\n        case '>=': {\n            const [, property, value] = filter;\n            return convertComparisonOp(property, value, legacyOp, expectedTypes);\n        }\n        case 'any': {\n            const [, ...conditions] = legacyFilter;\n            const children = conditions.map((f) => {\n                const types = {};\n                const child = convertFilter(f, types);\n                const typechecks = runtimeTypeChecks(types);\n                return typechecks === true ? child : ['case', typechecks, child, false];\n            });\n            return ['any', ...children];\n        }\n        case 'all': {\n            const [, ...conditions] = legacyFilter;\n            const children = conditions.map(f => convertFilter(f, expectedTypes));\n            return children.length > 1 ? ['all', ...children] : children[0];\n        }\n        case 'none': {\n            const [, ...conditions] = legacyFilter;\n            return ['!', convertFilter(['any', ...conditions], {})];\n        }\n        case 'in': {\n            const [, property, ...values] = legacyFilter;\n            return convertInOp(property, values);\n        }\n        case '!in': {\n            const [, property, ...values] = legacyFilter;\n            return convertInOp(property, values, true);\n        }\n        case 'has':\n            return convertHasOp(legacyFilter[1]);\n        case '!has':\n            return ['!', convertHasOp(legacyFilter[1])];\n        default:\n            return true;\n    }\n}\n// Given a set of feature properties and an expected type for each one,\n// construct an boolean expression that tests whether each property has the\n// right type.\n// E.g.: for {name: 'string', population: 'number'}, return\n// [ 'all',\n//   ['==', ['typeof', ['get', 'name'], 'string']],\n//   ['==', ['typeof', ['get', 'population'], 'number]]\n// ]\nfunction runtimeTypeChecks(expectedTypes) {\n    const conditions = [];\n    for (const property in expectedTypes) {\n        const get = property === '$id' ? ['id'] : ['get', property];\n        conditions.push(['==', ['typeof', get], expectedTypes[property]]);\n    }\n    if (conditions.length === 0)\n        return true;\n    if (conditions.length === 1)\n        return conditions[0];\n    return ['all', ...conditions];\n}\nfunction convertComparisonOp(property, value, op, expectedTypes) {\n    let get;\n    if (property === '$type') {\n        return [op, ['geometry-type'], value];\n    }\n    else if (property === '$id') {\n        get = ['id'];\n    }\n    else {\n        get = ['get', property];\n    }\n    if (expectedTypes && value !== null) {\n        const type = typeof value;\n        expectedTypes[property] = type;\n    }\n    if (op === '==' && property !== '$id' && value === null) {\n        return [\n            'all',\n            ['has', property], // missing property != null for legacy filters\n            ['==', get, null]\n        ];\n    }\n    else if (op === '!=' && property !== '$id' && value === null) {\n        return [\n            'any',\n            ['!', ['has', property]], // missing property != null for legacy filters\n            ['!=', get, null]\n        ];\n    }\n    return [op, get, value];\n}\nfunction convertInOp(property, values, negate = false) {\n    if (values.length === 0)\n        return negate;\n    let get;\n    if (property === '$type') {\n        get = ['geometry-type'];\n    }\n    else if (property === '$id') {\n        get = ['id'];\n    }\n    else {\n        get = ['get', property];\n    }\n    // Determine if the list of values to be searched is homogenously typed.\n    // If so (and if the type is string or number), then we can use a\n    // [match, input, [...values], true, false] construction rather than a\n    // bunch of `==` tests.\n    let uniformTypes = true;\n    const type = typeof values[0];\n    for (const value of values) {\n        if (typeof value !== type) {\n            uniformTypes = false;\n            break;\n        }\n    }\n    if (uniformTypes && (type === 'string' || type === 'number')) {\n        // Match expressions must have unique values.\n        const uniqueValues = values.sort().filter((v, i) => i === 0 || values[i - 1] !== v);\n        return ['match', get, uniqueValues, !negate, negate];\n    }\n    if (negate) {\n        return ['all', ...values.map(v => ['!=', get, v])];\n    }\n    else {\n        return ['any', ...values.map(v => ['==', get, v])];\n    }\n}\nfunction convertHasOp(property) {\n    if (property === '$type') {\n        return true;\n    }\n    else if (property === '$id') {\n        return ['!=', ['id'], null];\n    }\n    else {\n        return ['has', property];\n    }\n}\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\nfunction convertFunction(parameters, propertySpec) {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    }\n    else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    }\n    else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\nfunction convertIdentityFunction(parameters, propertySpec) {\n    const get = ['get', parameters.property];\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    }\n    else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    }\n    else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n        case 'hcl': return 'interpolate-hcl';\n        case 'lab': return 'interpolate-lab';\n        default: return 'interpolate';\n    }\n}\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n        return expression;\n    }\n    else {\n        const expression = ['step', ['zoom']];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return expression;\n    }\n}\nfunction coalesce(a, b) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n}\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    }\n    else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    }\n    else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    }\n    else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : ['exponential', base],\n            ['number', get]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    }\n    else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    }\n    else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? ['linear'] : ['exponential', base], input];\n    }\n    else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n    fixupDegenerateStepCurve(expression);\n    return expression;\n}\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    }\n    else {\n        return propertySpec.expression.interpolated ? 'exponential' : 'interval';\n    }\n}\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nfunction convertTokenString(s) {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0)\n            result.push(literal);\n        result.push(['get', match[1]]);\n    }\n    if (result.length === 1) {\n        return s;\n    }\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    }\n    else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n    return result;\n}\n\nfunction getPropertyReference(propertyName) {\n    for (let i = 0; i < v8Spec.layout.length; i++) {\n        for (const key in v8Spec[v8Spec.layout[i]]) {\n            if (key === propertyName)\n                return v8Spec[v8Spec.layout[i]][key];\n        }\n    }\n    for (let i = 0; i < v8Spec.paint.length; i++) {\n        for (const key in v8Spec[v8Spec.paint[i]]) {\n            if (key === propertyName)\n                return v8Spec[v8Spec.paint[i]][key];\n        }\n    }\n    return null;\n}\nfunction eachSource(style, callback) {\n    for (const k in style.sources) {\n        callback(style.sources[k]);\n    }\n}\nfunction eachLayer(style, callback) {\n    for (const layer of style.layers) {\n        callback(layer);\n    }\n}\nfunction eachProperty(style, options, callback) {\n    function inner(layer, propertyType) {\n        const properties = layer[propertyType];\n        if (!properties)\n            return;\n        Object.keys(properties).forEach((key) => {\n            callback({\n                path: [layer.id, propertyType, key],\n                key,\n                value: properties[key],\n                reference: getPropertyReference(key),\n                set(x) {\n                    properties[key] = x;\n                }\n            });\n        });\n    }\n    eachLayer(style, (layer) => {\n        if (options.paint) {\n            inner(layer, 'paint');\n        }\n        if (options.layout) {\n            inner(layer, 'layout');\n        }\n    });\n}\n\nfunction stringify$1(obj) {\n    const type = typeof obj;\n    if (type === 'number' || type === 'boolean' || type === 'string' || obj === undefined || obj === null)\n        return JSON.stringify(obj);\n    if (Array.isArray(obj)) {\n        let str = '[';\n        for (const val of obj) {\n            str += `${stringify$1(val)},`;\n        }\n        return `${str}]`;\n    }\n    const keys = Object.keys(obj).sort();\n    let str = '{';\n    for (let i = 0; i < keys.length; i++) {\n        str += `${JSON.stringify(keys[i])}:${stringify$1(obj[keys[i]])},`;\n    }\n    return `${str}}`;\n}\nfunction getKey(layer) {\n    let key = '';\n    for (const k of refProperties) {\n        key += `/${stringify$1(layer[k])}`;\n    }\n    return key;\n}\n/**\n * Given an array of layers, return an array of arrays of layers where all\n * layers in each group have identical layout-affecting properties. These\n * are the properties that were formerly used by explicit `ref` mechanism\n * for layers: 'type', 'source', 'source-layer', 'minzoom', 'maxzoom',\n * 'filter', and 'layout'.\n *\n * The input is not modified. The output layers are references to the\n * input layers.\n *\n * @private\n * @param {Array<Layer>} layers\n * @param {Object} [cachedKeys] - an object to keep already calculated keys.\n * @returns {Array<Array<Layer>>}\n */\nfunction groupByLayout(layers, cachedKeys) {\n    const groups = {};\n    for (let i = 0; i < layers.length; i++) {\n        const k = (cachedKeys && cachedKeys[layers[i].id]) || getKey(layers[i]);\n        // update the cache if there is one\n        if (cachedKeys)\n            cachedKeys[layers[i].id] = k;\n        let group = groups[k];\n        if (!group) {\n            group = groups[k] = [];\n        }\n        group.push(layers[i]);\n    }\n    const result = [];\n    for (const k in groups) {\n        result.push(groups[k]);\n    }\n    return result;\n}\n\nfunction emptyStyle() {\n    const style = {};\n    const version = v8Spec['$version'];\n    for (const styleKey in v8Spec['$root']) {\n        const specification = v8Spec['$root'][styleKey];\n        if (specification.required) {\n            let value = null;\n            if (styleKey === 'version') {\n                value = version;\n            }\n            else {\n                if (specification.type === 'array') {\n                    value = [];\n                }\n                else {\n                    value = {};\n                }\n            }\n            if (value != null) {\n                style[styleKey] = value;\n            }\n        }\n    }\n    return style;\n}\n\nfunction validateConstants(options) {\n    const key = options.key;\n    const constants = options.value;\n    if (constants) {\n        return [new ValidationError(key, constants, 'constants have been deprecated as of v8')];\n    }\n    else {\n        return [];\n    }\n}\n\n// Turn jsonlint-lines-primitives objects into primitive objects\nfunction unbundle(value) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    }\n    else {\n        return value;\n    }\n}\nfunction deepUnbundle(value) {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    }\n    else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n    return unbundle(value);\n}\n\nfunction validateObject(options) {\n    const key = options.key;\n    const object = options.value;\n    const elementSpecs = options.valueSpec || {};\n    const elementValidators = options.objectElementValidators || {};\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const validateSpec = options.validateSpec;\n    let errors = [];\n    const type = getType(object);\n    if (type !== 'object') {\n        return [new ValidationError(key, object, `object expected, ${type} found`)];\n    }\n    for (const objectKey in object) {\n        const elementSpecKey = objectKey.split('.')[0]; // treat 'paint.*' as 'paint'\n        const elementSpec = elementSpecs[elementSpecKey] || elementSpecs['*'];\n        let validateElement;\n        if (elementValidators[elementSpecKey]) {\n            validateElement = elementValidators[elementSpecKey];\n        }\n        else if (elementSpecs[elementSpecKey]) {\n            validateElement = validateSpec;\n        }\n        else if (elementValidators['*']) {\n            validateElement = elementValidators['*'];\n        }\n        else if (elementSpecs['*']) {\n            validateElement = validateSpec;\n        }\n        else {\n            errors.push(new ValidationError(key, object[objectKey], `unknown property \"${objectKey}\"`));\n            continue;\n        }\n        errors = errors.concat(validateElement({\n            key: (key ? `${key}.` : key) + objectKey,\n            value: object[objectKey],\n            valueSpec: elementSpec,\n            style,\n            styleSpec,\n            object,\n            objectKey,\n            validateSpec,\n        }, object));\n    }\n    for (const elementSpecKey in elementSpecs) {\n        // Don't check `required` when there's a custom validator for that property.\n        if (elementValidators[elementSpecKey]) {\n            continue;\n        }\n        if (elementSpecs[elementSpecKey].required && elementSpecs[elementSpecKey]['default'] === undefined && object[elementSpecKey] === undefined) {\n            errors.push(new ValidationError(key, object, `missing required property \"${elementSpecKey}\"`));\n        }\n    }\n    return errors;\n}\n\nfunction validateArray(options) {\n    const array = options.value;\n    const arraySpec = options.valueSpec;\n    const validateSpec = options.validateSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const key = options.key;\n    const validateArrayElement = options.arrayElementValidator || validateSpec;\n    if (getType(array) !== 'array') {\n        return [new ValidationError(key, array, `array expected, ${getType(array)} found`)];\n    }\n    if (arraySpec.length && array.length !== arraySpec.length) {\n        return [new ValidationError(key, array, `array length ${arraySpec.length} expected, length ${array.length} found`)];\n    }\n    if (arraySpec['min-length'] && array.length < arraySpec['min-length']) {\n        return [new ValidationError(key, array, `array length at least ${arraySpec['min-length']} expected, length ${array.length} found`)];\n    }\n    let arrayElementSpec = {\n        'type': arraySpec.value,\n        'values': arraySpec.values\n    };\n    if (styleSpec.$version < 7) {\n        arrayElementSpec['function'] = arraySpec.function;\n    }\n    if (getType(arraySpec.value) === 'object') {\n        arrayElementSpec = arraySpec.value;\n    }\n    let errors = [];\n    for (let i = 0; i < array.length; i++) {\n        errors = errors.concat(validateArrayElement({\n            array,\n            arrayIndex: i,\n            value: array[i],\n            valueSpec: arrayElementSpec,\n            validateSpec: options.validateSpec,\n            style,\n            styleSpec,\n            key: `${key}[${i}]`\n        }));\n    }\n    return errors;\n}\n\nfunction validateNumber(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    let type = getType(value);\n    if (type === 'number' && value !== value) {\n        type = 'NaN';\n    }\n    if (type !== 'number') {\n        return [new ValidationError(key, value, `number expected, ${type} found`)];\n    }\n    if ('minimum' in valueSpec && value < valueSpec.minimum) {\n        return [new ValidationError(key, value, `${value} is less than the minimum value ${valueSpec.minimum}`)];\n    }\n    if ('maximum' in valueSpec && value > valueSpec.maximum) {\n        return [new ValidationError(key, value, `${value} is greater than the maximum value ${valueSpec.maximum}`)];\n    }\n    return [];\n}\n\nfunction validateFunction(options) {\n    const functionValueSpec = options.valueSpec;\n    const functionType = unbundle(options.value.type);\n    let stopKeyType;\n    let stopDomainValues = {};\n    let previousStopDomainValue;\n    let previousStopDomainZoom;\n    const isZoomFunction = functionType !== 'categorical' && options.value.property === undefined;\n    const isPropertyFunction = !isZoomFunction;\n    const isZoomAndPropertyFunction = getType(options.value.stops) === 'array' &&\n        getType(options.value.stops[0]) === 'array' &&\n        getType(options.value.stops[0][0]) === 'object';\n    const errors = validateObject({\n        key: options.key,\n        value: options.value,\n        valueSpec: options.styleSpec.function,\n        validateSpec: options.validateSpec,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            stops: validateFunctionStops,\n            default: validateFunctionDefault\n        }\n    });\n    if (functionType === 'identity' && isZoomFunction) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"property\"'));\n    }\n    if (functionType !== 'identity' && !options.value.stops) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"stops\"'));\n    }\n    if (functionType === 'exponential' && options.valueSpec.expression && !supportsInterpolation(options.valueSpec)) {\n        errors.push(new ValidationError(options.key, options.value, 'exponential functions not supported'));\n    }\n    if (options.styleSpec.$version >= 8) {\n        if (isPropertyFunction && !supportsPropertyExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'property functions not supported'));\n        }\n        else if (isZoomFunction && !supportsZoomExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'zoom functions not supported'));\n        }\n    }\n    if ((functionType === 'categorical' || isZoomAndPropertyFunction) && options.value.property === undefined) {\n        errors.push(new ValidationError(options.key, options.value, '\"property\" property is required'));\n    }\n    return errors;\n    function validateFunctionStops(options) {\n        if (functionType === 'identity') {\n            return [new ValidationError(options.key, options.value, 'identity function may not have a \"stops\" property')];\n        }\n        let errors = [];\n        const value = options.value;\n        errors = errors.concat(validateArray({\n            key: options.key,\n            value,\n            valueSpec: options.valueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec,\n            arrayElementValidator: validateFunctionStop\n        }));\n        if (getType(value) === 'array' && value.length === 0) {\n            errors.push(new ValidationError(options.key, value, 'array must have at least one stop'));\n        }\n        return errors;\n    }\n    function validateFunctionStop(options) {\n        let errors = [];\n        const value = options.value;\n        const key = options.key;\n        if (getType(value) !== 'array') {\n            return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n        }\n        if (value.length !== 2) {\n            return [new ValidationError(key, value, `array length 2 expected, length ${value.length} found`)];\n        }\n        if (isZoomAndPropertyFunction) {\n            if (getType(value[0]) !== 'object') {\n                return [new ValidationError(key, value, `object expected, ${getType(value[0])} found`)];\n            }\n            if (value[0].zoom === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have zoom')];\n            }\n            if (value[0].value === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have value')];\n            }\n            if (previousStopDomainZoom && previousStopDomainZoom > unbundle(value[0].zoom)) {\n                return [new ValidationError(key, value[0].zoom, 'stop zoom values must appear in ascending order')];\n            }\n            if (unbundle(value[0].zoom) !== previousStopDomainZoom) {\n                previousStopDomainZoom = unbundle(value[0].zoom);\n                previousStopDomainValue = undefined;\n                stopDomainValues = {};\n            }\n            errors = errors.concat(validateObject({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: { zoom: {} },\n                validateSpec: options.validateSpec,\n                style: options.style,\n                styleSpec: options.styleSpec,\n                objectElementValidators: { zoom: validateNumber, value: validateStopDomainValue }\n            }));\n        }\n        else {\n            errors = errors.concat(validateStopDomainValue({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {},\n                validateSpec: options.validateSpec,\n                style: options.style,\n                styleSpec: options.styleSpec\n            }, value));\n        }\n        if (isExpression(deepUnbundle(value[1]))) {\n            return errors.concat([new ValidationError(`${key}[1]`, value[1], 'expressions are not allowed in function stops.')]);\n        }\n        return errors.concat(options.validateSpec({\n            key: `${key}[1]`,\n            value: value[1],\n            valueSpec: functionValueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        }));\n    }\n    function validateStopDomainValue(options, stop) {\n        const type = getType(options.value);\n        const value = unbundle(options.value);\n        const reportValue = options.value !== null ? options.value : stop;\n        if (!stopKeyType) {\n            stopKeyType = type;\n        }\n        else if (type !== stopKeyType) {\n            return [new ValidationError(options.key, reportValue, `${type} stop domain type must match previous stop domain type ${stopKeyType}`)];\n        }\n        if (type !== 'number' && type !== 'string' && type !== 'boolean') {\n            return [new ValidationError(options.key, reportValue, 'stop domain value must be a number, string, or boolean')];\n        }\n        if (type !== 'number' && functionType !== 'categorical') {\n            let message = `number expected, ${type} found`;\n            if (supportsPropertyExpression(functionValueSpec) && functionType === undefined) {\n                message += '\\nIf you intended to use a categorical function, specify `\"type\": \"categorical\"`.';\n            }\n            return [new ValidationError(options.key, reportValue, message)];\n        }\n        if (functionType === 'categorical' && type === 'number' && (!isFinite(value) || Math.floor(value) !== value)) {\n            return [new ValidationError(options.key, reportValue, `integer expected, found ${value}`)];\n        }\n        if (functionType !== 'categorical' && type === 'number' && previousStopDomainValue !== undefined && value < previousStopDomainValue) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must appear in ascending order')];\n        }\n        else {\n            previousStopDomainValue = value;\n        }\n        if (functionType === 'categorical' && value in stopDomainValues) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must be unique')];\n        }\n        else {\n            stopDomainValues[value] = true;\n        }\n        return [];\n    }\n    function validateFunctionDefault(options) {\n        return options.validateSpec({\n            key: options.key,\n            value: options.value,\n            valueSpec: functionValueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        });\n    }\n}\n\nfunction validateExpression(options) {\n    const expression = (options.expressionContext === 'property' ? createPropertyExpression : createExpression)(deepUnbundle(options.value), options.valueSpec);\n    if (expression.result === 'error') {\n        return expression.value.map((error) => {\n            return new ValidationError(`${options.key}${error.key}`, options.value, error.message);\n        });\n    }\n    const expressionObj = expression.value.expression || expression.value._styleExpression.expression;\n    if (options.expressionContext === 'property' && (options.propertyKey === 'text-font') &&\n        !expressionObj.outputDefined()) {\n        return [new ValidationError(options.key, options.value, `Invalid data expression for \"${options.propertyKey}\". Output values must be contained as literals within the expression.`)];\n    }\n    if (options.expressionContext === 'property' && options.propertyType === 'layout' &&\n        (!isStateConstant(expressionObj))) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with layout properties.')];\n    }\n    if (options.expressionContext === 'filter' && !isStateConstant(expressionObj)) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with filters.')];\n    }\n    if (options.expressionContext && options.expressionContext.indexOf('cluster') === 0) {\n        if (!isGlobalPropertyConstant(expressionObj, ['zoom', 'feature-state'])) {\n            return [new ValidationError(options.key, options.value, '\"zoom\" and \"feature-state\" expressions are not supported with cluster properties.')];\n        }\n        if (options.expressionContext === 'cluster-initial' && !isFeatureConstant(expressionObj)) {\n            return [new ValidationError(options.key, options.value, 'Feature data expressions are not supported with initial expression part of cluster properties.')];\n        }\n    }\n    return [];\n}\n\nfunction validateBoolean(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n    if (type !== 'boolean') {\n        return [new ValidationError(key, value, `boolean expected, ${type} found`)];\n    }\n    return [];\n}\n\nfunction validateColor(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `color expected, ${type} found`)];\n    }\n    if (!Color.parse(String(value))) { // cast String object to string primitive\n        return [new ValidationError(key, value, `color expected, \"${value}\" found`)];\n    }\n    return [];\n}\n\nfunction validateEnum(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const errors = [];\n    if (Array.isArray(valueSpec.values)) { // <=v7\n        if (valueSpec.values.indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${valueSpec.values.join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    else { // >=v8\n        if (Object.keys(valueSpec.values).indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${Object.keys(valueSpec.values).join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    return errors;\n}\n\nfunction validateFilter(options) {\n    if (isExpressionFilter(deepUnbundle(options.value))) {\n        return validateExpression(extendBy({}, options, {\n            expressionContext: 'filter',\n            valueSpec: { value: 'boolean' }\n        }));\n    }\n    else {\n        return validateNonExpressionFilter(options);\n    }\n}\nfunction validateNonExpressionFilter(options) {\n    const value = options.value;\n    const key = options.key;\n    if (getType(value) !== 'array') {\n        return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n    }\n    const styleSpec = options.styleSpec;\n    let type;\n    let errors = [];\n    if (value.length < 1) {\n        return [new ValidationError(key, value, 'filter array must have at least 1 element')];\n    }\n    errors = errors.concat(validateEnum({\n        key: `${key}[0]`,\n        value: value[0],\n        valueSpec: styleSpec.filter_operator,\n        style: options.style,\n        styleSpec: options.styleSpec\n    }));\n    switch (unbundle(value[0])) {\n        case '<':\n        case '<=':\n        case '>':\n        case '>=':\n            if (value.length >= 2 && unbundle(value[1]) === '$type') {\n                errors.push(new ValidationError(key, value, `\"$type\" cannot be use with operator \"${value[0]}\"`));\n            }\n        /* falls through */\n        case '==':\n        case '!=':\n            if (value.length !== 3) {\n                errors.push(new ValidationError(key, value, `filter array for operator \"${value[0]}\" must have 3 elements`));\n            }\n        /* falls through */\n        case 'in':\n        case '!in':\n            if (value.length >= 2) {\n                type = getType(value[1]);\n                if (type !== 'string') {\n                    errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n                }\n            }\n            for (let i = 2; i < value.length; i++) {\n                type = getType(value[i]);\n                if (unbundle(value[1]) === '$type') {\n                    errors = errors.concat(validateEnum({\n                        key: `${key}[${i}]`,\n                        value: value[i],\n                        valueSpec: styleSpec.geometry_type,\n                        style: options.style,\n                        styleSpec: options.styleSpec\n                    }));\n                }\n                else if (type !== 'string' && type !== 'number' && type !== 'boolean') {\n                    errors.push(new ValidationError(`${key}[${i}]`, value[i], `string, number, or boolean expected, ${type} found`));\n                }\n            }\n            break;\n        case 'any':\n        case 'all':\n        case 'none':\n            for (let i = 1; i < value.length; i++) {\n                errors = errors.concat(validateNonExpressionFilter({\n                    key: `${key}[${i}]`,\n                    value: value[i],\n                    style: options.style,\n                    styleSpec: options.styleSpec\n                }));\n            }\n            break;\n        case 'has':\n        case '!has':\n            type = getType(value[1]);\n            if (value.length !== 2) {\n                errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n            }\n            else if (type !== 'string') {\n                errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n            }\n            break;\n    }\n    return errors;\n}\n\nfunction validateProperty(options, propertyType) {\n    const key = options.key;\n    const validateSpec = options.validateSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const value = options.value;\n    const propertyKey = options.objectKey;\n    const layerSpec = styleSpec[`${propertyType}_${options.layerType}`];\n    if (!layerSpec)\n        return [];\n    const transitionMatch = propertyKey.match(/^(.*)-transition$/);\n    if (propertyType === 'paint' && transitionMatch && layerSpec[transitionMatch[1]] && layerSpec[transitionMatch[1]].transition) {\n        return validateSpec({\n            key,\n            value,\n            valueSpec: styleSpec.transition,\n            style,\n            styleSpec\n        });\n    }\n    const valueSpec = options.valueSpec || layerSpec[propertyKey];\n    if (!valueSpec) {\n        return [new ValidationError(key, value, `unknown property \"${propertyKey}\"`)];\n    }\n    let tokenMatch;\n    if (getType(value) === 'string' && supportsPropertyExpression(valueSpec) && !valueSpec.tokens && (tokenMatch = /^{([^}]+)}$/.exec(value))) {\n        return [new ValidationError(key, value, `\"${propertyKey}\" does not support interpolation syntax\\n` +\n                `Use an identity property function instead: \\`{ \"type\": \"identity\", \"property\": ${JSON.stringify(tokenMatch[1])} }\\`.`)];\n    }\n    const errors = [];\n    if (options.layerType === 'symbol') {\n        if (propertyKey === 'text-field' && style && !style.glyphs) {\n            errors.push(new ValidationError(key, value, 'use of \"text-field\" requires a style \"glyphs\" property'));\n        }\n        if (propertyKey === 'text-font' && isFunction$1(deepUnbundle(value)) && unbundle(value.type) === 'identity') {\n            errors.push(new ValidationError(key, value, '\"text-font\" does not support identity functions'));\n        }\n    }\n    return errors.concat(validateSpec({\n        key: options.key,\n        value,\n        valueSpec,\n        style,\n        styleSpec,\n        expressionContext: 'property',\n        propertyType,\n        propertyKey\n    }));\n}\n\nfunction validatePaintProperty(options) {\n    return validateProperty(options, 'paint');\n}\n\nfunction validateLayoutProperty(options) {\n    return validateProperty(options, 'layout');\n}\n\nfunction validateLayer(options) {\n    let errors = [];\n    const layer = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    if (!layer.type && !layer.ref) {\n        errors.push(new ValidationError(key, layer, 'either \"type\" or \"ref\" is required'));\n    }\n    let type = unbundle(layer.type);\n    const ref = unbundle(layer.ref);\n    if (layer.id) {\n        const layerId = unbundle(layer.id);\n        for (let i = 0; i < options.arrayIndex; i++) {\n            const otherLayer = style.layers[i];\n            if (unbundle(otherLayer.id) === layerId) {\n                errors.push(new ValidationError(key, layer.id, `duplicate layer id \"${layer.id}\", previously used at line ${otherLayer.id.__line__}`));\n            }\n        }\n    }\n    if ('ref' in layer) {\n        ['type', 'source', 'source-layer', 'filter', 'layout'].forEach((p) => {\n            if (p in layer) {\n                errors.push(new ValidationError(key, layer[p], `\"${p}\" is prohibited for ref layers`));\n            }\n        });\n        let parent;\n        style.layers.forEach((layer) => {\n            if (unbundle(layer.id) === ref)\n                parent = layer;\n        });\n        if (!parent) {\n            errors.push(new ValidationError(key, layer.ref, `ref layer \"${ref}\" not found`));\n        }\n        else if (parent.ref) {\n            errors.push(new ValidationError(key, layer.ref, 'ref cannot reference another ref layer'));\n        }\n        else {\n            type = unbundle(parent.type);\n        }\n    }\n    else if (type !== 'background') {\n        if (!layer.source) {\n            errors.push(new ValidationError(key, layer, 'missing required property \"source\"'));\n        }\n        else {\n            const source = style.sources && style.sources[layer.source];\n            const sourceType = source && unbundle(source.type);\n            if (!source) {\n                errors.push(new ValidationError(key, layer.source, `source \"${layer.source}\" not found`));\n            }\n            else if (sourceType === 'vector' && type === 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster source`));\n            }\n            else if (sourceType !== 'raster-dem' && type === 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster-dem source`));\n            }\n            else if (sourceType === 'raster' && type !== 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a vector source`));\n            }\n            else if (sourceType === 'vector' && !layer['source-layer']) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" must specify a \"source-layer\"`));\n            }\n            else if (sourceType === 'raster-dem' && type !== 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, 'raster-dem source can only be used with layer type \\'hillshade\\'.'));\n            }\n            else if (type === 'line' && layer.paint && layer.paint['line-gradient'] &&\n                (sourceType !== 'geojson' || !source.lineMetrics)) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" specifies a line-gradient, which requires a GeoJSON source with \\`lineMetrics\\` enabled.`));\n            }\n        }\n    }\n    errors = errors.concat(validateObject({\n        key,\n        value: layer,\n        valueSpec: styleSpec.layer,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        validateSpec: options.validateSpec,\n        objectElementValidators: {\n            '*'() {\n                return [];\n            },\n            // We don't want to enforce the spec's `\"requires\": true` for backward compatibility with refs;\n            // the actual requirement is validated above. See https://github.com/mapbox/mapbox-gl-js/issues/5772.\n            type() {\n                return options.validateSpec({\n                    key: `${key}.type`,\n                    value: layer.type,\n                    valueSpec: styleSpec.layer.type,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    object: layer,\n                    objectKey: 'type'\n                });\n            },\n            filter: validateFilter,\n            layout(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validateLayoutProperty(extendBy({ layerType: type }, options));\n                        }\n                    }\n                });\n            },\n            paint(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validatePaintProperty(extendBy({ layerType: type }, options));\n                        }\n                    }\n                });\n            }\n        }\n    }));\n    return errors;\n}\n\nfunction validateString(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `string expected, ${type} found`)];\n    }\n    return [];\n}\n\nfunction validateRasterDEMSource(options) {\n    var _a;\n    const sourceName = (_a = options.sourceName) !== null && _a !== undefined ? _a : '';\n    const rasterDEM = options.value;\n    const styleSpec = options.styleSpec;\n    const rasterDEMSpec = styleSpec.source_raster_dem;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(rasterDEM);\n    if (rasterDEM === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors.push(new ValidationError('source_raster_dem', rasterDEM, `object expected, ${rootType} found`));\n        return errors;\n    }\n    const encoding = unbundle(rasterDEM.encoding);\n    const isCustomEncoding = encoding === 'custom';\n    const customEncodingKeys = ['redFactor', 'greenFactor', 'blueFactor', 'baseShift'];\n    const encodingName = options.value.encoding ? `\"${options.value.encoding}\"` : 'Default';\n    for (const key in rasterDEM) {\n        if (!isCustomEncoding && customEncodingKeys.includes(key)) {\n            errors.push(new ValidationError(key, rasterDEM[key], `In \"${sourceName}\": \"${key}\" is only valid when \"encoding\" is set to \"custom\". ${encodingName} encoding found`));\n        }\n        else if (rasterDEMSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: rasterDEM[key],\n                valueSpec: rasterDEMSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors.push(new ValidationError(key, rasterDEM[key], `unknown property \"${key}\"`));\n        }\n    }\n    return errors;\n}\n\nconst objectElementValidators = {\n    promoteId: validatePromoteId\n};\nfunction validateSource(options) {\n    const value = options.value;\n    const key = options.key;\n    const styleSpec = options.styleSpec;\n    const style = options.style;\n    const validateSpec = options.validateSpec;\n    if (!value.type) {\n        return [new ValidationError(key, value, '\"type\" is required')];\n    }\n    const type = unbundle(value.type);\n    let errors;\n    switch (type) {\n        case 'vector':\n        case 'raster':\n            errors = validateObject({\n                key,\n                value,\n                valueSpec: styleSpec[`source_${type.replace('-', '_')}`],\n                style: options.style,\n                styleSpec,\n                objectElementValidators,\n                validateSpec,\n            });\n            return errors;\n        case 'raster-dem':\n            errors = validateRasterDEMSource({\n                sourceName: key,\n                value,\n                style: options.style,\n                styleSpec,\n                validateSpec,\n            });\n            return errors;\n        case 'geojson':\n            errors = validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_geojson,\n                style,\n                styleSpec,\n                validateSpec,\n                objectElementValidators\n            });\n            if (value.cluster) {\n                for (const prop in value.clusterProperties) {\n                    const [operator, mapExpr] = value.clusterProperties[prop];\n                    const reduceExpr = typeof operator === 'string' ? [operator, ['accumulated'], ['get', prop]] : operator;\n                    errors.push(...validateExpression({\n                        key: `${key}.${prop}.map`,\n                        value: mapExpr,\n                        validateSpec,\n                        expressionContext: 'cluster-map'\n                    }));\n                    errors.push(...validateExpression({\n                        key: `${key}.${prop}.reduce`,\n                        value: reduceExpr,\n                        validateSpec,\n                        expressionContext: 'cluster-reduce'\n                    }));\n                }\n            }\n            return errors;\n        case 'video':\n            return validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_video,\n                style,\n                validateSpec,\n                styleSpec\n            });\n        case 'image':\n            return validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_image,\n                style,\n                validateSpec,\n                styleSpec\n            });\n        case 'canvas':\n            return [new ValidationError(key, null, 'Please use runtime APIs to add canvas sources, rather than including them in stylesheets.', 'source.canvas')];\n        default:\n            return validateEnum({\n                key: `${key}.type`,\n                value: value.type,\n                valueSpec: { values: ['vector', 'raster', 'raster-dem', 'geojson', 'video', 'image'] },\n                style,\n                validateSpec,\n                styleSpec\n            });\n    }\n}\nfunction validatePromoteId({ key, value }) {\n    if (getType(value) === 'string') {\n        return validateString({ key, value });\n    }\n    else {\n        const errors = [];\n        for (const prop in value) {\n            errors.push(...validateString({ key: `${key}.${prop}`, value: value[prop] }));\n        }\n        return errors;\n    }\n}\n\nfunction validateLight(options) {\n    const light = options.value;\n    const styleSpec = options.styleSpec;\n    const lightSpec = styleSpec.light;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(light);\n    if (light === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('light', light, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n    for (const key in light) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n        if (transitionMatch && lightSpec[transitionMatch[1]] && lightSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: light[key],\n                valueSpec: styleSpec.transition,\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else if (lightSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: light[key],\n                valueSpec: lightSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, light[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateSky(options) {\n    const sky = options.value;\n    const styleSpec = options.styleSpec;\n    const skySpec = styleSpec.sky;\n    const style = options.style;\n    const rootType = getType(sky);\n    if (sky === undefined) {\n        return [];\n    }\n    else if (rootType !== 'object') {\n        return [new ValidationError('sky', sky, `object expected, ${rootType} found`)];\n    }\n    let errors = [];\n    for (const key in sky) {\n        if (skySpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: sky[key],\n                valueSpec: skySpec[key],\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, sky[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateTerrain(options) {\n    const terrain = options.value;\n    const styleSpec = options.styleSpec;\n    const terrainSpec = styleSpec.terrain;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(terrain);\n    if (terrain === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('terrain', terrain, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n    for (const key in terrain) {\n        if (terrainSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: terrain[key],\n                valueSpec: terrainSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, terrain[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateFormatted(options) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n    return validateExpression(options);\n}\n\nfunction validateImage(options) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n    return validateExpression(options);\n}\n\nfunction validatePadding(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type === 'array') {\n        if (value.length < 1 || value.length > 4) {\n            return [new ValidationError(key, value, `padding requires 1 to 4 values; ${value.length} values found`)];\n        }\n        const arrayElementSpec = {\n            type: 'number'\n        };\n        let errors = [];\n        for (let i = 0; i < value.length; i++) {\n            errors = errors.concat(options.validateSpec({\n                key: `${key}[${i}]`,\n                value: value[i],\n                validateSpec: options.validateSpec,\n                valueSpec: arrayElementSpec\n            }));\n        }\n        return errors;\n    }\n    else {\n        return validateNumber({\n            key,\n            value,\n            valueSpec: {}\n        });\n    }\n}\n\nfunction validateVariableAnchorOffsetCollection(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    const styleSpec = options.styleSpec;\n    if (type !== 'array' || value.length < 1 || value.length % 2 !== 0) {\n        return [new ValidationError(key, value, 'variableAnchorOffsetCollection requires a non-empty array of even length')];\n    }\n    let errors = [];\n    for (let i = 0; i < value.length; i += 2) {\n        // Elements in even positions should be values from text-anchor enum\n        errors = errors.concat(validateEnum({\n            key: `${key}[${i}]`,\n            value: value[i],\n            valueSpec: styleSpec['layout_symbol']['text-anchor']\n        }));\n        // Elements in odd positions should be points (2-element numeric arrays)\n        errors = errors.concat(validateArray({\n            key: `${key}[${i + 1}]`,\n            value: value[i + 1],\n            valueSpec: {\n                length: 2,\n                value: 'number'\n            },\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec\n        }));\n    }\n    return errors;\n}\n\nfunction validateSprite(options) {\n    let errors = [];\n    const sprite = options.value;\n    const key = options.key;\n    if (!Array.isArray(sprite)) {\n        return validateString({\n            key,\n            value: sprite\n        });\n    }\n    else {\n        const allSpriteIds = [];\n        const allSpriteURLs = [];\n        for (const i in sprite) {\n            if (sprite[i].id && allSpriteIds.includes(sprite[i].id))\n                errors.push(new ValidationError(key, sprite, `all the sprites' ids must be unique, but ${sprite[i].id} is duplicated`));\n            allSpriteIds.push(sprite[i].id);\n            if (sprite[i].url && allSpriteURLs.includes(sprite[i].url))\n                errors.push(new ValidationError(key, sprite, `all the sprites' URLs must be unique, but ${sprite[i].url} is duplicated`));\n            allSpriteURLs.push(sprite[i].url);\n            const pairSpec = {\n                id: {\n                    type: 'string',\n                    required: true,\n                },\n                url: {\n                    type: 'string',\n                    required: true,\n                }\n            };\n            errors = errors.concat(validateObject({\n                key: `${key}[${i}]`,\n                value: sprite[i],\n                valueSpec: pairSpec,\n                validateSpec: options.validateSpec,\n            }));\n        }\n        return errors;\n    }\n}\n\nfunction validateProjection(options) {\n    const projection = options.value;\n    const styleSpec = options.styleSpec;\n    const projectionSpec = styleSpec.projection;\n    const style = options.style;\n    const rootType = getType(projection);\n    if (projection === undefined) {\n        return [];\n    }\n    else if (rootType !== 'object') {\n        return [new ValidationError('projection', projection, `object expected, ${rootType} found`)];\n    }\n    let errors = [];\n    for (const key in projection) {\n        if (projectionSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: projection[key],\n                valueSpec: projectionSpec[key],\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, projection[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateProjectionDefinition(options) {\n    const key = options.key;\n    let value = options.value;\n    value = value instanceof String ? value.valueOf() : value;\n    const type = getType(value);\n    if (type === 'array' && !isProjectionDefinitionValue(value) && !isPropertyValueSpecification(value)) {\n        return [new ValidationError(key, value, `projection expected, invalid array ${JSON.stringify(value)} found`)];\n    }\n    else if (!['array', 'string'].includes(type)) {\n        return [new ValidationError(key, value, `projection expected, invalid type \"${type}\" found`)];\n    }\n    return [];\n}\nfunction isPropertyValueSpecification(value) {\n    if (['interpolate', 'step', 'literal'].includes(value[0])) {\n        return true;\n    }\n    return false;\n}\nfunction isProjectionDefinitionValue(value) {\n    return Array.isArray(value) &&\n        value.length === 3 &&\n        typeof value[0] === 'string' &&\n        typeof value[1] === 'string' &&\n        typeof value[2] === 'number';\n}\n\nconst VALIDATORS = {\n    '*'() {\n        return [];\n    },\n    'array': validateArray,\n    'boolean': validateBoolean,\n    'number': validateNumber,\n    'color': validateColor,\n    'constants': validateConstants,\n    'enum': validateEnum,\n    'filter': validateFilter,\n    'function': validateFunction,\n    'layer': validateLayer,\n    'object': validateObject,\n    'source': validateSource,\n    'light': validateLight,\n    'sky': validateSky,\n    'terrain': validateTerrain,\n    'projection': validateProjection,\n    'projectionDefinition': validateProjectionDefinition,\n    'string': validateString,\n    'formatted': validateFormatted,\n    'resolvedImage': validateImage,\n    'padding': validatePadding,\n    'variableAnchorOffsetCollection': validateVariableAnchorOffsetCollection,\n    'sprite': validateSprite,\n};\n/**\n * Main recursive validation function used internally.\n * You should use `validateStyleMin` in the browser or `validateStyle` in node env.\n * @param options - the options object\n * @param options.key - string representing location of validation in style tree. Used only\n * for more informative error reporting.\n * @param options.value - current value from style being evaluated. May be anything from a\n * high level object that needs to be descended into deeper or a simple\n * scalar value.\n * @param options.valueSpec - current spec being evaluated. Tracks value.\n * @param options.styleSpec - current full spec being evaluated.\n * @param options.validateSpec - the validate function itself\n * @param options.style - the style object\n * @param options.objectElementValidators - optional object of functions that will be called\n * @returns an array of errors, or an empty array if no errors are found.\n */\nfunction validate(options) {\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const styleSpec = options.styleSpec;\n    options.validateSpec = validate;\n    if (valueSpec.expression && isFunction$1(unbundle(value))) {\n        return validateFunction(options);\n    }\n    else if (valueSpec.expression && isExpression(deepUnbundle(value))) {\n        return validateExpression(options);\n    }\n    else if (valueSpec.type && VALIDATORS[valueSpec.type]) {\n        return VALIDATORS[valueSpec.type](options);\n    }\n    else {\n        const valid = validateObject(extendBy({}, options, {\n            valueSpec: valueSpec.type ? styleSpec[valueSpec.type] : valueSpec\n        }));\n        return valid;\n    }\n}\n\nfunction validateGlyphsUrl(options) {\n    const value = options.value;\n    const key = options.key;\n    const errors = validateString(options);\n    if (errors.length)\n        return errors;\n    if (value.indexOf('{fontstack}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{fontstack}\" token'));\n    }\n    if (value.indexOf('{range}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{range}\" token'));\n    }\n    return errors;\n}\n\n/**\n * Validate a MapLibre style against the style specification.\n * Use this when running in the browser.\n *\n * @param style - The style to be validated.\n * @param styleSpec - The style specification to validate against.\n * If omitted, the latest style spec is used.\n * @returns an array of errors, or an empty array if no errors are found.\n * @example\n *   const validate = require('@maplibre/maplibre-gl-style-spec/').validateStyleMin;\n *   const errors = validate(style);\n */\nfunction validateStyleMin(style, styleSpec = v8Spec) {\n    let errors = [];\n    errors = errors.concat(validate({\n        key: '',\n        value: style,\n        valueSpec: styleSpec.$root,\n        styleSpec,\n        style,\n        validateSpec: validate,\n        objectElementValidators: {\n            glyphs: validateGlyphsUrl,\n            '*'() {\n                return [];\n            }\n        }\n    }));\n    if (style['constants']) {\n        errors = errors.concat(validateConstants({\n            key: 'constants',\n            value: style['constants'],\n            style,\n            styleSpec,\n            validateSpec: validate,\n        }));\n    }\n    return sortErrors(errors);\n}\nvalidateStyleMin.source = wrapCleanErrors(injectValidateSpec(validateSource));\nvalidateStyleMin.sprite = wrapCleanErrors(injectValidateSpec(validateSprite));\nvalidateStyleMin.glyphs = wrapCleanErrors(injectValidateSpec(validateGlyphsUrl));\nvalidateStyleMin.light = wrapCleanErrors(injectValidateSpec(validateLight));\nvalidateStyleMin.sky = wrapCleanErrors(injectValidateSpec(validateSky));\nvalidateStyleMin.terrain = wrapCleanErrors(injectValidateSpec(validateTerrain));\nvalidateStyleMin.layer = wrapCleanErrors(injectValidateSpec(validateLayer));\nvalidateStyleMin.filter = wrapCleanErrors(injectValidateSpec(validateFilter));\nvalidateStyleMin.paintProperty = wrapCleanErrors(injectValidateSpec(validatePaintProperty));\nvalidateStyleMin.layoutProperty = wrapCleanErrors(injectValidateSpec(validateLayoutProperty));\nfunction injectValidateSpec(validator) {\n    return function (options) {\n        return validator({\n            ...options,\n            validateSpec: validate,\n        });\n    };\n}\nfunction sortErrors(errors) {\n    return [].concat(errors).sort((a, b) => {\n        return a.line - b.line;\n    });\n}\nfunction wrapCleanErrors(inner) {\n    return function (...args) {\n        return sortErrors(inner.apply(this, args));\n    };\n}\n\n// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nconst stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,]/g;\n\nfunction stringify(passedObj, options = {}) {\n  const indent = JSON.stringify(\n    [1],\n    undefined,\n    options.indent === undefined ? 2 : options.indent\n  ).slice(2, -3);\n\n  const maxLength =\n    indent === \"\"\n      ? Infinity\n      : options.maxLength === undefined\n      ? 80\n      : options.maxLength;\n\n  let { replacer } = options;\n\n  return (function _stringify(obj, currentIndent, reserved) {\n    if (obj && typeof obj.toJSON === \"function\") {\n      obj = obj.toJSON();\n    }\n\n    const string = JSON.stringify(obj, replacer);\n\n    if (string === undefined) {\n      return string;\n    }\n\n    const length = maxLength - currentIndent.length - reserved;\n\n    if (string.length <= length) {\n      const prettified = string.replace(\n        stringOrChar,\n        (match, stringLiteral) => {\n          return stringLiteral || `${match} `;\n        }\n      );\n      if (prettified.length <= length) {\n        return prettified;\n      }\n    }\n\n    if (replacer != null) {\n      obj = JSON.parse(string);\n      replacer = undefined;\n    }\n\n    if (typeof obj === \"object\" && obj !== null) {\n      const nextIndent = currentIndent + indent;\n      const items = [];\n      let index = 0;\n      let start;\n      let end;\n\n      if (Array.isArray(obj)) {\n        start = \"[\";\n        end = \"]\";\n        const { length } = obj;\n        for (; index < length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, index === length - 1 ? 0 : 1) ||\n              \"null\"\n          );\n        }\n      } else {\n        start = \"{\";\n        end = \"}\";\n        const keys = Object.keys(obj);\n        const { length } = keys;\n        for (; index < length; index++) {\n          const key = keys[index];\n          const keyPart = `${JSON.stringify(key)}: `;\n          const value = _stringify(\n            obj[key],\n            nextIndent,\n            keyPart.length + (index === length - 1 ? 0 : 1)\n          );\n          if (value !== undefined) {\n            items.push(keyPart + value);\n          }\n        }\n      }\n\n      if (items.length > 0) {\n        return [start, indent + items.join(`,\\n${nextIndent}`), end].join(\n          `\\n${currentIndent}`\n        );\n      }\n    }\n\n    return string;\n  })(passedObj, \"\", 0);\n}\n\nfunction sortKeysBy(obj, reference) {\n    const result = {};\n    for (const key in reference) {\n        if (obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n    }\n    for (const key in obj) {\n        if (result[key] === undefined) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n/**\n * Format a MapLibre Style.  Returns a stringified style with its keys\n * sorted in the same order as the reference style.\n *\n * The optional `space` argument is passed to\n * [`JSON.stringify`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify)\n * to generate formatted output.\n *\n * If `space` is unspecified, a default of `2` spaces will be used.\n *\n * @private\n * @param {Object} style a MapLibre Style\n * @param {number} [space] space argument to pass to `JSON.stringify`\n * @returns {string} stringified formatted JSON\n * @example\n * var fs = require('fs');\n * var format = require('maplibre-gl-style-spec').format;\n * var style = fs.readFileSync('./source.json', 'utf8');\n * fs.writeFileSync('./dest.json', format(style));\n * fs.writeFileSync('./dest.min.json', format(style, 0));\n */\nfunction format(style, space = 2) {\n    style = sortKeysBy(style, v8Spec.$root);\n    if (style.layers) {\n        style.layers = style.layers.map((layer) => sortKeysBy(layer, v8Spec.layer));\n    }\n    return stringify(style, { indent: space });\n}\n\nfunction eachLayout(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('layout') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\nfunction eachPaint(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('paint') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\nfunction resolveConstant(style, value) {\n    if (typeof value === 'string' && value[0] === '@') {\n        return resolveConstant(style, style.constants[value]);\n    }\n    else {\n        return value;\n    }\n}\nfunction isFunction(value) {\n    return Array.isArray(value.stops);\n}\nfunction renameProperty(obj, from, to) {\n    obj[to] = obj[from];\n    delete obj[from];\n}\nfunction migrateV8(style) {\n    style.version = 8;\n    // Rename properties, reverse coordinates in source and layers\n    eachSource(style, (source) => {\n        if (source.type === 'video' && source['url'] !== undefined) {\n            renameProperty(source, 'url', 'urls');\n        }\n        if (source.type === 'video') {\n            source.coordinates.forEach((coord) => {\n                return coord.reverse();\n            });\n        }\n    });\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['symbol-min-distance'] !== undefined) {\n                renameProperty(layout, 'symbol-min-distance', 'symbol-spacing');\n            }\n        });\n        eachPaint(layer, (paint) => {\n            if (paint['background-image'] !== undefined) {\n                renameProperty(paint, 'background-image', 'background-pattern');\n            }\n            if (paint['line-image'] !== undefined) {\n                renameProperty(paint, 'line-image', 'line-pattern');\n            }\n            if (paint['fill-image'] !== undefined) {\n                renameProperty(paint, 'fill-image', 'fill-pattern');\n            }\n        });\n    });\n    // Inline Constants\n    eachProperty(style, { paint: true, layout: true }, (property) => {\n        const value = resolveConstant(style, property.value);\n        if (isFunction(value)) {\n            value.stops.forEach((stop) => {\n                stop[1] = resolveConstant(style, stop[1]);\n            });\n        }\n        property.set(value);\n    });\n    delete style['constants'];\n    eachLayer(style, (layer) => {\n        // get rid of text-max-size, icon-max-size\n        // turn text-size, icon-size into layout properties\n        // https://github.com/mapbox/mapbox-gl-style-spec/issues/255\n        eachLayout(layer, (layout) => {\n            delete layout['text-max-size'];\n            delete layout['icon-max-size'];\n        });\n        eachPaint(layer, (paint) => {\n            if (paint['text-size']) {\n                if (!layer.layout)\n                    layer.layout = {};\n                layer.layout['text-size'] = paint['text-size'];\n                delete paint['text-size'];\n            }\n            if (paint['icon-size']) {\n                if (!layer.layout)\n                    layer.layout = {};\n                layer.layout['icon-size'] = paint['icon-size'];\n                delete paint['icon-size'];\n            }\n        });\n    });\n    function migrateFontStack(font) {\n        function splitAndTrim(string) {\n            return string.split(',').map((s) => {\n                return s.trim();\n            });\n        }\n        if (Array.isArray(font)) {\n            // Assume it's a previously migrated font-array.\n            return font;\n        }\n        else if (typeof font === 'string') {\n            return splitAndTrim(font);\n        }\n        else if (typeof font === 'object') {\n            font.stops.forEach((stop) => {\n                stop[1] = splitAndTrim(stop[1]);\n            });\n            return font;\n        }\n        else {\n            throw new Error('unexpected font value');\n        }\n    }\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['text-font']) {\n                layout['text-font'] = migrateFontStack(layout['text-font']);\n            }\n        });\n    });\n    // Reverse order of symbol layers. This is an imperfect migration.\n    //\n    // The order of a symbol layer in the layers list affects two things:\n    // - how it is drawn relative to other layers (like oneway arrows below bridges)\n    // - the placement priority compared to other layers\n    //\n    // It's impossible to reverse the placement priority without breaking the draw order\n    // in some cases. This migration only reverses the order of symbol layers that\n    // are above all other types of layers.\n    //\n    // Symbol layers that are at the top of the map preserve their priority.\n    // Symbol layers that are below another type (line, fill) of layer preserve their draw order.\n    let firstSymbolLayer = 0;\n    for (let i = style.layers.length - 1; i >= 0; i--) {\n        const layer = style.layers[i];\n        if (layer.type !== 'symbol') {\n            firstSymbolLayer = i + 1;\n            break;\n        }\n    }\n    const symbolLayers = style.layers.splice(firstSymbolLayer);\n    symbolLayers.reverse();\n    style.layers = style.layers.concat(symbolLayers);\n    return style;\n}\n\n/**\n * Migrate the given style object in place to use expressions. Specifically,\n * this will convert (a) \"stop\" functions, and (b) legacy filters to their\n * expression equivalents.\n * @param style The style object to migrate.\n * @returns The migrated style object.\n */\nfunction expressions(style) {\n    const converted = [];\n    eachLayer(style, (layer) => {\n        if (layer.filter) {\n            layer.filter = convertFilter(layer.filter);\n        }\n    });\n    eachProperty(style, { paint: true, layout: true }, ({ path, value, reference, set }) => {\n        if (isExpression(value))\n            return;\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            set(convertFunction(value, reference));\n            converted.push(path.join('.'));\n        }\n        else if (reference.tokens && typeof value === 'string') {\n            set(convertTokenString(value));\n        }\n    });\n    return style;\n}\n\n/**\n * Migrate color style values to supported format.\n *\n * @param colorToMigrate Color value to migrate, could be a string or an expression.\n * @returns Color style value in supported format.\n */\nfunction migrateColors(colorToMigrate) {\n    return JSON.parse(migrateHslColors(JSON.stringify(colorToMigrate)));\n}\n/**\n * Created to migrate from colors supported by the former CSS color parsing\n * library `csscolorparser` but not compliant with the CSS Color specification,\n * like `hsl(900, 0.15, 90%)`.\n *\n * @param colorToMigrate Serialized color style value.\n * @returns A serialized color style value in which all non-standard hsl color values\n * have been converted to a format that complies with the CSS Color specification.\n *\n * @example\n * migrateHslColors('\"hsl(900, 0.15, 90%)\"'); // returns '\"hsl(900, 15%, 90%)\"'\n * migrateHslColors('\"hsla(900, .15, .9)\"'); // returns '\"hsl(900, 15%, 90%)\"'\n * migrateHslColors('\"hsl(900, 15%, 90%)\"'); // returns '\"hsl(900, 15%, 90%)\"' - no changes\n */\nfunction migrateHslColors(colorToMigrate) {\n    return colorToMigrate.replace(/\"hsla?\\((.+?)\\)\"/gi, (match, hslArgs) => {\n        const argsMatch = hslArgs.match(/^(.+?)\\s*,\\s*(.+?)\\s*,\\s*(.+?)(?:\\s*,\\s*(.+))?$/i);\n        if (argsMatch) {\n            let [h, s, l, a] = argsMatch.slice(1);\n            [s, l] = [s, l].map(v => v.endsWith('%') ? v : `${parseFloat(v) * 100}%`);\n            return `\"hsl${typeof a === 'string' ? 'a' : ''}(${[h, s, l, a].filter(Boolean).join(',')})\"`;\n        }\n        return match;\n    });\n}\n\n/**\n * Migrate a Mapbox/MapLibre GL Style to the latest version.\n *\n * @param style - a MapLibre Style\n * @returns a migrated style\n * @example\n * const fs = require('fs');\n * const migrate = require('@maplibre/maplibre-gl-style-spec').migrate;\n * const style = fs.readFileSync('./style.json', 'utf8');\n * fs.writeFileSync('./style.json', JSON.stringify(migrate(style)));\n */\nfunction migrate(style) {\n    let migrated = false;\n    if (style.version === 7) {\n        style = migrateV8(style);\n        migrated = true;\n    }\n    if (style.version === 8) {\n        migrated = !!expressions(style);\n        migrated = true;\n    }\n    eachProperty(style, { paint: true, layout: true }, ({ value, reference, set }) => {\n        if (reference.type === 'color') {\n            set(migrateColors(value));\n        }\n    });\n    if (!migrated) {\n        throw new Error(`Cannot migrate from ${style.version}`);\n    }\n    return style;\n}\n\nconst v8 = v8Spec;\nconst expression = {\n    StyleExpression,\n    StylePropertyFunction,\n    ZoomConstantExpression,\n    ZoomDependentExpression,\n    createExpression,\n    createPropertyExpression,\n    isExpression,\n    isExpressionFilter,\n    isZoomExpression,\n    normalizePropertyExpression,\n};\nconst styleFunction = {\n    convertFunction,\n    createFunction,\n    isFunction: isFunction$1\n};\nconst visit = { eachLayer, eachProperty, eachSource };\n\nexport { Color, ColorType, CompoundExpression, EvaluationContext, FormatExpression, Formatted, FormattedSection, FormattedType, Interpolate, Literal, NullType, Padding, ParsingError, ProjectionDefinition, ProjectionDefinitionType, ResolvedImage, Step, StyleExpression, StylePropertyFunction, ValidationError, VariableAnchorOffsetCollection, ZoomConstantExpression, ZoomDependentExpression, classifyRings, convertFilter, convertFunction, createExpression, createFunction, createPropertyExpression, derefLayers, diff, emptyStyle, expression, expressions$1 as expressions, featureFilter, format, styleFunction as function, groupByLayout, interpolateFactory as interpolates, isExpression, isFunction$1 as isFunction, isZoomExpression, v8Spec as latest, migrate, normalizePropertyExpression, supportsPropertyExpression, typeToString as toString, typeOf, v8, validate, validateStyleMin, visit };\n//# sourceMappingURL=index.mjs.map\n","const mapboxBaseUrl = 'https://api.mapbox.com';\n\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nexport function getMapboxPath(url) {\n  const startsWith = 'mapbox://';\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n  return url.slice(startsWith.length);\n}\n\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeSpriteUrl(url, token, styleUrl) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n  const startsWith = 'sprites/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected sprites url: ${url}`);\n  }\n  const sprite = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${sprite}/sprite?access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeStyleUrl(url, token) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n  const startsWith = 'styles/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected style url: ${url}`);\n  }\n  const style = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${style}?&access_token=${token}`;\n}\n\nconst mapboxSubdomains = ['a', 'b', 'c', 'd'];\n\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {Array<string>} A vector tile template.\n * @private\n */\nexport function normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  const urlObject = new URL(url, styleUrl);\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    if (!token) {\n      return [decodeURI(urlObject.href)];\n    }\n    if (!urlObject.searchParams.has(tokenParam)) {\n      urlObject.searchParams.set(tokenParam, token);\n    }\n    return [decodeURI(urlObject.href)];\n  }\n\n  if (mapboxPath === 'mapbox.satellite') {\n    const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n    return [\n      `https://api.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}${sizeFactor}.webp?access_token=${token}`,\n    ];\n  }\n  return mapboxSubdomains.map(\n    (sub) =>\n      `https://${sub}.tiles.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}.vector.pbf?access_token=${token}`,\n  );\n}\n","import TileState from 'ol/TileState.js';\nimport {VectorTile} from 'ol';\nimport {getUid} from 'ol/util.js';\nimport {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\nimport {toPromise} from 'ol/functions.js';\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\n\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\n\nlet styleId = 0;\nexport function getStyleId(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  return glStyle.id;\n}\n\nexport function getStyleFunctionKey(glStyle, olLayer) {\n  return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nexport function getFunctionCache(glStyle) {\n  let functionCache = functionCacheByStyleId[glStyle.id];\n  if (!functionCache) {\n    functionCache = {};\n    functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n  }\n  return functionCache;\n}\n\nexport function clearFunctionCache() {\n  for (const key in functionCacheByStyleId) {\n    delete functionCacheByStyleId[key];\n  }\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nexport function getFilterCache(glStyle) {\n  let filterCache = filterCacheByStyleId[glStyle.id];\n  if (!filterCache) {\n    filterCache = {};\n    filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n  }\n  return filterCache;\n}\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nexport function getResolutionForZoom(zoom, resolutions) {\n  const base = Math.floor(zoom);\n  const factor = Math.pow(2, zoom - base);\n  return resolutions[base] / factor;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.request = pendingRequests[url][0];\n    }\n    return pendingRequests[url][1];\n  }\n  const transformedRequest = options.transformRequest\n    ? options.transformRequest(url, resourceType) || url\n    : url;\n  const pendingRequest = toPromise(() => transformedRequest).then(\n    (transformedRequest) => {\n      if (!(transformedRequest instanceof Request)) {\n        transformedRequest = new Request(transformedRequest);\n      }\n      if (!transformedRequest.headers.get('Accept')) {\n        transformedRequest.headers.set('Accept', 'application/json');\n      }\n      if (metadata) {\n        metadata.request = transformedRequest;\n      }\n      return fetch(transformedRequest)\n        .then(function (response) {\n          delete pendingRequests[url];\n          return response.ok\n            ? response.json()\n            : Promise.reject(new Error('Error fetching source ' + url));\n        })\n        .catch(function (error) {\n          delete pendingRequests[url];\n          return Promise.reject(new Error('Error fetching source ' + url));\n        });\n    },\n  );\n  pendingRequests[url] = [transformedRequest, pendingRequest];\n  return pendingRequest;\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise<{tileJson: Object, tileLoadFunction: import('ol/Tile.js').LoadFunction}?>} TileJson and load function\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    let tileLoadFunction;\n    if (options.transformRequest) {\n      tileLoadFunction = (tile, src) => {\n        const transformedRequest = options.transformRequest\n          ? options.transformRequest(src, 'Tiles') || src\n          : src;\n        if (tile instanceof VectorTile) {\n          tile.setLoader((extent, resolution, projection) => {\n            toPromise(() => transformedRequest).then((transformedRequest) => {\n              fetch(transformedRequest)\n                .then((response) => response.arrayBuffer())\n                .then((data) => {\n                  const format = tile.getFormat();\n                  const features = format.readFeatures(data, {\n                    extent: extent,\n                    featureProjection: projection,\n                  });\n                  // @ts-ignore\n                  tile.setFeatures(features);\n                })\n                .catch((e) => tile.setState(TileState.ERROR));\n            });\n          });\n        } else {\n          const img = tile.getImage();\n          toPromise(() => transformedRequest).then((transformedRequest) => {\n            if (transformedRequest instanceof Request) {\n              fetch(transformedRequest)\n                .then((response) => response.blob())\n                .then((blob) => {\n                  const url = URL.createObjectURL(blob);\n                  img.addEventListener('load', () => URL.revokeObjectURL(url));\n                  img.addEventListener('error', () => URL.revokeObjectURL(url));\n                  img.src = url;\n                })\n                .catch((e) => tile.setState(TileState.ERROR));\n            } else {\n              img.src = transformedRequest;\n            }\n          });\n        }\n      };\n    }\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href,\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve({\n          tileJson: Object.assign({}, glSource, {\n            url: undefined,\n            tiles: normalizedSourceUrl,\n          }),\n          tileLoadFunction,\n        });\n      } else {\n        const metadata = {};\n        promise = fetchResource(\n          'Source',\n          normalizedSourceUrl[0],\n          options,\n          metadata,\n        ).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            if (tileJson.scheme === 'tms') {\n              tileUrl = tileUrl.replace('{y}', '{-y}');\n            }\n            return normalizeSourceUrl(\n              tileUrl,\n              options.accessToken,\n              options.accessTokenParam || 'access_token',\n              metadata.request.url,\n            )[0];\n          });\n          return Promise.resolve({tileJson, tileLoadFunction});\n        });\n      }\n    } else {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          if (glSource.scheme === 'tms') {\n            tileUrl = tileUrl.replace('{y}', '{-y}');\n          }\n          return normalizeSourceUrl(\n            tileUrl,\n            options.accessToken,\n            options.accessTokenParam || 'access_token',\n            styleUrl || location.href,\n          )[0];\n        }),\n      });\n      promise = Promise.resolve({\n        tileJson: Object.assign({}, glSource),\n        tileLoadFunction,\n      });\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nexport function drawIconHalo(\n  spriteImage,\n  spriteImageData,\n  haloWidth,\n  haloColor,\n) {\n  const imgSize = [\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height,\n  ];\n  const imageCanvas = createCanvas(imgSize[0], imgSize[1]);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    spriteImage,\n    spriteImageData.x,\n    spriteImageData.y,\n    spriteImageData.width,\n    spriteImageData.height,\n    haloWidth * spriteImageData.pixelRatio,\n    haloWidth * spriteImageData.pixelRatio,\n    spriteImageData.width,\n    spriteImageData.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n  imageContext.globalCompositeOperation = 'destination-over';\n  imageContext.fillStyle = `rgba(${haloColor.r * 255},${haloColor.g * 255},${\n    haloColor.b * 255\n  },${haloColor.a})`;\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const alpha = data[index + 3];\n      if (alpha > 0) {\n        imageContext.arc(\n          i,\n          j,\n          haloWidth * spriteImageData.pixelRatio,\n          0,\n          2 * Math.PI,\n        );\n      }\n    }\n  }\n  imageContext.fill();\n  return imageCanvas;\n}\n\nfunction smoothstep(min, max, value) {\n  const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n  return x * x * (3 - 2 * x);\n}\n\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nexport function drawSDF(image, area, color) {\n  const imageCanvas = createCanvas(area.width, area.height);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    image,\n    area.x,\n    area.y,\n    area.width,\n    area.height,\n    0,\n    0,\n    area.width,\n    area.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const dist = data[index + 3] / 255;\n\n      const buffer = 0.75;\n      const gamma = 0.1;\n\n      const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n      if (alpha > 0) {\n        data[index + 0] = Math.round(255 * color.r * alpha);\n        data[index + 1] = Math.round(255 * color.g * alpha);\n        data[index + 2] = Math.round(255 * color.b * alpha);\n        data[index + 3] = Math.round(255 * alpha);\n      } else {\n        data[index + 3] = 0;\n      }\n    }\n  }\n  imageContext.putImageData(imageData, 0, 0);\n  return imageCanvas;\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @private\n */\n","import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts, registerFont} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1),\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n  if (!loadedFontFamilies) {\n    loadedFontFamilies = {};\n    const styleSheets = document.styleSheets;\n    for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n      const styleSheet = /** @type {CSSStyleSheet} */ (styleSheets[i]);\n      try {\n        const cssRules = styleSheet.rules || styleSheet.cssRules;\n        if (cssRules) {\n          for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n            const cssRule = cssRules[j];\n            if (cssRule.type == 5) {\n              const match = cssRule.cssText.match(fontFamilyRegEx);\n              loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n            }\n          }\n        }\n      } catch (e) {\n        // empty catch block\n      }\n    }\n  }\n  return family in loadedFontFamilies;\n}\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(\n  fonts,\n  templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css',\n) {\n  const fontsKey = fonts.toString();\n  if (fontsKey in processedFontFamilies) {\n    return processedFontFamilies[fontsKey];\n  }\n  const fontDescriptions = [];\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n    const font = fonts[i];\n    const cssFont = mb2css(font, 1);\n    registerFont(cssFont);\n    const parts = cssFont.split(' ');\n    fontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n    const fontDescription = fontDescriptions[i];\n    const family = fontDescription[0];\n    if (!hasFontFamily(family)) {\n      if (\n        checkedFonts.get(\n          `${fontDescription[2]}\\n${fontDescription[1]} \\n${family}`,\n        ) !== 100\n      ) {\n        const fontUrl = templateUrl\n          .replace('{font-family}', family.replace(/ /g, '-').toLowerCase())\n          .replace('{Font+Family}', family.replace(/ /g, '+'))\n          .replace('{fontweight}', fontDescription[1])\n          .replace(\n            '{-fontstyle}',\n            fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1'),\n          )\n          .replace('{fontstyle}', fontDescription[2]);\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  }\n  processedFontFamilies[fontsKey] = fonts;\n  return fonts;\n}\n","/*\nol-mapbox-style - Use Mapbox/MapLibre Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\nimport {toPromise} from 'ol/functions.js';\n\nimport mb2css from 'mapbox-to-css-font';\nimport {\n  Color,\n  convertFunction,\n  featureFilter as createFilter,\n  createPropertyExpression,\n  derefLayers,\n  isExpression,\n  isFunction,\n  v8 as spec,\n} from '@maplibre/maplibre-gl-style-spec';\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  clearFunctionCache,\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  drawIconHalo,\n  drawSDF,\n  getFilterCache,\n  getFunctionCache,\n  getStyleFunctionKey,\n  getZoomForResolution,\n} from './util.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n * @typedef {import('./util.js').ResourceType} ResourceType\n */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec,\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', '),\n    );\n  }\n  return compiledExpression.value;\n};\n\nconst emptyObj = {};\nconst zoomObj = {zoom: 0};\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  zoom,\n  feature,\n  functionCache,\n  featureState,\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); //eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  zoomObj.zoom = zoom;\n  return functions[property](zoomObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {\"icon\"|\"text\"} prefix Style property prefix.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getDeclutterMode(layer, zoom, feature, prefix, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    `${prefix}-allow-overlap`,\n    zoom,\n    feature,\n    functionCache,\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    `${prefix}-ignore-placement`,\n    zoom,\n    feature,\n    functionCache,\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); //eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    filterCache[layerId] = createFilter(filter).filter;\n  }\n  zoomObj.zoom = zoom;\n  return filterCache[layerId](zoomObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  if (enabled !== renderTransparentEnabled) {\n    clearFunctionCache();\n    renderTransparentEnabled = enabled;\n  }\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox/MapLibre Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\nexport const styleFunctionArgs = {};\n\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox/MapLibre Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox/MapLibre Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox/MapLibre Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox/MapLibre Style object.\n * @param {string|Request|Promise<string|Request>} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox/MapLibre Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox/MapLibre Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox/MapLibre Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined,\n  getImage = undefined,\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n  styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] =\n    Array.from(arguments);\n\n  let spriteImage, spriteImageSize;\n  let spriteImageUnSDFed;\n\n  if (spriteImageUrl) {\n    if (typeof Image !== 'undefined') {\n      const img = new Image();\n      let blobUrl;\n      toPromise(() => spriteImageUrl).then((spriteImageUrl) => {\n        if (spriteImageUrl instanceof Request) {\n          fetch(spriteImageUrl)\n            .then((response) => response.blob())\n            .then((blob) => {\n              blobUrl = URL.createObjectURL(blob);\n              img.src = blobUrl;\n            })\n            .catch(() => {});\n        } else {\n          img.crossOrigin = 'anonymous';\n          img.src = spriteImageUrl;\n          if (blobUrl) {\n            URL.revokeObjectURL(blobUrl);\n          }\n        }\n      });\n      img.onload = function () {\n        spriteImage = img;\n        spriteImageSize = [img.width, img.height];\n        olLayer.changed();\n        img.onload = null;\n      };\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) { //eslint-disable-line\n      const worker = /** @type {*} */ (self);\n      // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n      worker.postMessage({\n        action: 'loadImage',\n        src: spriteImageUrl,\n      });\n      worker.addEventListener('message', function handler(event) {\n        if (\n          event.data.action === 'imageLoaded' &&\n          event.data.src === spriteImageUrl\n        ) {\n          spriteImage = event.data.image;\n          spriteImageSize = [spriteImage.width, spriteImage.height];\n        }\n      });\n    }\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = getFunctionCache(glStyle);\n  const filterCache = getFilterCache(glStyle);\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      (Array.isArray(sourceOrLayers) && sourceOrLayers.indexOf(layerId) !== -1)\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`,\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`,\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n  const styleFunction = function (feature, resolution, onlyLayer) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties.layer];\n    if (!layers) {\n      return undefined;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    const type = types[feature.getGeometry().getType()];\n    const f = {\n      id: feature.getId(),\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n      if (onlyLayer !== undefined && onlyLayer !== layerId) {\n        continue;\n      }\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              if (spriteImage && spriteData && spriteData[icon]) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n                opacity,\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          if (!('line-pattern' in paint)) {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'line-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              getValue(\n                layer,\n                'paint',\n                'line-opacity',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n          } else {\n            color = undefined;\n          }\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null,\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            if (\n              (spriteImage && spriteData && spriteData[icon]) ||\n              imageElement\n            ) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              );\n              if (type == 2) {\n                const geom = /** @type {*} */ (feature.getGeometry());\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2),\n                    ),\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        2,\n                        {},\n                        undefined,\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState,\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const maxX = Math.max(x1, x2);\n                        const xM = midpoint[0];\n                        const yM = midpoint[1];\n                        const dotProduct =\n                          (y2 - y1) * (xM - x1) - (x2 - x1) * (yM - y1);\n                        if (\n                          Math.abs(dotProduct) < 0.001 && //midpoint is aligned with the segment\n                          xM <= maxX &&\n                          xM >= minX //midpoint is on the segment and not outside it\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  const haloWidth = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-width',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getDeclutterMode(\n                      layer,\n                      zoom,\n                      f,\n                      'icon',\n                      functionCache,\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      ).slice(0);\n                      displacement[0] *= iconSize;\n                      displacement[1] *= -iconSize;\n                    }\n                    let color = iconColor\n                      ? [\n                          iconColor.r * 255,\n                          iconColor.g * 255,\n                          iconColor.b * 255,\n                          iconColor.a,\n                        ]\n                      : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                        scale: iconSize,\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [\n                          imageElement.width,\n                          imageElement.height,\n                        ];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, size, offset;\n                      if (haloWidth) {\n                        if (spriteImageData.sdf) {\n                          img = drawIconHalo(\n                            drawSDF(\n                              spriteImage,\n                              spriteImageData,\n                              iconColor || [0, 0, 0, 1],\n                            ),\n                            {\n                              x: 0,\n                              y: 0,\n                              width: spriteImageData.width,\n                              height: spriteImageData.height,\n                              pixelRatio: spriteImageData.pixelRatio,\n                            },\n                            haloWidth,\n                            haloColor,\n                          );\n                          color = undefined; // do not tint haloed icons\n                        } else {\n                          img = drawIconHalo(\n                            spriteImage,\n                            spriteImageData,\n                            haloWidth,\n                            haloColor,\n                          );\n                        }\n                      } else {\n                        if (spriteImageData.sdf) {\n                          if (!spriteImageUnSDFed) {\n                            spriteImageUnSDFed = drawSDF(\n                              spriteImage,\n                              {\n                                x: 0,\n                                y: 0,\n                                width: spriteImageSize[0],\n                                height: spriteImageSize[1],\n                              },\n                              {r: 1, g: 1, b: 1, a: 1},\n                            );\n                          }\n                          img = spriteImageUnSDFed;\n                        } else {\n                          img = spriteImage;\n                        }\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        // @ts-ignore\n                        imgSize: spriteImageSize,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          zoom,\n                          f,\n                          functionCache,\n                          featureState,\n                        ),\n                      ),\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState,\n                    ),\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    ],\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n\n          const circleTranslate = getValue(\n            layer,\n            'paint',\n            'circle-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth +\n            '.' +\n            circleTranslate[0] +\n            '.' +\n            circleTranslate[1];\n\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              displacement: [circleTranslate[0], -circleTranslate[1]],\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          font = mb2css(\n            getFonts\n              ? getFonts(\n                  fontArray,\n                  glStyle.metadata\n                    ? glStyle.metadata['ol:webfonts']\n                    : undefined,\n                )\n              : fontArray,\n            textSize,\n            textLineHeight,\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight,\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return acc;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing,\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          const declutterMode = getDeclutterMode(\n            layer,\n            zoom,\n            f,\n            'text',\n            functionCache,\n          );\n          if (!style.getText()) {\n            style.setText(text);\n          }\n          text = style.getText();\n          if (\n            !text ||\n            ('getDeclutterMode' in text &&\n              text.getDeclutterMode() !== declutterMode)\n          ) {\n            text = new Text({\n              padding: [2, 2, 2, 2],\n              // @ts-ignore\n              declutterMode: declutterMode,\n            });\n            style.setText(text);\n          }\n          const textTransform = getValue(\n            layer,\n            'layout',\n            'text-transform',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n              ? applyLetterSpacing(label, letterSpacing)\n              : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            ),\n          );\n          if (typeof text.setKeepUpright === 'function') {\n            const keepUpright = getValue(\n              layer,\n              'layout',\n              'text-keep-upright',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setKeepUpright(keepUpright);\n          }\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                );\n          let textAlign;\n          if (placement === 'line-center') {\n            text.setPlacement('line');\n            textAlign = 'center';\n          } else {\n            text.setPlacement(placement);\n          }\n          if (placement === 'line' && typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(\n              layer,\n              'layout',\n              'symbol-spacing',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n              ) *\n                label.length) /\n                wrappedLabel.length,\n            );\n            text.setRotateWithView(false);\n          }\n          text.setTextAlign(textAlign);\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0],\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1],\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            ),\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            opacity,\n          );\n          if (haloColor && textHaloWidth > 0) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize,\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if ('set' in feature) {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n    return undefined;\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n  return styleFunction;\n}\n\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nexport function getStyleForLayer(feature, resolution, olLayer, layerId) {\n  const evaluateStyle = olLayer.getStyleFunction();\n  if (evaluateStyle.length === 3) {\n    // @ts-ignore\n    return evaluateStyle(feature, resolution, layerId);\n  }\n  return undefined;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n","/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nexport function hillshade(inputs, data) {\n  const elevationImage = inputs[0];\n  const width = elevationImage.width;\n  const height = elevationImage.height;\n  const elevationData = elevationImage.data;\n  const shadeData = new Uint8ClampedArray(elevationData.length);\n  const dp = data.resolution * 2;\n  const maxX = width - 1;\n  const maxY = height - 1;\n  const pixel = [0, 0, 0, 0];\n  const twoPi = 2 * Math.PI;\n  const halfPi = Math.PI / 2;\n  const sunEl = (Math.PI * data.sunEl) / 180;\n  const sunAz = (Math.PI * data.sunAz) / 180;\n  const cosSunEl = Math.cos(sunEl);\n  const sinSunEl = Math.sin(sunEl);\n  const highlightColor = data.highlightColor;\n  const shadowColor = data.shadowColor;\n  const accentColor = data.accentColor;\n  const encoding = data.encoding;\n\n  let pixelX,\n    pixelY,\n    x0,\n    x1,\n    y0,\n    y1,\n    offset,\n    z0,\n    z1,\n    dzdx,\n    dzdy,\n    slope,\n    aspect,\n    accent,\n    scaled,\n    shade,\n    scaledAccentColor,\n    compositeShadeColor,\n    clamp,\n    slopeScaleBase,\n    scaledSlope,\n    cosIncidence;\n\n  function calculateElevation(pixel, encoding = 'mapbox') {\n    // The method used to extract elevations from the DEM.\n    //\n    // The supported methods are the Mapbox format\n    // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n    // and the Terrarium format\n    // (red * 256 + green + blue / 256) - 32768\n    //\n    if (encoding === 'mapbox') {\n      return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n    }\n    if (encoding === 'terrarium') {\n      return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n    }\n  }\n  for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n    y0 = pixelY === 0 ? 0 : pixelY - 1;\n    y1 = pixelY === maxY ? maxY : pixelY + 1;\n    for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n      x0 = pixelX === 0 ? 0 : pixelX - 1;\n      x1 = pixelX === maxX ? maxX : pixelX + 1;\n\n      // determine elevation for (x0, pixelY)\n      offset = (pixelY * width + x0) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (x1, pixelY)\n      offset = (pixelY * width + x1) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdx = (z1 - z0) / dp;\n\n      // determine elevation for (pixelX, y0)\n      offset = (y0 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (pixelX, y1)\n      offset = (y1 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdy = (z1 - z0) / dp;\n\n      aspect = Math.atan2(dzdy, -dzdx);\n      if (aspect < 0) {\n        aspect = halfPi - aspect;\n      } else if (aspect > halfPi) {\n        aspect = twoPi - aspect + halfPi;\n      } else {\n        aspect = halfPi - aspect;\n      }\n\n      // Bootstrap slope and corresponding incident values\n      slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n      cosIncidence =\n        sinSunEl * Math.cos(slope) +\n        cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n      accent = Math.cos(slope);\n      // 255 for Hex colors\n      scaled = 255 * cosIncidence;\n\n      /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n\n      // Forces given value to stay between two given extremes\n      clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n\n      // Intensity basis for hillshade opacity\n      slopeScaleBase = 1.875 - data.opacity * 1.75;\n      // Intensity interpolation so that higher intensity values create more opaque hillshading\n      scaledSlope =\n        data.opacity !== 0.5\n          ? halfPi *\n            ((Math.pow(slopeScaleBase, slope) - 1) /\n              (Math.pow(slopeScaleBase, halfPi) - 1))\n          : slope;\n\n      // Accent hillshade color with given accentColor to emphasize rougher terrain\n      scaledAccentColor = {\n        r: (1 - accent) * accentColor.r * clamp * 255,\n        g: (1 - accent) * accentColor.g * clamp * 255,\n        b: (1 - accent) * accentColor.b * clamp * 255,\n        a: (1 - accent) * accentColor.a * clamp * 255,\n      };\n\n      // Allows highlight vs shadow discrimination\n      shade = Math.abs((((aspect + sunAz) / Math.PI + 0.5) % 2) - 1);\n      // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n      compositeShadeColor = {\n        r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n        g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n        b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n        a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled,\n      };\n\n      // Fill in result color value\n      offset = (pixelY * width + pixelX) * 4;\n      shadeData[offset] =\n        scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n      shadeData[offset + 1] =\n        scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n      shadeData[offset + 2] =\n        scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n      // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n      shadeData[offset + 3] =\n        elevationData[offset + 3] *\n        data.opacity *\n        clamp *\n        Math.sin(scaledSlope);\n    }\n  }\n\n  return new ImageData(shadeData, width, height);\n}\n","/*\nol-mapbox-style - Use Mapbox/MapLibre Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, {defaultLoadFunction} from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport {METERS_PER_UNIT} from 'ol/proj/Units.js';\nimport {\n  _colorWithOpacity,\n  stylefunction as applyStylefunction,\n  getValue,\n  styleFunctionArgs,\n} from './stylefunction.js';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy.js';\nimport {createXYZ} from 'ol/tilegrid.js';\nimport {\n  defaultResolutions,\n  fetchResource,\n  getFilterCache,\n  getFunctionCache,\n  getGlStyle,\n  getResolutionForZoom,\n  getStyleFunctionKey,\n  getTileJson,\n  getZoomForResolution,\n} from './util.js';\nimport {derefLayers} from '@maplibre/maplibre-gl-style-spec';\nimport {\n  equivalent,\n  fromLonLat,\n  getPointResolution,\n  get as getProjection,\n  getUserProjection,\n} from 'ol/proj.js';\nimport {getCenter, getTopLeft} from 'ol/extent.js';\nimport {getFonts} from './text.js';\nimport {hillshade} from './shaders.js';\nimport {\n  normalizeSourceUrl,\n  normalizeSpriteUrl,\n  normalizeStyleUrl,\n} from './mapbox.js';\n\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, import(\"./util.js\").ResourceType): (Request|string|Promise<Request|string>|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` or a url `string`, or a promise tehereof.\n * Without a return value the original request will not be modified.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox/MapLibre style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {string} [webfonts] Template for resolving webfonts. Can be used to specify where to fetch\n * web fonts when no `ol:webfonts` metadata is set in the style object. See `getFonts()` and the\n * \"Font handling\" section in `README.md` for details.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n  return projection.getExtent()\n    ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22,\n      }).getResolutions()\n    : defaultResolutions;\n}\n\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n  if (!options.accessToken) {\n    options = Object.assign({}, options);\n    const searchParams = new URL(styleUrl).searchParams;\n    // The last search parameter is the access token\n    searchParams.forEach((value, key) => {\n      options.accessToken = value;\n      options.accessTokenParam = key;\n    });\n  }\n  return options;\n}\n\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox/MapLibre Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox/MapLibre Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nexport function applyStyle(\n  layer,\n  glStyle,\n  sourceOrLayersOrOptions = '',\n  optionsOrPath = {},\n  resolutions = undefined,\n) {\n  let styleUrl, sourceId;\n  /** @type {Options&ApplyStyleOptions} */\n  let options;\n  let sourceOrLayers;\n  let updateSource = true;\n  if (\n    typeof sourceOrLayersOrOptions !== 'string' &&\n    !Array.isArray(sourceOrLayersOrOptions)\n  ) {\n    options = sourceOrLayersOrOptions;\n    sourceOrLayers = options.source || options.layers;\n    optionsOrPath = options;\n  } else {\n    sourceOrLayers = sourceOrLayersOrOptions;\n  }\n  if (typeof optionsOrPath === 'string') {\n    styleUrl = optionsOrPath;\n    options = {};\n  } else {\n    styleUrl = optionsOrPath.styleUrl;\n    options = optionsOrPath;\n  }\n  if (options.updateSource === false) {\n    updateSource = false;\n  }\n  if (!resolutions) {\n    resolutions = options.resolutions;\n  }\n  if (\n    !styleUrl &&\n    typeof glStyle === 'string' &&\n    !glStyle.trim().startsWith('{')\n  ) {\n    styleUrl = glStyle;\n  }\n  if (styleUrl) {\n    styleUrl = styleUrl.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(styleUrl, options.accessToken);\n    options = completeOptions(styleUrl, options);\n  }\n\n  return new Promise(function (resolve, reject) {\n    // TODO: figure out where best place to check source type is\n    // Note that the source arg is an array of gl layer ids and each must be\n    // dereferenced to get source type to validate\n    getGlStyle(glStyle, options)\n      .then(function (glStyle) {\n        if (glStyle.version != 8) {\n          return reject(new Error('glStyle version 8 required.'));\n        }\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          return reject(\n            new Error('Can only apply to VectorLayer or VectorTileLayer'),\n          );\n        }\n\n        const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n        if (!sourceOrLayers) {\n          sourceId = Object.keys(glStyle.sources).find(function (key) {\n            return glStyle.sources[key].type === type;\n          });\n          sourceOrLayers = sourceId;\n        } else if (Array.isArray(sourceOrLayers)) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.id === sourceOrLayers[0];\n          }).source;\n        } else {\n          sourceId = sourceOrLayers;\n        }\n        if (!sourceId) {\n          return reject(new Error(`No ${type} source found in the glStyle.`));\n        }\n\n        function assignSource() {\n          if (!updateSource) {\n            return Promise.resolve();\n          }\n          if (layer instanceof VectorTileLayer) {\n            return setupVectorSource(\n              glStyle.sources[sourceId],\n              styleUrl,\n              options,\n            ).then(function (source) {\n              const targetSource = layer.getSource();\n              if (!targetSource) {\n                layer.setSource(source);\n              } else if (source !== targetSource) {\n                targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                if (\n                  typeof targetSource.setUrls === 'function' &&\n                  typeof source.getUrls === 'function'\n                ) {\n                  // to get correct keys for tile cache and queue\n                  targetSource.setUrls(source.getUrls());\n                }\n                //@ts-ignore\n                if (!targetSource.format_) {\n                  //@ts-ignore\n                  targetSource.format_ = source.format_;\n                }\n                if (!targetSource.getAttributions()) {\n                  targetSource.setAttributions(source.getAttributions());\n                }\n                if (\n                  targetSource.getTileLoadFunction() === defaultLoadFunction\n                ) {\n                  targetSource.setTileLoadFunction(\n                    source.getTileLoadFunction(),\n                  );\n                }\n                if (\n                  equivalent(\n                    targetSource.getProjection(),\n                    source.getProjection(),\n                  )\n                ) {\n                  targetSource.tileGrid = source.getTileGrid();\n                }\n              }\n              const tileGrid = layer.getSource().getTileGrid();\n              if (\n                !isFinite(layer.getMaxResolution()) &&\n                !isFinite(layer.getMinZoom()) &&\n                tileGrid.getMinZoom() > 0\n              ) {\n                layer.setMaxResolution(\n                  getResolutionForZoom(\n                    Math.max(0, tileGrid.getMinZoom() - 1e-12),\n                    tileGrid.getResolutions(),\n                  ),\n                );\n              }\n            });\n          }\n          const glSource = glStyle.sources[sourceId];\n          let source = layer.getSource();\n          if (!source || source.get('mapbox-source') !== glSource) {\n            source = setupGeoJSONSource(glSource, styleUrl, options);\n          }\n          const targetSource = /** @type {VectorSource} */ (layer.getSource());\n          if (!targetSource) {\n            layer.setSource(source);\n          } else if (source !== targetSource) {\n            if (!targetSource.getAttributions()) {\n              targetSource.setAttributions(source.getAttributions());\n            }\n            //@ts-ignore\n            if (!targetSource.format_) {\n              //@ts-ignore\n              targetSource.format_ = source.getFormat();\n            }\n            //@ts-ignore\n            targetSource.url_ = source.getUrl();\n          }\n          return Promise.resolve();\n        }\n\n        let spriteScale, spriteData, spriteImageUrl, style;\n        function onChange() {\n          if (!style && (!glStyle.sprite || spriteData)) {\n            if (options.projection && !resolutions) {\n              const projection = getProjection(options.projection);\n              const units = projection.getUnits();\n              if (units !== 'm') {\n                resolutions = defaultResolutions.map(\n                  (resolution) => resolution / METERS_PER_UNIT[units],\n                );\n              }\n            }\n            style = applyStylefunction(\n              layer,\n              glStyle,\n              sourceOrLayers,\n              resolutions,\n              spriteData,\n              spriteImageUrl,\n              (fonts, templateUrl = options.webfonts) =>\n                getFonts(fonts, templateUrl),\n              options.getImage,\n            );\n            if (!layer.getStyle()) {\n              reject(new Error(`Nothing to show for source [${sourceId}]`));\n            } else {\n              assignSource().then(resolve).catch(reject);\n            }\n          } else if (style) {\n            layer.setStyle(style);\n            assignSource().then(resolve).catch(reject);\n          } else {\n            reject(new Error('Something went wrong trying to apply style.'));\n          }\n        }\n\n        if (glStyle.sprite) {\n          const sprite = new URL(\n            normalizeSpriteUrl(\n              glStyle.sprite,\n              options.accessToken,\n              styleUrl || location.href,\n            ),\n          );\n          spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n          const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n          let spriteUrl =\n            sprite.origin +\n            sprite.pathname +\n            sizeFactor +\n            '.json' +\n            sprite.search;\n\n          new Promise(function (resolve, reject) {\n            fetchResource('Sprite', spriteUrl, options)\n              .then(resolve)\n              .catch(function (error) {\n                spriteUrl =\n                  sprite.origin + sprite.pathname + '.json' + sprite.search;\n                fetchResource('Sprite', spriteUrl, options)\n                  .then(resolve)\n                  .catch(reject);\n              });\n          })\n            .then(function (spritesJson) {\n              if (spritesJson === undefined) {\n                reject(new Error('No sprites found.'));\n              }\n              spriteData = spritesJson;\n              spriteImageUrl =\n                sprite.origin +\n                sprite.pathname +\n                sizeFactor +\n                '.png' +\n                sprite.search;\n              if (options.transformRequest) {\n                const transformed =\n                  options.transformRequest(spriteImageUrl, 'SpriteImage') ||\n                  spriteImageUrl;\n                if (\n                  transformed instanceof Request ||\n                  transformed instanceof Promise\n                ) {\n                  spriteImageUrl = transformed;\n                }\n              }\n              onChange();\n            })\n            .catch(function (err) {\n              reject(\n                new Error(\n                  `Sprites cannot be loaded: ${spriteUrl}: ${err.message}`,\n                ),\n              );\n            });\n        } else {\n          onChange();\n        }\n      })\n      .catch(reject);\n  });\n}\n\nconst emptyObj = {};\n\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n  glStyle.layers.some(function (layer) {\n    if (layer.type === 'background') {\n      if (mapOrLayer instanceof Layer) {\n        mapOrLayer.setBackground(function (resolution) {\n          return getBackgroundColor(layer, resolution, options, {});\n        });\n        return true;\n      }\n      if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n        mapOrLayer\n          .getLayers()\n          .insertAt(0, setupBackgroundLayer(layer, options, {}));\n        return true;\n      }\n    }\n  });\n}\n\n/**\n * Applies properties of the Mapbox/MapLibre Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox/MapLibre Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nexport function applyBackground(mapOrLayer, glStyle, options = {}) {\n  return getGlStyle(glStyle, options).then(function (glStyle) {\n    setFirstBackground(mapOrLayer, glStyle, options);\n  });\n}\n\nfunction getSourceIdByRef(layers, ref) {\n  let sourceId;\n  layers.some(function (layer) {\n    if (layer.id == ref) {\n      sourceId = layer.source;\n      return true;\n    }\n  });\n  return sourceId;\n}\n\nfunction extentFromTileJSON(tileJSON, projection) {\n  const bounds = tileJSON.bounds;\n  if (bounds) {\n    const ll = fromLonLat([bounds[0], bounds[1]], projection);\n    const tr = fromLonLat([bounds[2], bounds[3]], projection);\n    return [ll[0], ll[1], tr[0], tr[1]];\n  }\n  return getProjection(projection).getExtent();\n}\n\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n  const tileJSONSource = new TileJSON({\n    tileJSON: tileJSON,\n    tileSize: glSource.tileSize || tileJSON.tileSize || 512,\n  });\n  const tileJSONDoc = tileJSONSource.getTileJSON();\n  const tileGrid = tileJSONSource.getTileGrid();\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const extent = extentFromTileJSON(tileJSONDoc, projection);\n  const projectionExtent = projection.getExtent();\n  const minZoom = tileJSONDoc.minzoom || 0;\n  const maxZoom = tileJSONDoc.maxzoom || 22;\n  /** @type {import(\"ol/source/VectorTile.js\").Options<import(\"ol/render/Feature.js\").default>} */\n  const sourceOptions = {\n    attributions: tileJSONSource.getAttributions(),\n    projection: projection,\n    tileGrid: new TileGrid({\n      origin: projectionExtent\n        ? getTopLeft(projectionExtent)\n        : tileGrid.getOrigin(0),\n      extent: extent || tileGrid.getExtent(),\n      minZoom: minZoom,\n      resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(\n        0,\n        maxZoom + 1,\n      ),\n      tileSize: tileGrid.getTileSize(0),\n    }),\n  };\n  if (Array.isArray(tileJSONDoc.tiles)) {\n    sourceOptions.urls = tileJSONDoc.tiles;\n  } else {\n    sourceOptions.url = tileJSONDoc.tiles;\n  }\n  return sourceOptions;\n}\n\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n  const background = {\n    id: glLayer.id,\n    type: glLayer.type,\n  };\n  const layout = glLayer.layout || {};\n  const paint = glLayer.paint || {};\n  background['paint'] = paint;\n  const zoom = getZoomForResolution(\n    resolution,\n    options.resolutions || defaultResolutions,\n  );\n  let opacity;\n  const bg = getValue(\n    background,\n    'paint',\n    'background-color',\n    zoom,\n    emptyObj,\n    functionCache,\n  );\n  if (paint['background-opacity'] !== undefined) {\n    opacity = getValue(\n      background,\n      'paint',\n      'background-opacity',\n      zoom,\n      emptyObj,\n      functionCache,\n    );\n  }\n  return layout.visibility == 'none'\n    ? undefined\n    : _colorWithOpacity(bg, opacity);\n}\n\n/**\n * @param {Object} glLayer Mapbox/MapLibre Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n  const div = document.createElement('div');\n  div.className = 'ol-mapbox-style-background';\n  div.style.position = 'absolute';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  return new Layer({\n    source: new Source({}),\n    render(frameState) {\n      const color = getBackgroundColor(\n        glLayer,\n        frameState.viewState.resolution,\n        options,\n        functionCache,\n      );\n      div.style.backgroundColor = color;\n      return div;\n    },\n  });\n}\n\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox/MapLibre Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nexport function setupVectorSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function ({tileJson, tileLoadFunction}) {\n        const sourceOptions = sourceOptionsFromTileJSON(\n          glSource,\n          tileJson,\n          options,\n        );\n        sourceOptions.tileLoadFunction = tileLoadFunction;\n        sourceOptions.format = new MVT();\n        resolve(new VectorTileSource(sourceOptions));\n      })\n      .catch(reject);\n  });\n}\n\nfunction setupVectorLayer(glSource, styleUrl, options) {\n  const layer = new VectorTileLayer({\n    declutter: true,\n    visible: false,\n  });\n  setupVectorSource(glSource, styleUrl, options)\n    .then(function (source) {\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\nfunction getBboxTemplate(projection) {\n  const projCode = projection ? projection.getCode() : 'EPSG:3857';\n  return `{bbox-${projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')}}`;\n}\n\nfunction setupRasterSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function ({tileJson, tileLoadFunction}) {\n        const source = new TileJSON({\n          interpolate:\n            options.interpolate === undefined ? true : options.interpolate,\n          transition: 0,\n          crossOrigin: 'anonymous',\n          tileJSON: tileJson,\n        });\n        source.tileGrid = sourceOptionsFromTileJSON(\n          glSource,\n          tileJson,\n          options,\n        ).tileGrid;\n        if (options.projection) {\n          //@ts-ignore\n          source.projection = getProjection(options.projection);\n        }\n        const getTileUrl = source.getTileUrlFunction();\n        if (tileLoadFunction) {\n          source.setTileLoadFunction(tileLoadFunction);\n        }\n        source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n          const bboxTemplate = getBboxTemplate(projection);\n          let src = getTileUrl(tileCoord, pixelRatio, projection);\n          if (src.indexOf(bboxTemplate) != -1) {\n            const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n            src = src.replace(bboxTemplate, bbox.toString());\n          }\n          return src;\n        });\n        source.set('mapbox-source', glSource);\n        resolve(source);\n      })\n      .catch(function (error) {\n        reject(error);\n      });\n  });\n}\n\nfunction setupRasterLayer(glSource, styleUrl, options) {\n  const layer = new TileLayer();\n  setupRasterSource(glSource, styleUrl, options)\n    .then(function (source) {\n      layer.setSource(source);\n    })\n    .catch(function () {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox/MapLibre Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n  const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n  /** @type {ImageLayer<Raster>} */\n  const layer = new ImageLayer({\n    source: new Raster({\n      operationType: 'image',\n      operation: hillshade,\n      sources: [tileLayer],\n    }),\n  });\n  return layer;\n}\n\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n  const geoJsonFormat = options.projection\n    ? new GeoJSON({dataProjection: options.projection})\n    : new GeoJSON();\n  const data = glSource.data;\n  const sourceOptions = {};\n  if (typeof data == 'string') {\n    const [geoJsonUrl] = normalizeSourceUrl(\n      data,\n      options.accessToken,\n      options.accessTokenParam || 'access_token',\n      styleUrl || location.href,\n    );\n    if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n      const extentUrl = (extent, resolution, projection) => {\n        const bboxTemplate = getBboxTemplate(projection);\n        return geoJsonUrl.replace(bboxTemplate, `${extent.join(',')}`);\n      };\n      const source = new VectorSource({\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n        loader: (extent, resolution, projection, success, failure) => {\n          const url =\n            typeof extentUrl === 'function'\n              ? extentUrl(extent, resolution, projection)\n              : extentUrl;\n          fetchResource('GeoJSON', url, options)\n            .then((json) => {\n              const features = /** @type {*} */ (\n                source\n                  .getFormat()\n                  .readFeatures(json, {featureProjection: projection})\n              );\n              source.addFeatures(features);\n              success(features);\n            })\n            .catch((response) => {\n              source.removeLoadedExtent(extent);\n              failure();\n            });\n        },\n        strategy: bboxStrategy,\n      });\n      source.set('mapbox-source', glSource);\n      return source;\n    }\n    const source = new VectorSource({\n      attributions: glSource.attribution,\n      format: geoJsonFormat,\n      url: geoJsonUrl,\n      loader: (extent, resolution, projection, success, failure) => {\n        fetchResource('GeoJSON', geoJsonUrl, options)\n          .then((json) => {\n            const features = /** @type {*} */ (\n              source\n                .getFormat()\n                .readFeatures(json, {featureProjection: projection})\n            );\n            source.addFeatures(features);\n            success(features);\n          })\n          .catch((response) => {\n            source.removeLoadedExtent(extent);\n            failure();\n          });\n      },\n    });\n    return source;\n  }\n  sourceOptions.features = geoJsonFormat.readFeatures(data, {\n    featureProjection: getUserProjection() || 'EPSG:3857',\n  });\n\n  const source = new VectorSource(\n    Object.assign(\n      {\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n      },\n      sourceOptions,\n    ),\n  );\n  source.set('mapbox-source', glSource);\n  return /** @type {VectorSource} */ (source);\n}\n\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n  return new VectorLayer({\n    declutter: true,\n    source: setupGeoJSONSource(glSource, styleUrl, options),\n    visible: false,\n  });\n}\n\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n  let zoom = null;\n  return function (event) {\n    if (\n      glLayer.paint &&\n      'raster-opacity' in glLayer.paint &&\n      event.frameState.viewState.zoom !== zoom\n    ) {\n      zoom = event.frameState.viewState.zoom;\n      delete functionCache[glLayer.id];\n      updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n    }\n  };\n}\n\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n  const opacity = getValue(\n    glLayer,\n    'paint',\n    'raster-opacity',\n    zoom,\n    emptyObj,\n    functionCache,\n  );\n  layer.setOpacity(opacity);\n}\n\nfunction manageVisibility(layer, mapOrGroup) {\n  function onChange() {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    if (!glStyle) {\n      return;\n    }\n    const mapboxLayers = derefLayers(glStyle.layers);\n    const layerMapboxLayerids = layer.get('mapbox-layers');\n    const visible = mapboxLayers\n      .filter(function (mapboxLayer) {\n        return layerMapboxLayerids.includes(mapboxLayer.id);\n      })\n      .some(function (mapboxLayer) {\n        return (\n          !mapboxLayer.layout ||\n          !mapboxLayer.layout.visibility ||\n          mapboxLayer.layout.visibility === 'visible'\n        );\n      });\n    if (layer.get('visible') !== visible) {\n      layer.setVisible(visible);\n    }\n  }\n  layer.on('change', onChange);\n  onChange();\n}\n\nexport function setupLayer(glStyle, styleUrl, glLayer, options) {\n  const functionCache = getFunctionCache(glStyle);\n  const glLayers = glStyle.layers;\n  const type = glLayer.type;\n\n  const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n  const glSource = glStyle.sources[id];\n  let layer;\n  if (type == 'background') {\n    layer = setupBackgroundLayer(glLayer, options, functionCache);\n  } else if (glSource.type == 'vector') {\n    layer = setupVectorLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster') {\n    layer = setupRasterLayer(glSource, styleUrl, options);\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true,\n    );\n    layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n  } else if (glSource.type == 'geojson') {\n    layer = setupGeoJSONLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n    const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n    layer = hillshadeLayer;\n    hillshadeLayer.getSource().on('beforeoperations', function (event) {\n      const data = event.data;\n      data.resolution = getPointResolution(\n        options.projection || 'EPSG:3857',\n        event.resolution,\n        getCenter(event.extent),\n        'm',\n      );\n      const zoom = getZoomForResolution(\n        event.resolution,\n        options.resolutions || defaultResolutions,\n      );\n      data.encoding = glSource.encoding;\n      data.vert =\n        5 *\n        getValue(\n          glLayer,\n          'paint',\n          'hillshade-exaggeration',\n          zoom,\n          emptyObj,\n          functionCache,\n        );\n      data.sunAz = getValue(\n        glLayer,\n        'paint',\n        'hillshade-illumination-direction',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n      data.sunEl = 35;\n      data.opacity = 0.3;\n      data.highlightColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-highlight-color',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n      data.shadowColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-shadow-color',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n      data.accentColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-accent-color',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n    });\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true,\n    );\n  }\n  const glSourceId = id;\n  if (layer) {\n    layer.set('mapbox-source', glSourceId);\n  }\n  return layer;\n}\n\n/**\n * @param {*} glStyle Mapbox/MapLibre Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n  const promises = [];\n\n  let view = null;\n  if (mapOrGroup instanceof Map) {\n    view = mapOrGroup.getView();\n    if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n      const projection = options.projection\n        ? getProjection(options.projection)\n        : view.getProjection();\n      view = new View(\n        Object.assign(view.getProperties(), {\n          maxResolution:\n            defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n          projection: options.projection || view.getProjection(),\n        }),\n      );\n      mapOrGroup.setView(view);\n    }\n\n    if ('center' in glStyle && !view.getCenter()) {\n      view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n    }\n    if ('zoom' in glStyle && view.getZoom() === undefined) {\n      view.setResolution(\n        defaultResolutions[0] /\n          METERS_PER_UNIT[view.getProjection().getUnits()] /\n          Math.pow(2, glStyle.zoom),\n      );\n    }\n    if (!view.getCenter() || view.getZoom() === undefined) {\n      view.fit(view.getProjection().getExtent(), {\n        nearest: true,\n        size: mapOrGroup.getSize(),\n      });\n    }\n  }\n  mapOrGroup.set('mapbox-style', glStyle);\n  mapOrGroup.set('mapbox-metadata', {styleUrl, options});\n\n  const glLayers = glStyle.layers;\n  let layerIds = [];\n\n  let layer, glSourceId, id;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    const type = glLayer.type;\n    if (type == 'heatmap') {\n      //FIXME Unsupported layer type\n      // eslint-disable-next-line no-console\n      console.debug(`layers[${i}].type \"${type}\" not supported`);\n      continue;\n    } else {\n      id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n      // this technique assumes gl layers will be in a particular order\n      if (!id || id != glSourceId) {\n        if (layerIds.length) {\n          promises.push(\n            finalizeLayer(\n              layer,\n              layerIds,\n              glStyle,\n              styleUrl,\n              mapOrGroup,\n              options,\n            ),\n          );\n          layerIds = [];\n        }\n\n        layer = setupLayer(glStyle, styleUrl, glLayer, options);\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          layerIds = [];\n        }\n        glSourceId = layer.get('mapbox-source');\n      }\n      layerIds.push(glLayer.id);\n    }\n  }\n  promises.push(\n    finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options),\n  );\n  return Promise.all(promises);\n}\n\n/**\n * Loads and applies a Mapbox/MapLibre Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox/MapLibre Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox/MapLibre Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox/MapLibre Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox/MapLibre Style document). When passed\n * as style url, layers will be added to the map when the Mapbox/MapLibre Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nexport function apply(mapOrGroupOrElement, style, options = {}) {\n  let promise;\n  /** @type {Map|LayerGroup} */\n  let mapOrGroup;\n  if (\n    typeof mapOrGroupOrElement === 'string' ||\n    mapOrGroupOrElement instanceof HTMLElement\n  ) {\n    mapOrGroup = new Map({\n      target: mapOrGroupOrElement,\n    });\n  } else {\n    mapOrGroup = mapOrGroupOrElement;\n  }\n\n  if (typeof style === 'string') {\n    const styleUrl = style.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(style, options.accessToken);\n    options = completeOptions(styleUrl, options);\n\n    promise = new Promise(function (resolve, reject) {\n      getGlStyle(style, options)\n        .then(function (glStyle) {\n          processStyle(glStyle, mapOrGroup, styleUrl, options)\n            .then(function () {\n              resolve(mapOrGroup);\n            })\n            .catch(reject);\n        })\n        .catch(function (err) {\n          reject(new Error(`Could not load ${style}: ${err.message}`));\n        });\n    });\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      processStyle(\n        style,\n        mapOrGroup,\n        !options.styleUrl || options.styleUrl.startsWith('data:')\n          ? location.href\n          : normalizeStyleUrl(options.styleUrl, options.accessToken),\n        options,\n      )\n        .then(function () {\n          resolve(mapOrGroup);\n        })\n        .catch(reject);\n    });\n  }\n\n  return promise;\n}\n\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nexport function finalizeLayer(\n  layer,\n  layerIds,\n  glStyle,\n  styleUrl,\n  mapOrGroup,\n  options = {},\n) {\n  let minZoom = 24;\n  let maxZoom = 0;\n  const glLayers = glStyle.layers;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    if (layerIds.indexOf(glLayer.id) !== -1) {\n      minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n      maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    const setStyle = function () {\n      const source = layer.getSource();\n      if (!source || source.getState() === 'error') {\n        reject(\n          new Error(\n            'Error accessing data for source ' + layer.get('mapbox-source'),\n          ),\n        );\n        return;\n      }\n      if ('getTileGrid' in source) {\n        const tileGrid =\n          /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */ (\n            source\n          ).getTileGrid();\n        if (tileGrid) {\n          const sourceMinZoom = tileGrid.getMinZoom();\n          if (minZoom > 0 || sourceMinZoom > 0) {\n            layer.setMaxResolution(\n              Math.min(\n                getResolutionForZoom(\n                  Math.max(0, minZoom - 1e-12),\n                  defaultResolutions,\n                ),\n                getResolutionForZoom(\n                  Math.max(0, sourceMinZoom - 1e-12),\n                  tileGrid.getResolutions(),\n                ),\n              ),\n            );\n          }\n          if (maxZoom < 24) {\n            layer.setMinResolution(\n              getResolutionForZoom(maxZoom, defaultResolutions),\n            );\n          }\n        }\n      } else {\n        if (minZoom > 0) {\n          layer.setMaxResolution(\n            getResolutionForZoom(\n              Math.max(0, minZoom - 1e-12),\n              defaultResolutions,\n            ),\n          );\n        }\n      }\n      if (\n        source instanceof VectorSource ||\n        source instanceof VectorTileSource\n      ) {\n        applyStyle(\n          /** @type {import(\"ol/layer/Vector\").default|import(\"ol/layer/VectorTile\").default} */ (\n            layer\n          ),\n          glStyle,\n          layerIds,\n          Object.assign({styleUrl: styleUrl}, options),\n        )\n          .then(function () {\n            manageVisibility(layer, mapOrGroup);\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        resolve();\n      }\n    };\n\n    layer.set('mapbox-layers', layerIds);\n    const layers = mapOrGroup.getLayers();\n    if (layers.getArray().indexOf(layer) === -1) {\n      layers.push(layer);\n    }\n\n    if (layer.getSource()) {\n      setStyle();\n    } else {\n      layer.once('change:source', setStyle);\n    }\n  });\n}\n\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nexport function getMapboxLayer(mapOrGroup, layerId) {\n  const style = mapOrGroup.get('mapbox-style');\n  const layerStyle = style.layers.find(function (layer) {\n    return layer.id === layerId;\n  });\n  return layerStyle;\n}\n\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nexport function addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  let spliceIndex;\n  let sourceIndex = -1;\n  if (beforeLayerId !== undefined) {\n    const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n    if (beforeMapboxLayer === undefined) {\n      throw new Error(`Layer with id \"${beforeLayerId}\" not found.`);\n    }\n    spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n  } else {\n    spliceIndex = mapboxLayers.length;\n  }\n  let sourceOffset;\n  if (\n    spliceIndex > 0 &&\n    mapboxLayers[spliceIndex - 1].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex - 1;\n    sourceOffset = -1;\n  } else if (\n    spliceIndex < mapboxLayers.length &&\n    mapboxLayers[spliceIndex].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex;\n    sourceOffset = 0;\n  }\n  if (sourceIndex === -1) {\n    const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n    const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n    if (beforeLayerId) {\n      const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n      const beforeLayerIndex = mapOrGroup\n        .getLayers()\n        .getArray()\n        .indexOf(beforeLayer);\n      mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n    }\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    return finalizeLayer(\n      layer,\n      [mapboxLayer.id],\n      glStyle,\n      styleUrl,\n      mapOrGroup,\n      options,\n    );\n  }\n\n  if (mapboxLayers.some((layer) => layer.id === mapboxLayer.id)) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" already exists.`);\n  }\n  const sourceLayerId = mapboxLayers[sourceIndex].id;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, sourceLayerId),\n      )\n    ];\n  mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n      sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n  }\n  return Promise.resolve();\n}\n\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nexport function updateMapboxLayer(mapOrGroup, mapboxLayer) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  const index = mapboxLayers.findIndex(function (layer) {\n    return layer.id === mapboxLayer.id;\n  });\n  if (index === -1) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" not found.`);\n  }\n  const oldLayer = mapboxLayers[index];\n  if (oldLayer.source !== mapboxLayer.source) {\n    throw new Error(\n      'Updated layer and previous version must use the same source.',\n    );\n  }\n  delete getFunctionCache(glStyle)[mapboxLayer.id];\n  delete getFilterCache(glStyle)[mapboxLayer.id];\n  mapboxLayers[index] = mapboxLayer;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, mapboxLayer.id),\n      )\n    ];\n  if (args) {\n    applyStylefunction.apply(undefined, args);\n  } else {\n    getLayer(mapOrGroup, mapboxLayer.id).changed();\n  }\n}\n\n/**\n * Updates a Mapbox source object in the style. The according OpenLayers source will be replaced\n * and the map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string} id Key of the source in the `sources` object literal.\n * @param {Object} mapboxSource Mapbox source object.\n * @return {Promise<Source>} Promise that resolves when the source has been updated.\n */\nexport function updateMapboxSource(mapOrGroup, id, mapboxSource) {\n  const currentSource = getSource(mapOrGroup, id);\n  const layers = /** @type {Array<VectorLayer|TileLayer|VectorTileLayer>} */ (\n    mapOrGroup\n      .getLayers()\n      .getArray()\n      .filter(function (layer) {\n        return (\n          (layer instanceof VectorLayer ||\n            layer instanceof TileLayer ||\n            layer instanceof VectorTileLayer) &&\n          layer.getSource() === currentSource\n        );\n      })\n  );\n  const metadata = mapOrGroup.get('mapbox-metadata');\n  let newSourcePromise;\n  switch (mapboxSource.type) {\n    case 'vector':\n      newSourcePromise = setupVectorSource(\n        mapboxSource,\n        metadata.styleUrl,\n        metadata.options,\n      );\n      break;\n    case 'geojson':\n      newSourcePromise = Promise.resolve(\n        setupGeoJSONSource(mapboxSource, metadata.styleUrl, metadata.options),\n      );\n      break;\n    case 'raster':\n    case 'raster-dem':\n      newSourcePromise = setupRasterSource(\n        mapboxSource,\n        metadata.styleUrl,\n        metadata.options,\n      );\n      break;\n    default:\n      return Promise.reject(\n        new Error('Unsupported source type ' + mapboxSource.type),\n      );\n  }\n  newSourcePromise.then(function (newSource) {\n    layers.forEach(function (layer) {\n      layer.setSource(newSource);\n    });\n  });\n  return newSourcePromise;\n}\n\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nexport function removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n  const mapboxLayerId =\n    typeof mapboxLayerIdOrLayer === 'string'\n      ? mapboxLayerIdOrLayer\n      : mapboxLayerIdOrLayer.id;\n  const layer = getLayer(mapOrGroup, mapboxLayerId);\n  /** @type {Array<Object>} */\n  const layerMapboxLayers = layer.get('mapbox-layers');\n  if (layerMapboxLayers.length === 1) {\n    throw new Error(\n      'Cannot remove last Mapbox layer from an OpenLayers layer.',\n    );\n  }\n  layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const layers = glStyle.layers;\n  layers.splice(\n    layers.findIndex((layer) => layer.id === mapboxLayerId),\n    1,\n  );\n  const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      sourceOrLayers.splice(\n        sourceOrLayers.findIndex((layer) => layer === mapboxLayerId),\n        1,\n      );\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayerId).changed();\n  }\n}\n\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox/MapLibre Style\n * `layer`. Note that multiple Mapbox/MapLibre Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox/MapLibre Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nexport function getLayer(map, layerId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const mapboxLayers = layers[i].get('mapbox-layers');\n    if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n      return /** @type {Layer} */ (layers[i]);\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the OpenLayers layer instances for the provided Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox/MapLibre Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nexport function getLayers(map, sourceId) {\n  const result = [];\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    if (layers[i].get('mapbox-source') === sourceId) {\n      result.push(/** @type {Layer} */ (layers[i]));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the OpenLayers source instance for the provided Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox/MapLibre Style source id.\n * @return {Source} OpenLayers source instance.\n */\nexport function getSource(map, sourceId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const source = /** @type {Layer} */ (layers[i]).getSource();\n    if (layers[i].get('mapbox-source') === sourceId) {\n      return source;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nexport function setFeatureState(mapOrLayer, feature, state) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState) {\n      if (state) {\n        featureState[feature.id] = state;\n      } else {\n        delete featureState[feature.id];\n      }\n      layers[i].changed();\n    } else {\n      throw new Error(`Map or layer for source \"${feature.source}\" not found.`);\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nexport function getFeatureState(mapOrLayer, feature) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState && featureState[feature.id]) {\n      return featureState[feature.id];\n    }\n  }\n  return undefined;\n}\n","import BaseEvent from 'ol/events/Event.js';\nimport EventType from 'ol/events/EventType.js';\nimport MVT from 'ol/format/MVT.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource from 'ol/source/VectorTile.js';\nimport {applyBackground, applyStyle} from './apply.js';\n\n/** @typedef {import(\"ol/Map.js\").default} Map */\n\n/**\n * @classdesc\n * Event emitted on configuration or loading error.\n */\nclass ErrorEvent extends BaseEvent {\n  /**\n   * @param {Error} error error object.\n   */\n  constructor(error) {\n    super(EventType.ERROR);\n\n    /**\n     * @type {Error}\n     */\n    this.error = error;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox/MapLibre Style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox/MapLibre style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox/MapLibre style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"ol/layer/Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox/MapLibre Style object will be used. Set to `false` to prevent\n * the Mapbox/MapLibre style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"ol/extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"ol/render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"ol/layer/VectorTile.js\").VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"ol/Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use `map.addLayer()`.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * ```js\n * import {MapboxVectorLayer} from 'ol-mapbox-style';\n * ```\n * A vector tile layer based on a Mapbox/MapLibre style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here',\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * **Note for users of the full build**: The `MapboxVectorLayer` requires the\n * [ol-mapbox-style](https://github.com/openlayers/ol-mapbox-style) library to be loaded as well.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer<import(\"ol/source/VectorTile.js\").default>}\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nexport default class MapboxVectorLayer extends VectorTileLayer {\n  /**\n   * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n   * must be provided.\n   */\n  constructor(options) {\n    const declutter = 'declutter' in options ? options.declutter : true;\n    const source = new VectorTileSource({\n      state: 'loading',\n      format: new MVT(),\n    });\n\n    super({\n      source: source,\n      background: options.background === false ? null : options.background,\n      declutter: declutter,\n      className: options.className,\n      opacity: options.opacity,\n      visible: options.visible,\n      zIndex: options.zIndex,\n      minResolution: options.minResolution,\n      maxResolution: options.maxResolution,\n      minZoom: options.minZoom,\n      maxZoom: options.maxZoom,\n      renderOrder: options.renderOrder,\n      renderBuffer: options.renderBuffer,\n      renderMode: options.renderMode,\n      map: options.map,\n      updateWhileAnimating: options.updateWhileAnimating,\n      updateWhileInteracting: options.updateWhileInteracting,\n      preload: options.preload,\n      useInterimTilesOnError: options.useInterimTilesOnError,\n      properties: options.properties,\n    });\n\n    if (options.accessToken) {\n      this.accessToken = options.accessToken;\n    }\n    const url = options.styleUrl;\n    const promises = [\n      applyStyle(this, url, options.layers || options.source, {\n        accessToken: this.accessToken,\n      }),\n    ];\n    if (this.getBackground() === undefined) {\n      promises.push(\n        applyBackground(this, options.styleUrl, {\n          accessToken: this.accessToken,\n        }),\n      );\n    }\n    Promise.all(promises)\n      .then(() => {\n        source.setState('ready');\n      })\n      .catch((error) => {\n        this.dispatchEvent(new ErrorEvent(error));\n        const source = this.getSource();\n        source.setState('error');\n      });\n  }\n}\n"],"names":["fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","black","fat","poster","sp","italicRE","fontCache","fonts","size","lineHeight","cssData","Array","isArray","haveWeight","haveStyle","weight","style","fontFamilies","i","ii","length","parts","split","maybeWeight","toLowerCase","w","pop","test","replace","previousPart","startsWith","fontFamily","join","indexOf","push","v8Spec","$version","$root","version","required","type","values","name","metadata","center","value","centerAltitude","zoom","bearing","default","period","units","pitch","roll","sky","projection","terrain","sources","sprite","glyphs","transition","layers","source","source_vector","vector","url","tiles","bounds","scheme","xyz","tms","minzoom","maxzoom","attribution","promoteId","volatile","source_raster","raster","tileSize","source_raster_dem","encoding","terrarium","mapbox","custom","redFactor","blueFactor","greenFactor","baseShift","source_geojson","geojson","data","buffer","maximum","minimum","filter","tolerance","cluster","clusterRadius","clusterMaxZoom","clusterMinPoints","clusterProperties","lineMetrics","generateId","source_video","video","urls","coordinates","source_image","image","layer","id","fill","line","symbol","circle","heatmap","hillshade","background","layout","paint","layout_background","visibility","visible","none","layout_fill","expression","interpolated","parameters","layout_circle","layout_heatmap","layout_line","butt","round","square","bevel","miter","requires","layout_symbol","point","auto","never","always","cooperative","map","viewport","width","height","both","tokens","left","right","top","bottom","horizontal","vertical","uppercase","lowercase","layout_raster","layout_hillshade","filter_operator","in","all","any","has","geometry_type","Point","LineString","Polygon","function","stops","base","property","identity","exponential","interval","categorical","colorSpace","rgb","lab","hcl","function_stop","anchor","position","color","intensity","exaggeration","paint_fill","paint_line","paint_circle","paint_heatmap","paint_symbol","overridable","paint_raster","linear","nearest","paint_hillshade","paint_background","duration","delay","constant","refProperties","deref","parent","result","k","forEach","derefLayers","slice","Object","create","ref","ExpressionParsingError","Error","constructor","key","message","super","this","Scope","bindings","concat","get","NullType","kind","NumberType","StringType","BooleanType","ColorType","ProjectionDefinitionType","ObjectType","ValueType","CollatorType","FormattedType","PaddingType","ResolvedImageType","VariableAnchorOffsetCollectionType","array","itemType","N","typeToString","valueMemberTypes","checkSubtype","expected","t","memberType","isValidType","provided","allowedTypes","some","isValidNativeType","verifyType","sample","Xn","Yn","Zn","t0","t1","t2","t3","deg2rad","Math","PI","rad2deg","constrainAngle","angle","rgbToLab","r","g","b","alpha","x","z","y","xyz2lab","rgb2xyz","l","pow","labToRgb","a","isNaN","lab2xyz","xyz2rgb","parseCssColor","input","trim","namedColorsMatch","namedColors","step","parseHex","rgbRegExp","rgbMatch","match","_","rp","f1","gp","f2","bp","f3","ap","argFormat","valFormat","maxValue","rgba","clamp","parseAlpha","validateNumbers","hslMatch","h","s","hsla","f","n","min","max","hslToRgb","hex","parseInt","padEnd","asPercentage","Number","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","interpolateNumber","from","to","interpolateArray","d","Color","premultiplied","overwriteGetter","parse","Infinity","rgbColor","c","sqrt","atan2","NaN","rgbToHcl","getterKey","lazyValue","defineProperty","toString","interpolate","spaceKey","hue0","chroma0","light0","alphaF","hue1","chroma1","light1","alphaT","hue","chroma","dh","cos","sin","hclToRgb","transparent","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","compare","lhs","rhs","resolvedLocale","resolvedOptions","VERTICAL_ALIGN_OPTIONS","FormattedSection","text","scale","fontStack","textColor","verticalAlign","Formatted","sections","fromString","unformatted","isEmpty","section","factory","Padding","val","JSON","stringify","RuntimeError","toJSON","anchors","Set","VariableAnchorOffsetCollection","anchorValue","offsetValue","fromValues","toValues","output","fx","fy","tx","ty","ResolvedImage","options","available","ProjectionDefinition","validateRGBA","isValue","mixed","item","typeOf","valueToString","String","Literal","args","context","error","expectedType","evaluate","eachChild","outputDefined","types$1","string","number","boolean","object","Assertion","floor","parsed","ctx","fn","every","arg","types","Coercion","Boolean","parseColor","pad","coll","num","geometryTypes","EvaluationContext","globals","feature","featureState","formattedSection","_parseColorCache","availableImages","canonical","geometryType","geometry","canonicalID","properties","cached","ParsingContext","registry","isConstantFunc","path","scope","errors","part","_isConstant","expr","index","_parse","annotate","typeAnnotation","op","Expr","actual","ec","e","keys","Let","binding","Var","boundExpression","At","In","needle","haystack","IndexOf","fromIndex","rawIndex","Match","inputType","outputType","cases","outputs","otherwise","labels","labelContext","label","abs","MAX_SAFE_INTEGER","out","Case","branches","Slice","beginIndex","endIndex","findStopLessThanOrEqualTo","lastIndex","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labelKey","valueKey","stopCount","getDefaultExportFromCjs","__esModule","prototype","hasOwnProperty","call","unitbezier","hasRequiredUnitbezier","unitbezierExports","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","undefined","x2","d2","solve","requireUnitbezier","Interpolate","operator","interpolation","interpolationFactor","lower","upper","exponentialInterpolation","controlPoints","rest","outputLower","outputUpper","lowerValue","upperValue","difference","progress","Coalesce","parsedArgs","needsAnnotation","requestedImageName","argCount","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","rt","Equals","NotEquals","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","CollatorExpression","NumberFormat","currency","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","format","FormatExpression","firstArg","nextTokenMayBeObject","font","includes","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","Length","EXTENT","getTileCoordinates","p","lat","log","tilesAtZoom","getLngLatFromTileCoord","coord","mercatorX","mercatorY","atan","exp","updateBBox","bbox","boxWithinBox","bbox1","bbox2","pointOnBoundary","p1","p2","x1","y1","y2","segmentIntersectSegment","vectorP","vectorQ","v1","v2","twoSided","lineIntersectPolygon","polygon","ring","j","pointWithinPolygon","rings","trueIfOnBoundary","inside","pointWithinPolygons","polygons","lineStringWithinPolygon","lineStringWithinPolygons","q1","q2","x3","y3","det1","det2","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","shift","getTilePoints","pointBBox","shifts","tilePoints","points","getTileLines","lineBBox","tileLines","tileLine","Within","geometries","polygonsCoords","features","polygonGeometry","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","TinyQueue","_down","_up","peek","pos","current","halfLength","bestChild","quickselect","arr","defaultCompare","m","sd","swap","tmp","compareAreas","area","calculateSignedArea","sum","len","FE","E2","RAD","CheapRuler","coslat","w2","kx","ky","distance","dx","wrap","dy","pointOnLine","minX","minY","minI","minT","minDist","sqDist","deg","MinPointsSize","MinLinePointsSize","compareDistPair","getRangeSize","range","isRangeSafe","threshold","splitRange","isLine","size1","getBBox","coords","getPolygonBBox","isValidBBox","bboxToBBoxDistance","ruler","pointToLineDistance","nearestPoint","segmentToSegmentDistance","dist1","dist2","lineToLineDistance","line1","range1","line2","range2","dist","pointsToPointsDistance","points1","points2","pointToPolygonDistance","front","back","lineToPolygonDistance","polygonIntersect","poly1","poly2","polygonToPolygonDistance","polygon1","polygon2","currentMiniDist","ring1","len1","ring2","len2","updateQueue","distQueue","miniDist","rangeA","tempDist","updateQueueTwoSets","pointSet1","pointSet2","pointsToPolygonDistance","distPair","newRangesA","pointSetToPointSetDistance","isLine1","isLine2","rangeB","threshold1","threshold2","sublibe","newRangesB","polygonToGeometryDistance","maxRings","ccw","classifyRings","toSimpleGeometry","lineString","Distance","flat","pointPosition","pointToGeometryDistance","linePositions","lineStringToGeometryDistance","expressions$1","at","case","coalesce","let","literal","var","within","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","signature","signatureContext","params","isExpressionConstant","argParseFailed","signatures","stringifySignature","actualTypes","register","obj","v","varargs","isTypeAnnotation","childrenConstant","child","isFeatureConstant","isGlobalPropertyConstant","isStateConstant","success","isFunction$1","typeof","heatmapDensity","lineProgress","accumulated","ln2","LN2","pi","E","log10","LN10","ln","log2","asin","acos","ceil","binarySearch","isSupportedScript","upcase","toUpperCase","downcase","StyleExpression","propertySpec","spec","_warningHistory","_evaluator","_defaultValue","_enumValues","evaluateWithoutErrorHandling","console","warn","createExpression","parser","enum","formatted","padding","projectionDefinition","resolvedImage","variableAnchorOffsetCollection","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","zoomStops","interpolationType","createPropertyExpression","expressionInput","isFeatureConstantResult","isZoomConstant","supportsZoomExpression","zoomCurve","findZoomCurve","supportsInterpolation","childResult","isExpressionFilter","filterSpec","featureFilter","needGeometry","convertFilter$1","compiled","err","globalProperties","geometryNeeded","filters","convertComparisonOp$1","convertNegation","convertInOp$1","convertHasOp$1","sort","convertLiteral","convertFunction","splice","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","stop","convertTokenString","featureFunctionParameters","featureFunctionStops","functionType","getFunctionType","getInterpolateOperator","appendStopPair","convertPropertyFunction","fixupDegenerateStepCurve","convertZoomAndPropertyFunction","isStep","convertZoomFunction","getFallback","defaultValue","curve","re","exec","v8","mapboxBaseUrl","getMapboxPath","normalizeStyleUrl","token","mapboxPath","decodeURI","URL","location","href","mapboxSubdomains","normalizeSourceUrl","tokenParam","styleUrl","urlObject","searchParams","set","sizeFactor","window","devicePixelRatio","sub","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","getStyleFunctionKey","olLayer","getUid","getFunctionCache","functionCache","getFilterCache","filterCache","degrees","defaultResolutions","resolutions","res","createCanvas","WorkerGlobalScope","self","OffscreenCanvas","canvas","document","createElement","getZoomForResolution","resolution","zoomFactor","getResolutionForZoom","factor","pendingRequests","fetchResource","resourceType","request","transformedRequest","transformRequest","pendingRequest","toPromise","then","Request","headers","fetch","response","ok","json","Promise","reject","catch","getGlStyle","glStyleOrUrl","resolve","accessToken","tilejsonCache","getTileJson","glSource","cacheKey","promise","tileLoadFunction","tile","src","VectorTile","setLoader","extent","arrayBuffer","getFormat","readFeatures","featureProjection","setFeatures","setState","TileState","ERROR","img","getImage","blob","createObjectURL","addEventListener","revokeObjectURL","normalizedSourceUrl","accessTokenParam","tileJson","assign","tileUrl","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imgSize","pixelRatio","imageCanvas","imageContext","getContext","drawImage","imageData","getImageData","globalCompositeOperation","fillStyle","jj","arc","smoothstep","drawSDF","gamma","putImageData","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","measureContext","getMeasureContext","measureText","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","fontFamilyRegEx","stripQuotesRegEx","loadedFontFamilies","hasFontFamily","family","styleSheets","styleSheet","cssRules","rules","cssRule","cssText","processedFontFamilies","MultiPoint","MultiLineString","MultiPolygon","expressionData","rawExpression","compiledExpression","emptyObj","zoomObj","renderFeatureCoordinates","renderFeature","getValue","layoutOrPaint","layerId","functions","isExpr","isFunction","bind","getDeclutterMode","prefix","evaluateFilter","createFilter","renderTransparentEnabled","colorWithOpacity","opacity","templateRegEx","fromTemplate","recordLayer","styleFunctionArgs","stylefunction","sourceOrLayers","spriteData","spriteImageUrl","getFonts","spriteImageSize","spriteImageUnSDFed","arguments","Image","blobUrl","crossOrigin","onload","changed","worker","postMessage","action","event","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","Stroke","Fill","styles","styleFunction","onlyLayer","getProperties","getGeometry","getType","getId","featureBelongsToLayer","stylesLength","layerData","stroke","strokeColor","fillIcon","icon","getFill","getStroke","getText","Style","setZIndex","icon_cache_key","pattern","globalAlpha","createPattern","setColor","setWidth","setLineCap","setLineJoin","setMiterLimit","setLineDash","iconImg","skipLabel","textLineHeight","textSize","maxTextWidth","hasImage","placementAngle","iconImage","styleGeom","imageElement","iconRotationAlignment","geom","getFlatMidpoint","getFlatMidpoints","getExtent","midpoint","RenderFeature","stride","getStride","getFlatCoordinates","maxX","xM","dotProduct","iconSize","iconColor","iconCacheKey","declutterMode","displacement","iconOptions","rotateWithView","Icon","offset","sdf","setGeometry","setRotation","setOpacity","setAnchor","setImage","setText","circleRadius","circleStrokeColor","circleTranslate","circleColor","circleStrokeWidth","cache_key","Circle","radius","fontArray","mb2css","textField","reduce","acc","chunk","chunkFont","Text","textTransform","wrappedLabel","setFont","setKeepUpright","keepUpright","textAnchor","placement","textAlign","setPlacement","setRepeat","symbolSpacing","setOverflow","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","setRotateWithView","setMaxAngle","setTextAlign","textBaseline","setTextBaseline","textJustify","setJustify","setOffsetX","setOffsetY","setFill","halfTextSize","setStroke","textPadding","getPadding","setStyle","inputs","elevationImage","elevationData","shadeData","Uint8ClampedArray","dp","maxY","pixel","twoPi","halfPi","sunEl","sunAz","cosSunEl","sinSunEl","highlightColor","shadowColor","accentColor","pixelX","pixelY","x0","y0","z0","z1","dzdx","dzdy","slope","aspect","accent","scaled","shade","scaledAccentColor","compositeShadeColor","slopeScaleBase","scaledSlope","cosIncidence","calculateElevation","vert","ImageData","getTileResolutions","createXYZ","maxZoom","getResolutions","completeOptions","applyStyle","sourceOrLayersOrOptions","optionsOrPath","sourceId","updateSource","VectorLayer","VectorTileLayer","find","assignSource","setupVectorSource","targetSource","getSource","setTileUrlFunction","getTileUrlFunction","setUrls","getUrls","format_","getAttributions","setAttributions","getTileLoadFunction","defaultLoadFunction","setTileLoadFunction","equivalent","getProjection","tileGrid","getTileGrid","setSource","isFinite","getMaxResolution","getMinZoom","setMaxResolution","setupGeoJSONSource","url_","getUrl","spriteScale","onChange","getUnits","METERS_PER_UNIT","applyStylefunction","templateUrl","webfonts","fontsKey","fontDescriptions","cssFont","registerFont","fontDescription","checkedFonts","fontUrl","querySelector","markup","rel","head","appendChild","getStyle","normalizeSpriteUrl","spriteUrl","origin","pathname","search","spritesJson","transformed","applyBackground","mapOrLayer","Layer","setBackground","getBackgroundColor","Map","LayerGroup","getLayers","insertAt","setupBackgroundLayer","setFirstBackground","getSourceIdByRef","sourceOptionsFromTileJSON","tileJSON","tileJSONSource","TileJSON","tileJSONDoc","getTileJSON","fromLonLat","tr","extentFromTileJSON","projectionExtent","minZoom","sourceOptions","attributions","TileGrid","getTopLeft","getOrigin","getTileSize","glLayer","bg","_colorWithOpacity","div","className","Source","render","frameState","viewState","backgroundColor","MVT","VectorTileSource","getBboxTemplate","getCode","setupRasterSource","getTileUrl","tileCoord","bboxTemplate","getTileCoordExtent","setupRasterLayer","TileLayer","geoJsonFormat","GeoJSON","dataProjection","geoJsonUrl","extentUrl","VectorSource","loader","failure","addFeatures","removeLoadedExtent","strategy","bboxStrategy","getUserProjection","prerenderRasterLayer","updateRasterLayerProperties","setupLayer","glLayers","declutter","setupVectorLayer","setVisible","on","setupGeoJSONLayer","hillshadeLayer","tileLayer","ImageLayer","Raster","operationType","operation","setupHillshadeLayer","getPointResolution","getCenter","glSourceId","processStyle","mapOrGroup","promises","view","getView","isDef","getRotation","View","maxResolution","setView","setCenter","getZoom","setResolution","fit","getSize","layerIds","finalizeLayer","debug","apply","mapOrGroupOrElement","HTMLElement","target","getState","sourceMinZoom","setMinResolution","layerMapboxLayerids","mapboxLayer","manageVisibility","getArray","once","getMapboxLayer","layerStyle","getLayer","ErrorEvent","BaseEvent","EventType","MapboxVectorLayer","state","zIndex","minResolution","renderOrder","renderBuffer","renderMode","updateWhileAnimating","updateWhileInteracting","preload","useInterimTilesOnError","getBackground","dispatchEvent","beforeLayerId","spliceIndex","sourceOffset","sourceIndex","beforeMapboxLayer","beforeLayer","beforeLayerIndex","sourceLayerId","layerIndex","evaluateStyle","getStyleFunction","record","mapboxLayerIdOrLayer","mapboxLayerId","layerMapboxLayers","findIndex","enabled","clearFunctionCache","currentSource","newSourcePromise","newSource"],"mappings":"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"}